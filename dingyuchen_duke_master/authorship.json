[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 22,
      "-": 19
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "     * Creates an AddCommand that contains a given Task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    AddCommand(Task task) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private String generateResponse(TodoList tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        String[] lines \u003d {\"Got it. I\u0027ve added this task: \","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                          \"\\t\" + this.task.toString(),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                          String.format(\"Now you have %d tasks in the list.\", tasks.length())};"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return String.join(\"\\n\", lines);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "     * Adds a task into TodoList tasks and saves into storage"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String run(TodoList tasks, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        tasks.add(this.task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        super.run(tasks, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return this.generateResponse(tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 34
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String run(TodoList tasks, Storage storage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 8
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    String saveFormat() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return \"D|\" + super.saveFormat();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 20
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    DeleteCommand(int index) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private String generateResponse(Task deleted, TodoList tasks) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        String[] lines \u003d {\"Noted. I\u0027ve removed this task: \","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                          \"\\t\" + deleted.toString(),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                          String.format(\"Now you have %d tasks in the list\", tasks.length())};"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return String.join(\"\\n\", lines);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String run(TodoList tasks, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        if (index \u003e tasks.length()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            throw new DukeException(\"OOPS!!! That\u0027s an invalid index\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        Task deleted \u003d tasks.delete(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        super.run(tasks, storage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return this.generateResponse(deleted, tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 29
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    DoneCommand(int index) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String run(TodoList tasks, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        if (index \u003e tasks.length()) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            throw new DukeException(\"OOPS!!! That\u0027s an invalid index\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        Task completed \u003d tasks.markAsDone(this.index);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        super.run(tasks, storage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n  \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                + completed.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 23
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private TodoList tasks;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private Duke(String s) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        storage \u003d new Storage(s);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        tasks \u003d storage.load();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.ui.welcome();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                Command command \u003d this.ui.getUserInput();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                String response \u003d command.run(tasks, storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                this.ui.printResponse(response);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                if (command.isExit()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                this.ui.printErrorMessage(e);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        Duke duke \u003d new Duke(\"/home/dingyuchen/cs2103/duke/src/main/data/duke.ser\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 30,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "class DukeException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private Date startPeriod;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private Date endPeriod;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    Event(String description, String period) throws ParseException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        String[] periods \u003d period.split(\"-\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.startPeriod \u003d this.formatter.parse(periods[0]);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.endPeriod \u003d this.formatter.parse(periods[1]);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    Event(String description, Date startPeriod, Date endPeriod) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.startPeriod \u003d startPeriod;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.endPeriod \u003d endPeriod;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    String saveFormat() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return \"E|\" + super.saveFormat();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return \"[E]\" + super.toString() + String.format(\" (at: %s - %s )\", startPeriod, endPeriod);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 32
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String run(TodoList tasks, Storage storage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 12
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private final String heading \u003d \"Here are the matching tasks in your list: \\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    FindCommand(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String run(TodoList tasks, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        List\u003cTask\u003e matches \u003d tasks.find(this.description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return heading + matches.stream().map(task -\u003e \"\\t\" + task.toString())"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                                .collect(Collectors.joining(\"\\n\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 25
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String run(TodoList tasks, Storage storage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return tasks.toString();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 12
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private static HashSet\u003cString\u003e keywords;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private static SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        keywords \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        keywords.add(\"bye\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        keywords.add(\"done\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        keywords.add(\"todo\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        keywords.add(\"event\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        keywords.add(\"deadline\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        keywords.add(\"list\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        keywords.add(\"delete\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        keywords.add(\"find\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    static Command parse(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        if (!keywords.contains(args[0])) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        switch (args[0]) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(args[1]));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            return new FindCommand(getArguments(args));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            return new DoneCommand(Integer.parseInt(args[1]));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            return new AddCommand(parseTask(args));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private static String getArguments(String[] args) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return String.join(\" \", Arrays.copyOfRange(args, 1, args.length));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private static Task parseTask(String[] args) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        String[] description \u003d Arrays.copyOfRange(args, 1, args.length);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            switch (args[0]) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                if (description.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                return new Todo(description);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            case \"deadline\": {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                String[] details \u003d String.join(\" \", description).split(\"/by\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The deadline of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                return new Deadline(details[0].trim(), formatter.parse(details[1].trim()));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            case \"event\": {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                String[] details \u003d String.join(\" \", description).split(\"/at\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The duration of an event cannot be empty.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                String[] dates \u003d details[1].trim().split(\"-\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                Date startPeriod \u003d formatter.parse(dates[0].trim());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                Date endPeriod \u003d formatter.parse(dates[1].trim());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                return new Event(details[0].trim(), startPeriod, endPeriod);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            throw new DukeException(\"Dates must have proper format!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 80
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private final String fileName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    Storage(String s) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.fileName \u003d s;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    void save(TodoList todoList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            FileOutputStream fos \u003d new FileOutputStream(fileName);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            oos.writeObject(todoList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            oos.close();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            System.out.println(\"Something has gone wrong.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    TodoList load() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        TodoList todoList \u003d new TodoList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            FileInputStream fileInputStream \u003d new FileInputStream(fileName);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            ObjectInputStream objectInputStream \u003d new ObjectInputStream(fileInputStream);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            todoList \u003d (TodoList) objectInputStream.readObject();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            objectInputStream.close();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            System.out.println(\"File is not found\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            System.out.println(\"Something went wrong!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            System.out.println(\"Classes are not loaded\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return todoList;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 44
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    String saveFormat() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return String.format(\"%s|%s\", this.description, this.isDone);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 29
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    Todo(String[] description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        super(String.join(\" \", description));"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    String saveFormat() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return \"T|\" + super.saveFormat();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 20
    }
  },
  {
    "path": "src/main/java/TodoList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.ListIterator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class TodoList implements Serializable {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    TodoList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    void add(Task task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    Task markAsDone(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        Task task \u003d list.get(index - 1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    Task delete(int index) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return list.remove(index - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    int length() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        if (this.list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        ListIterator\u003cTask\u003e listIterator \u003d this.list.listIterator();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        while (listIterator.hasNext()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            sb.append(listIterator.nextIndex() + 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            sb.append(\".\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            sb.append(listIterator.next());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        sb.delete(sb.length() - 1, sb.length());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    List\u003cTask\u003e find(String description) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return  this.list.stream()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                .filter(task -\u003e task.toString().contains(description))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 55
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private final String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private final String line \u003d \"______________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    void welcome() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo + \"\\nWhat can I do for you ?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    Command getUserInput() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        String[] input \u003d this.scanner.nextLine().trim().split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return Parser.parse(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    void printResponse(String response) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        System.out.println(encase(response));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    void printErrorMessage(DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        System.out.println(encase(e.getMessage()));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    private String encase(String message) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        return String.join(\"\\n\", new String[]{line, message, line});"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 36
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    void parserTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(new String[]{\"gibberish\"}));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    void addTaskTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        TodoList todoList \u003d new TodoList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        todoList.add(new Todo(\"desc\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        assertEquals(1, todoList.length());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "        todoList.delete(1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dingyuchen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dingyuchen": 19
    }
  }
]
