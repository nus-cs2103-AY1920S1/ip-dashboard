[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 23,
      "-": 18
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": "E | 0 | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "T | 1 | join sports club"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "D | 0 | project | 2nd of December 2019, 6:00 PM"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "E | 1 | marriage | 2nd of December 2019, 6:00 PM"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "D | 1 | cs2103 | 2nd of December 2019"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "T | 1 | project"
      }
    ],
    "authorContributionMap": {
      "Alaete": 7
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "Alaete": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/duke/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates date \u0026 time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    private static String[] suffixes \u003d { \"th\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", \"th\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        \"th\", \"th\", \"st\" };"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Parses date and time."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param input  Date and time to be parsed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Date and time in the indicated output format if input format is a match, and original input otherwise."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public static String parse(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        Date dateTime \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String output \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        SimpleDateFormat inputFormat \u003d new SimpleDateFormat(\"d/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        SimpleDateFormat outputFormat \u003d new SimpleDateFormat(\"MMMMM yyyy, h:mm a\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            dateTime \u003d inputFormat.parse(input);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return input;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        SimpleDateFormat dayOfMonth \u003d new SimpleDateFormat(\"d\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        int day \u003d Integer.parseInt(dayOfMonth.format(dateTime));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String dayWithSuffix \u003d day + suffixes[day];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        output \u003d outputFormat.format(dateTime);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return (dayWithSuffix + \" of \" + output);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 37
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.lang.String;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a chat bot."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected static final String DUKE_FILE \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected Parser parser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a Duke object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param filePath  Path to saved data file on hard disk."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            this.taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Initiates a full run of the chat bot."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        runUntilByeCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Starts the chat bot."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Runs the chat bot."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void runUntilByeCommand() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        boolean isBye \u003d false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        while (!isBye) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                String input \u003d ui.input();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                Command command \u003d parser.parse(input);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                command.execute(storage, taskList, ui);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                isBye \u003d command.isBye();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Exits the chat bot."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        ui.showByeMessage();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Main method. Initiates a full run of a chat bot tied to a specific saved data file on the hard disk."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param args The command line arguments."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        new Duke(DUKE_FILE).run();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Alaete": 80,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a generic exception for the Duke project."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a DukeException object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param message  Message describing the exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 15
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a parser."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Parses user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param input  User input received by the chat bot."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Command described by user input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @throws DukeException  If description of todo is empty or input format is invalid."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            int doneIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1; // possible error here"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return new DoneCommand(doneIndex);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            int deleteIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1; // possible error here"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return new DeleteCommand(deleteIndex);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            System.out.println(\"here.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            input \u003d input.replaceFirst(\"^find\", \"\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            String keyword \u003d input.substring(input.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return new FindCommand(keyword);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } else { // add task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                input \u003d input.replaceFirst(\"^todo\", \"\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                if (input.substring(input.indexOf(\" \") + 1).isEmpty()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    task \u003d new ToDo(input.substring(input.indexOf(\" \") + 1));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                task \u003d new Deadline(input.substring(input.indexOf(\" \") + 1, input.indexOf(\"/\") - 1),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        DateTime.parse(input.substring(input.indexOf(\"/\") + 4)));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                task \u003d new Event(input.substring(input.indexOf(\" \") + 1, input.indexOf(\"/\") - 1),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        DateTime.parse(input.substring(input.indexOf(\"/\") + 4)));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return new AddCommand(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 63
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a file pointer."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a Storage object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param filePath  Path to saved data file on hard disk."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Loads data from hard disk."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Data from hard disk in the form of a List of Tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @throws DukeException  If file is not found."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            FileReader fileReader \u003d new FileReader(this.filePath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                taskList.add(Task.convertStringToTask(line));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            throw new DukeException(\"\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Updates data in hard disk."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param taskList  Task list with modifications from user interaction via the chat bot."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @throws DukeException  If file cannot be updated."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void update(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            for (Iterator iterator \u003d taskList.iterator(); iterator.hasNext(); index++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                if (index \u003e 1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    bufferedWriter.write(\"\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                task \u003d (Task) iterator.next();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                bufferedWriter.write(task.convertTaskToString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            throw new DukeException(\"Failed to update file.\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 78
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a TaskList object with saved data on hard disk."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param taskList  Task list data retrieved from hard disk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a TaskList object with no prior data."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Lists tasks in task list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Tasks in task list as a string."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String list() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        for (Iterator iterator \u003d taskList.iterator(); iterator.hasNext(); index++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            message \u003d message + index + \".\" + iterator.next() + \"\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Retrieves task at a given index."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param index  Index of task to be retrieved."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Task at given index."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Removes task at a given index."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param index  Index of task to be removed."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Task at given index."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return taskList.remove(index);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Returns size of task list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Size of the task list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Adds task to task list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param task  Task to be added."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Retrieves list of tasks containing keyword."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param keyword  Keyword to be searched for."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return List of tasks containing keyword as a String."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String find(String keyword) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        for (Iterator iterator \u003d taskList.iterator(); iterator.hasNext(); i++) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            Task current \u003d (Task) iterator.next();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            if (current.containsKeyword(keyword)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                message \u003d message + index + \".\" + current + \"\\n\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Returns iterator of task list."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Iterator of the task list."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public Iterator iterator() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return taskList.iterator();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 111
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a user interface."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected static final String INDENTATION \u003d \"    \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected static final String LOGO \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "              \" ____        _        \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected final Scanner in;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected final PrintStream out;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a Ui object with system IO."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a Ui object with given input and output stream."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param in  Input stream."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param out  Output stream."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public Ui(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Outputs messages in the chat bot format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param messages  Messages to be printed in the chat bot format."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void output(String... messages) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        out.println(INDENTATION + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        for (String message : messages) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            out.print(INDENTATION + message.replace(\"\\n\", \"\\n\" + INDENTATION));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        out.println(HORIZONTAL_LINE + \"\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Reads next line of user input."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Line of user input."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String input() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Outputs tasks in task list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param taskList   Task list to be output."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void showTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        output(\"Here are the tasks in your list:\\n\" + taskList.list());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Outputs message indicating that action of marking a task as done was a success."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param task   Task marked as done."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void showDoneMessage(Task task) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        output(\"Nice! I\u0027ve marked this task as done:\\n\" + task + \"\\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Outputs message indicating that action of deleting a task was a success."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param size  Size of task list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param task   Task deleted."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void showDeleteMessage(int size, Task task) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        if (size \u003d\u003d 1) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            output(\"Noted. I\u0027ve removed this task: \\n\" + task + \"\\n\" + \"Now you have \""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    + size + \" task in the list.\\n\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            output(\"Noted. I\u0027ve removed this task: \\n\" + task + \"\\n\" + \"Now you have \""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    + size + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Outputs message indicating that action of adding a task was a success."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param size  Size of task list."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param task   Task added."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void showAddMessage(int size, Task task) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        if (size \u003d\u003d 1) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            output(\"Got it. I\u0027ve added this task: \\n\" + task + \"\\n\" + \"Now you have \""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    + size + \" task in the list.\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            output(\"Got it. I\u0027ve added this task: \\n\" + task + \"\\n\" + \"Now you have \""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    + size + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Outputs welcome message."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        output(\"Hello from\\n\" + LOGO + \"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Outputs goodbye message."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void showByeMessage() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        output(\"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Outputs message indicating that action of searching for a keyword was a success, and results of that search."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param taskList  Task list to be searched."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param keyword   Keyword to be searched for."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void showFindMessage(TaskList taskList, String keyword) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        output(\"Here are the matching tasks in your list:\\n\" + taskList.find(keyword));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Outputs message indicating a loading error."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        output(\"File not found.\\n\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Outputs message describing an error."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param error  Description of error to be output."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        output(error);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 154
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a command to add task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected final Task task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs an AddCommand object with a task to be added."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param task  Task to be added."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Executes the command, adding the task to the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param storage  Data file of chat bot."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param taskList  Task list of chat bot."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param ui  User interface of chat bot."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @throws DukeException  If data file pointed to by storage cannot be updated."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        storage.update(taskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        ui.showAddMessage(taskList.size(), task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 39
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a command to end chat bot."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs an ByeCommand object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Overrides execute method in abstract superclass."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Flags command as a command to end chat bot."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return True, indicating that command is indeed a command to end chat bot."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 35
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs an Command object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    Command() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Abstract method to execute command, to be overridden by child classes."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param storage  Data file of chat bot."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param taskList  Task list of chat bot."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param ui  User interface of chat bot."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @throws DukeException  If data file pointed to by storage cannot be updated."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public abstract void execute(Storage storage, TaskList taskList, Ui ui) throws DukeException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Flags command as not a command to end chat bot."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return False, indicating that command is not a command to end chat bot."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Alaete": 37
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a command to delete task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected final int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a DeleteCommand object with index of task to be deleted."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param index  Index of task to be deleted."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Executes the command, deleting the task associated with the index from the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param storage  Data file of chat bot."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param taskList  Task list of chat bot."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param ui  User interface of chat bot."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @throws DukeException  If data file pointed to by storage cannot be updated."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        Task task \u003d taskList.remove(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        storage.update(taskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        ui.showDeleteMessage(taskList.size(), task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 39
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a command to mark a task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected final int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a DoneCommand object with index of task to be marked as done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param index  Index of task to be marked as done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Executes the command, marking the task associated with the index as done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param storage  Data file of chat bot."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param taskList  Task list of chat bot."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param ui  User interface of chat bot."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @throws DukeException  If data file pointed to by storage cannot be updated."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        Task task \u003d taskList.get(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        storage.update(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        ui.showDoneMessage(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 40
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a command to find tasks in the task list containing keyword."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected final String keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a FindCommand object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param keyword  Keyword to be searched for."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Executes the command, listing all tasks in the task list containing the keyword."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param storage  Data file of chat bot."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param taskList  Task list of chat bot."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param ui  User interface of chat bot."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        ui.showFindMessage(taskList, keyword);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 34
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a command to list all tasks in the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a ListCommand object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Executes the command, listing all tasks in the task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param storage  Data file of chat bot."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param taskList  Task list of chat bot."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param ui  User interface of chat bot."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        ui.showTaskList(taskList);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 30
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a deadline task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a Deadline object with description, and date and time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param description  Description of deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param by  Date and time of deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Converts the deadline task to String format to write to hard disk."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Deadline task in String format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String convertTaskToString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return String.format(\"D | %s | %s | %s\", this.getStatus(), this.description, this.by);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Converts the deadline task to String format for output."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Deadline task in String format."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 39
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates an event task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs an Event object with description, and date and time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param description  Description of event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param at  Date and time of event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Converts the event task to String format to write to hard disk."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Event task in String format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String convertTaskToString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return String.format(\"E | %s | %s | %s\", this.getStatus(), this.description, this.at);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Converts the event task to String format for output."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Event task in String format."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 39
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.lang.String;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a Task object with description, marked as not done by default."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param description  Description of task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Retrieves the status icon representing status of task completion."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Status icon representing status of task completion."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); // return tick or X symbols"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Retrieves a number representing status of task completion."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Number representing status of task completion."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return (isDone ? \"1\" : \"0\"); // return 1 or 0"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Checks whether task description contains keyword."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return True if task description contains keyword, false otherwise."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public boolean containsKeyword(String keyword) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return description.contains(keyword);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Converts the task in String format to a Task object."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return The task as a Task object."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public static Task convertStringToTask(String line) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String[] parameters \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        // To-Do"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        if (line.charAt(0) \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            Task task \u003d new ToDo(parameters[2].trim());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            if (parameters[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } else if (line.charAt(0) \u003d\u003d \u0027D\u0027) { // Deadline"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            Task task \u003d new Deadline(parameters[2].trim(), parameters[3].trim());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            if (parameters[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } else if (line.charAt(0) \u003d\u003d \u0027E\u0027) { // Event"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            Task task \u003d new Event(parameters[2].trim(), parameters[3].trim());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            if (parameters[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Converts the task to String format to write to hard disk."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Task in String format."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String convertTaskToString() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return String.format(\"- | %s | %s\", this.getStatus(), this.description);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Converts the task to String format for output."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Task in String format."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 104
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a to-do task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a To-Do object with description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param description  Description of to-do task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Converts the to-do task to String format to write to hard disk."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return To-do task in String format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String convertTaskToString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return String.format(\"T | %s | %s\", this.getStatus(), this.description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Converts the to-do task to String format for output."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return To-do task in String format."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 35
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void testList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        assertEquals(\"\", (new TaskList()).list());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 12
    }
  },
  {
    "path": "src/test/java/duke/task/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void testConvertTaskToString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        assertEquals(\"T | 0 | homework\", (new ToDo(\"homework\").convertTaskToString()));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        assertEquals(\"[T][✘] homework\", (new ToDo(\"homework\").toString()));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 17
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Alaete": 34
    }
  }
]
