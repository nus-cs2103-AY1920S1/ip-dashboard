[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import duke.command.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import duke.command.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import duke.command.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import duke.command.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            ui.start(new Parser(taskList, ui));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            storage.save(taskList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "evelynejuliet": 33,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public DukeException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public DukeException(Throwable cause) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        super(cause);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "evelynejuliet": 15
    }
  },
  {
    "path": "src/main/java/duke/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import duke.task.ToDos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    String line;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public Parser(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public void process(String line) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        Integer num; //number in list which is done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        Task currTask; //refers to current task in list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        String currEvent;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        String desc \u003d \"\"; //current task being added"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        String time \u003d \"\"; //current time of current task being added"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        String[] words \u003d line.split(\" \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        currEvent \u003d words[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        if (line.equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            ui.printList(taskList.list);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        } else if (words[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            num \u003d Integer.valueOf(words[1]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            currTask \u003d taskList.list.get(num - 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            currTask.setStatusIcon(true);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            ui.printDone(currTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        } else if (currEvent.equals(\"todo\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            if (words.length \u003c 2) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            desc \u003d words[1];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            currTask \u003d new ToDos(desc);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            taskList.add(currTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            ui.printAdd(currTask, taskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        } else if (currEvent.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            if (words.length \u003c 2) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            desc \u003d words[1].split(\" /by \", 2)[0];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            time \u003d words[1].split(\" /by \", 2)[1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            currTask \u003d new Deadline(desc, time);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            taskList.add(currTask);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            ui.printAdd(currTask, taskList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        } else if (currEvent.equals(\"event\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            if (words.length \u003c 2) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            desc \u003d words[1].split(\" /at \", 2)[0];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            time \u003d words[1].split(\" /at \", 2)[1];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            currTask \u003d new Event(desc, time);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            taskList.add(currTask);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            ui.printAdd(currTask, taskList);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        } else if (words[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            currTask \u003d taskList.delete(words[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            ui.printDelete(currTask, taskList);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "evelynejuliet": 68
    }
  },
  {
    "path": "src/main/java/duke/command/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import duke.task.ToDos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        File dir \u003d new File(\"data\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        if (!dir.exists()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            dir.mkdir();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        f.createNewFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            readFileContents(filePath, list);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    private static void readFileContents(String filePath, ArrayList\u003cTask\u003e list) throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            boolean checkDone;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            String currLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            String[] currWords\u003d currLine.split(\"[|]\", 4);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            if (currWords[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                checkDone \u003d true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                checkDone \u003d false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            if (currWords[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                Task addedTask \u003d new ToDos(currWords[2]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                addedTask.setStatusIcon(checkDone);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                list.add(addedTask);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            } else if (currWords[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                Task addedTask \u003d new Deadline(currWords[2], currWords[3]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                addedTask.setStatusIcon(checkDone);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                list.add(addedTask);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            } else if (currWords[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                Task addedTask \u003d new Event(currWords[2], currWords[3]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                addedTask.setStatusIcon(checkDone);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                list.add(addedTask);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    private static void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public void save(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.list.size(); i++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            Task task \u003d taskList.list.get(i);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            sb.append(task.format()).append(\"\\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        writeToFile(\"data/duke.txt\", sb.toString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "evelynejuliet": 94
    }
  },
  {
    "path": "src/main/java/duke/command/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public Task delete(String numString) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        int numInt \u003d Integer.valueOf(numString);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        return list.remove(numInt - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "evelynejuliet": 25
    }
  },
  {
    "path": "src/main/java/duke/command/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    Parser parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public String line \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public void start(Parser parser) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        this.parser \u003d parser;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        while (!line.equals(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                parser.process(line);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            } catch (DukeException e){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                System.err.println(\"☹ OOPS!!! The task done must be a number.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                System.err.println(\"☹ OOPS!!! Wrong date format.\\nPlease use the correct format dd/MM/yyyy hh:mm\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public void printAdd(Task currTask, TaskList taskList) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        ArrayList\u003cTask\u003e currList \u003d taskList.list;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        int size \u003d currList.size();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \\n  \" + currTask"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                + \"\\nNow you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public void printDelete(Task currTask, TaskList taskList) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \\n  \" + currTask"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                + \"\\nNow you have \" + taskList.list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public void printList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            System.out.println(i + \". \" + list.get(i - 1));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public void printDone(Task currTask) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n  \" + currTask);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        System.err.println(\"File not found.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "evelynejuliet": 66
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public Deadline(String description, String by) throws ParseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        this.date \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\").parse(by);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        return \"D\" + super.format() + \"|\" + by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "evelynejuliet": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public Event(String description, String at) throws ParseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        this.date \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\").parse(at);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        return \"E\" + super.format() + \"|\" + at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "evelynejuliet": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    protected int num;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        this.num \u003d 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public void setStatusIcon(boolean b) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        isDone \u003d b;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            num \u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        return \"|\" + num + \"|\" + description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "evelynejuliet": 35
    }
  },
  {
    "path": "src/main/java/duke/task/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        return \"T\" + super.format();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "evelynejuliet": 16
    }
  },
  {
    "path": "src/test/java/duke/command/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public void deadlineToStringFormat_validInput_success() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            Deadline deadline \u003d new Deadline(\"borrow book\", \"2/12/2019 1800\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            assertEquals(\"[D][\\u2718] borrow book (by: 2/12/2019 1800)\", deadline.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "evelynejuliet": 20
    }
  },
  {
    "path": "src/test/java/duke/command/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public void eventToFileFormat_validInput_success() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            Event event \u003d new Event(\"read book\", \"2/12/2019 1800\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            assertEquals(\"E|0|read book|2/12/2019 1800\", event.format());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "evelynejuliet": 20
    }
  },
  {
    "path": "src/test/java/duke/task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import duke.command.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    public void taskList_invalidCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        class TaskStub extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            public TaskStub(String desc) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                description \u003d desc;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                num \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            public String format() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        class ToDosStub extends TaskStub {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            public ToDosStub(String desc) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "                super(desc);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        taskList.add(new ToDosStub(\"do\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "        assertEquals(1, taskList.list.size());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "evelynejuliet"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "evelynejuliet": 36
    }
  }
]
