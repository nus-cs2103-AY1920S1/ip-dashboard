[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "buildscript {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    dependencies {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        classpath \u0027com.github.jengelman.gradle.plugins:shadow:4.0.1\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    //id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    //id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.8\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.1\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    mergeServiceFiles()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "test {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    //mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "//javafx {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "//    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "//    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "//    //version \u003d \"13\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "//    //modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "//}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "ShaunNgTX": 51
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "Welcome to Shaun\u0027s task manager! "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "![Screenshot of Duke](https://raw.githubusercontent.com/ShaunNgTX/duke/master/docs/Ui.png)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "1. Add task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "2. List task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "3. Set task as done"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "4. Delete task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "5. Find task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "### Add Task "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "1. Add Todo: Todo add_todo_here "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    __*Todo finish assignment*__"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "2. Add Deadline: Deadline add_deadline_here /by dd/MM/yyyy HHmm"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    __*Deadline Finish iP /by 30/09/2019 2359*__"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "3. Add Event: Event add_event_here /at dd/MM/yyyy HHmm"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    __*Event Attend career talk /at 02/10/2019 1330*__"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "* List - List all items currently in task manager"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "* Done 1 - Set first item in the list as \"done\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "* Delete 1 - Delete the first item in the list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "* Find assignment - Finds all items with the word \"assignment\" inside"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "* Bye - Ends the program"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "ShaunNgTX": 22
    }
  },
  {
    "path": "src/main/java/DataForDuke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "//import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "//import java.io.FileReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "//import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "//import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "public class DataForDuke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private static String bye \u003d \"bye\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private static Task[] listOfItems \u003d new Task[100];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private static int numOfItems \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private static String userOutput;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    public static String DukeData(String inputString) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "            String tempInputString \u003d inputString;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "            System.out.println(inputString);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "            String[] wordSplit \u003d tempInputString.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "            if ((Objects.equals(inputString, bye))) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                userOutput \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                // System.out.println(\"\\t\\tBye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                return userOutput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "            } else if ((Objects.equals(wordSplit[0], \"done\") \u0026\u0026 (Integer.parseInt(wordSplit[1]) \u003c\u003d numOfItems))) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                int numbering \u003d Integer.parseInt((tempInputString.split(\" \"))[1]) - 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                listOfItems[numbering].setDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                userOutput \u003d listOfItems[numbering].toStringDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                return userOutput;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                //System.out.println(\"\\t\\t\" + listOfItems[numbering].toStringDone() + \"\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "            } else if (Objects.equals(inputString, \"list\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                userOutput \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                for (int i \u003d 0; i \u003c numOfItems; i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                    userOutput +\u003d listOfItems[i].toString() + \"\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                    //System.out.println(\"\\t\\t\" + listOfItems[i].toString() + \"\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                return userOutput;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "            } else if (Objects.equals(wordSplit[0], \"delete\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                int numbering \u003d Integer.parseInt((tempInputString.split(\" \"))[1]) - 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                Task tempTask \u003d listOfItems[numbering];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                listOfItems \u003d removeElement(listOfItems, listOfItems[numbering]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                numOfItems--;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                userOutput \u003d \"Noted I have removed this task:\\n\" + tempTask.toString()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        + \"\\nYou have \" + numOfItems + \" items in the list now.\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                //System.out.println(\"\\t\\tNoted I have removed this task:\\n\\t\\t\" + tempTask.toString() + \"\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                //System.out.println(\"\\t\\tYou have \" + numOfItems + \" items in the list now.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                return userOutput;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "            } else if (Objects.equals(wordSplit[0], \"find\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                String findWord \u003d wordSplit[1];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                userOutput \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                for (int i \u003d 0; i \u003c numOfItems; i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                    if (listOfItems[i].description.contains(findWord)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        userOutput +\u003d listOfItems[i].toString() + \"\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        //System.out.println(\"\\t\\t\" + listOfItems[i].toString() + \"\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                return userOutput;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                if (Objects.equals(wordSplit[0], \"Deadline\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        String newInputString \u003d inputString.substring(9);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        if (!(newInputString.contains(\"/by\"))) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                            throw new StringIndexOutOfBoundsException(\"Please use the proper format!!!\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        String[] splitString \u003d newInputString.split(\"/by\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        Task item \u003d new Deadline(splitString[0], splitString[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        listOfItems[numOfItems++] \u003d item;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        userOutput \u003d String.format(\"Got it. I\u0027ve added this task: \\n%s\\nYou have %d items in the list now\", "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                                listOfItems[numOfItems - 1].toString(), numOfItems);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        return userOutput;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        //System.out.println(\"\\t\\tGot it. I\u0027ve added this task: \\n\\t\\t\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        // + listOfItems[numOfItems - 1].toString() + \"\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        //System.out.println(\"\\t\\tYou have \" + numOfItems + \" items in the list now.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                    } catch (StringIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                    } catch (ParseException ex) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        userOutput \u003d \"Please use date time format as such: dd/MM/yyyy HHmm\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        //System.out.println(\"Please use date time format as such: dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        return userOutput;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                } else if (Objects.equals(wordSplit[0], \"Todo\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        String newInputString \u003d inputString.substring(5);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        Task item \u003d new Todo(newInputString);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        listOfItems[numOfItems++] \u003d item;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        System.out.println(\"\\t\\tGot it. I\u0027ve added this task: \\n\\t\\t\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                                + listOfItems[numOfItems - 1].toString() + \"\\n\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        System.out.println(\"\\t\\tYou have \" + numOfItems + \" items in the list now.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        userOutput \u003d String.format(\"Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                                \"%s\\n You have %d items in the list now.\", listOfItems[numOfItems - 1], numOfItems);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        return userOutput;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                    } catch (Exception stringIndexOutOfBoundsException) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        System.out.println(\"Please follow the proper format! Todo\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        userOutput \u003d \"Please follow the proper format! Todo\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        stringIndexOutOfBoundsException.getMessage();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        return userOutput;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                } else if (Objects.equals(wordSplit[0], \"Event\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        String newInputString \u003d inputString.substring(6);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        String[] splitString \u003d newInputString.split(\"/at\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        Task item \u003d new Event(splitString[0], splitString[1]);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        listOfItems[numOfItems++] \u003d item;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        System.out.println(\"\\t\\tGot it. I\u0027ve added this task: \\n\\t\\t\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                                + listOfItems[numOfItems - 1].toString() + \"\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        System.out.println(\"\\t\\tYou have \" + numOfItems + \" items in the list now.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        userOutput \u003d String.format(\"Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                                \"%s\\n You have %d items in the list now.\", listOfItems[numOfItems - 1], numOfItems);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        return userOutput;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                    } catch (Exception stringIndexOutOfBoundsException) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        System.out.println(\"Please follow the proper format!\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        userOutput \u003d \"Please follow the proper format!\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                        return userOutput;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                } else if (Objects.equals(wordSplit[0], \"Undo\")){"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                    //pass;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                    System.out.println(\"\\t\\tHey Heyyyy, \""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                            + \"sorry but I have no idea what are you saying, please try again!!!\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                assert wordSplit !\u003d null;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        } catch (Exception e){"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        return HelpCommand.Invalid();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private static Task[] removeElement(Task[] listOfItems, Task listOfItem) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        Task[] result \u003d new Task[100];"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        int iteration \u003d 0;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        for (Task item : listOfItems) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "            if (!listOfItem.equals(item)) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                result[iteration++] \u003d item;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShaunNgTX": 141
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * Deadline class as part of Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    public Deadline(String description, String by) throws ParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        SimpleDateFormat date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        Date date1 \u003d date.parse(by);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        this.by \u003d date1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShaunNgTX": 24
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * Creates the dialog box."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * @param l creates label."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * @param iv creates image view."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * to flip the dialog box so you get one on the left and right."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * @param l takes in label."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * @param iv takes in image view."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShaunNgTX": 56
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * Todo: do try and except here to see if duke file is empty."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    public static void main(String[]args) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * A test class to practice JavaFx"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        stage.setMinWidth(500.0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        mainLayout.setPrefSize(500.0, 600.0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        scrollPane.setPrefSize(485, 535);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this. "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        userInput.setPrefWidth(425.0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        });"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        });"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        userInput.setOnAction((event) -\u003e handleUserInput());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        Label dukeText \u003d new Label(HelpCommand.Help());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        );"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        );"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        return (DataForDuke.DukeData(input));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "ShaunNgTX": 142
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * Events class as part of Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    public Event(String description, String at) throws ParseException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        SimpleDateFormat date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        Date date1 \u003d date.parse(at);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        this.at \u003d date1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * To print out message in string."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShaunNgTX": 26
    }
  },
  {
    "path": "src/main/java/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "public class HelpCommand {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    public static String Help() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        String output \u003d \"Hello, Welcome to Duke!\\n\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                + \"Use the commands below to utilise Duke:\\n\" "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                + \"To set Todo: \\n\" "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                + \"\\t\\tTodo type_todo_here\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                + \"To set Deadline: \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                + \"\\t\\tDeadline type_deadline_here /by dd/mm/yyyy HHmm\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                + \"To set Event: \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                + \"\\t\\tEvent type_event_here /at dd/mm/yyyy HHmm\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                + \"Alternatively, use:\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                + \"\\t\\tlist\\n\\t\\tdelete\\n\\t\\tdone\\n\\t\\tfind\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    public static String Invalid () {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        String output \u003d \"I\u0027m sorry, please try again!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShaunNgTX": 20
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShaunNgTX": 10
    }
  },
  {
    "path": "src/main/java/StringIndexOutOfBoundsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "public class StringIndexOutOfBoundsException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    public StringIndexOutOfBoundsException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShaunNgTX": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    public String toStringDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        return \"Nice, I\u0027ve marked this item as done\\n\\t\\t[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ShaunNgTX": 28
    }
  },
  {
    "path": "src/main/java/TestHelloWorld.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "public class TestHelloWorld extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        // ... "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * A test class to practice JavaFx"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this. "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        });"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        });"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        userInput.setOnAction((event) -\u003e handleUserInput());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        );"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShaunNgTX": 134
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShaunNgTX": 10
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\tGot it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[E][?] project meeting  (at: Sun Apr 30 14:00:00 SGT 1995)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\tYou have 1 items in the list now."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\tGot it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[T][?] buy fish"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\tYou have 2 items in the list now."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\tGot it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[D][?] clear thrash  (by: Sun Apr 30 14:00:00 SGT 1995)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\tYou have 3 items in the list now."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\tGot it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[D][?] submit 2103 assignment  (by: Sun Apr 30 14:00:00 SGT 1995)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\tYou have 4 items in the list now."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[E][?] project meeting  (at: Sun Apr 30 14:00:00 SGT 1995)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[T][?] buy fish"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[D][?] clear thrash  (by: Sun Apr 30 14:00:00 SGT 1995)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[D][?] submit 2103 assignment  (by: Sun Apr 30 14:00:00 SGT 1995)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\tNice, I\u0027ve marked this item as done"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[?] project meeting "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\tGot it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[E][?] attend national day parade  (at: Sun Apr 30 14:00:00 SGT 1995)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\tYou have 5 items in the list now."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[E][?] project meeting  (at: Sun Apr 30 14:00:00 SGT 1995)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[T][?] buy fish"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[D][?] clear thrash  (by: Sun Apr 30 14:00:00 SGT 1995)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[D][?] submit 2103 assignment  (by: Sun Apr 30 14:00:00 SGT 1995)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[E][?] attend national day parade  (at: Sun Apr 30 14:00:00 SGT 1995)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\tGot it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[T][?] charge laptop"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\tYou have 6 items in the list now."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\tGot it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[E][?] Attend wedding  (at: Sun Apr 30 14:00:00 SGT 1995)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\tYou have 7 items in the list now."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\tNice, I\u0027ve marked this item as done"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[?] buy fish"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[E][?] project meeting  (at: Sun Apr 30 14:00:00 SGT 1995)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[T][?] buy fish"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[D][?] clear thrash  (by: Sun Apr 30 14:00:00 SGT 1995)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[D][?] submit 2103 assignment  (by: Sun Apr 30 14:00:00 SGT 1995)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[E][?] attend national day parade  (at: Sun Apr 30 14:00:00 SGT 1995)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[T][?] charge laptop"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\t[E][?] Attend wedding  (at: Sun Apr 30 14:00:00 SGT 1995)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "\t\tBye. Hope to see you again soon!"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ShaunNgTX": 68
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "Event project meeting /at 30/04/1995 1400"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "Todo buy fish"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "Deadline clear thrash /by 30/04/1995 1400"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "Deadline submit 2103 assignment /by 30/04/1995 1400"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "Event attend national day parade /at 30/04/1995 1400"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "Todo charge laptop"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "Event Attend wedding /at 30/04/1995 1400"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ShaunNgTX": 13
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShaunNgTX"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ShaunNgTX": 21
    }
  }
]
