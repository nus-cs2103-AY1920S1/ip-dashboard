[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "# Task Chick"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003cimg src\u003d\"https://raw.githubusercontent.com/hellodommy/duke/master/src/main/resources/images/chicky.png\" width\u003d\"128\" height\u003d\"128\" /\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Task Chick is a Personal Assistant Chatbot that helps you to keep track of various things."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Task Chick is **optimized for users who prefer to work with a Command Line Interface (CLI)** while still"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " having the benefits of a Graphical User Interface (GUI)."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "## User Guide"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "1. Ensure you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "2. Download the latest `taskchick.jar` [here](https://github.com/hellodommy/duke/releases/download/v1.0/taskchick-1.0.jar)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder for your Task Chick."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "4. Double-click the file to start the app. The GUI should appear in a few seconds."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "5. Type the command in the command box and press Enter to execute it."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "6. Refer to [Features](#Features) for details of each command, or [Usage](#Usage) for the command keys."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### Add tasks "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003cimg src\u003d\"./READMEMedia/media/add.png\" width\u003d\"192\" height\u003d\"275.25\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Chicky is able to add _todos_, _events_ and _deadlines_ to your task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "* _Todos_ are tasks without any date or time attached to it"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "* _Events_ and _deadlines_ are tasks with a date and time attached to it"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### Update task description"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003cimg src\u003d\"./READMEMedia/media/update.png\" width\u003d\"192\" height\u003d\"275.25\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Chicky can modify the description of your task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### Complete tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003cimg src\u003d\"./READMEMedia/media/complete.png\" width\u003d\"192\" height\u003d\"275.25\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Chicky helps you feel accomplished by marking completed tasks with a _v_. Good job!"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### Delete tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003cimg src\u003d\"./READMEMedia/media/delete.png\" width\u003d\"192\" height\u003d\"275.25\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "If you no longer want a task to be on your list, Chicky can delete it for you."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### Undo"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003cimg src\u003d\"./READMEMedia/media/undo.png\" width\u003d\"192\" height\u003d\"275.25\" /\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "We all make mistakes! Chicky can help you undo a command."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### View all tasks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003cimg src\u003d\"./READMEMedia/media/view.png\" width\u003d\"192\" height\u003d\"275.25\" /\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "To get an overview of all your tasks, ask Chicky for a list!"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### View schedule"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003cimg src\u003d\"./READMEMedia/media/schedule.png\" width\u003d\"192\" height\u003d\"275.25\" /\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "If you want to know what tasks you have on a specific date, Chicky can find that for you."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### Find keywords"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003cimg src\u003d\"./READMEMedia/media/find.png\" width\u003d\"192\" height\u003d\"275.25\" /\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Chicky helps you find relevant tasks. All you need to do it specify a search term!"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### Help"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003cimg src\u003d\"./READMEMedia/media/help.png\" width\u003d\"192\" height\u003d\"275.25\" /\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Get help on the go from Chicky. A list of commands and their keywords will be displayed."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### Exit"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Feel free to close Task Chick once you\u0027re done. Your session will be saved. Remember to say bye to Chicky!"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### `todo` or `-t` - Adds todo task"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "`todo [task description]` or `-t [task description]`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Adds a task of type _todo_ to your task list."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Example of usage: `todo cs2103t homework`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### `event` or `-e` - Adds event task"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "`event [task description] /at [dd/mm/yyyy hhmm]` or `-e [task description] /at [dd/mm/yyyy hhmm]`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Adds a task of type _event_ to your task list. Please specify the date in the format `dd/mm/yyyy` and the"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " time in 24-hour format `hhmm`."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Example of usage: `event orbital splashdown /at 28/8/2019 1900`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### `deadline` or `-d` - Adds deadline task"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "`deadline [task description] /by [dd/mm/yyyy]` or `-d [task description] /by [dd/mm/yyyy]`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Adds a task of type _deadline_ to your task list. Please specify the date in the format `dd/mm/yyyy` and the"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " time in 24-hour format `hhmm`."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Example of usage: `deadline duke increments /by 18/9/2019 2359`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### `update` - Updates a task description"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "`update [task index] [new description]`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Updates the description of your task."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Example of usage: `update 1 complete cs2101 readings`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### `complete` or `c` - Complete a task"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "`complete [task index]` or `c [task index]`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Marks a task you completed with a _v_."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### `delete` or `d` - Delete a task"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "`delete [task index]` or `d [task index]`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Deletes a task from your task list."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### `undo` or `u` - Undo an action"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Undo a change to the task list. Changes made in a previous session of Task Chick cannot be undone."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### `list` or `l` - View all tasks"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "View all your tasks."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### `schedule` or `s` - View scheduled tasks"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "`schedule [dd/mm/yyyy]` or `s [dd/mm/yyyy]`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "View tasks you have scheduled on a specific date. Please specify the date in the format `dd/mm/yyyy`."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### `find` or `f` - Find matching tasks"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "`find [search term]` or `f [search term]`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Find tasks containing a specific search term."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### `help` or `h` - View instructions"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Get instructions on how to use Task Chick."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### `bye` - Exit Task Chick"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Exit this session of Task Chick. Task Chick will close after 2 seconds."
      }
    ],
    "authorContributionMap": {
      "hellodommy": 140,
      "-": 15
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    archiveBaseName \u003d \"taskchick\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    archiveVersion \u003d \"1.0\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "run {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "test {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 51,
      "-": 14
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "# Task Chick"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003cimg src\u003d\"https://raw.githubusercontent.com/hellodommy/duke/master/src/main/resources/images/chicky.png\" width\u003d\"128\" height\u003d\"128\" /\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Task Chick is a Personal Assistant Chatbot that helps you to keep track of various things."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Task Chick is **optimized for users who prefer to work with a Command Line Interface (CLI)** while still"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " having the benefits of a Graphical User Interface (GUI)."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "## User Guide"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "1. Ensure you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "2. Download the latest `taskchick.jar` [here](https://github.com/hellodommy/duke/releases/download/v1.0/taskchick-1.0.jar)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder for your Task Chick."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "4. Double-click the file to start the app. The GUI should appear in a few seconds."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "5. Type the command in the command box and press Enter to execute it."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "6. Refer to [Features](#Features) for details of each command, or [Usage](#Usage) for the command keys."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### Add tasks "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003cimg src\u003d\"./READMEMedia/media/add.png\" width\u003d\"192\" height\u003d\"275.25\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Chicky is able to add _todos_, _events_ and _deadlines_ to your task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "* _Todos_ are tasks without any date or time attached to it"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "* _Events_ and _deadlines_ are tasks with a date and time attached to it"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### Update task description"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003cimg src\u003d\"./READMEMedia/media/update.png\" width\u003d\"192\" height\u003d\"275.25\" /\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Chicky can modify the description of your task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### Complete tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003cimg src\u003d\"./READMEMedia/media/complete.png\" width\u003d\"192\" height\u003d\"275.25\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Chicky helps you feel accomplished by marking completed tasks with a _v_. Good job!"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### Delete tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003cimg src\u003d\"./READMEMedia/media/delete.png\" width\u003d\"192\" height\u003d\"275.25\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "If you no longer want a task to be on your list, Chicky can delete it for you."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### Undo"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003cimg src\u003d\"./READMEMedia/media/undo.png\" width\u003d\"192\" height\u003d\"275.25\" /\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "We all make mistakes! Chicky can help you undo a command."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### View all tasks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003cimg src\u003d\"./READMEMedia/media/view.png\" width\u003d\"192\" height\u003d\"275.25\" /\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "To get an overview of all your tasks, ask Chicky for a list!"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### View schedule"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003cimg src\u003d\"./READMEMedia/media/schedule.png\" width\u003d\"192\" height\u003d\"275.25\" /\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "If you want to know what tasks you have on a specific date, Chicky can find that for you."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### Find keywords"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003cimg src\u003d\"./READMEMedia/media/find.png\" width\u003d\"192\" height\u003d\"275.25\" /\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Chicky helps you find relevant tasks. All you need to do it specify a search term!"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### Help"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003cimg src\u003d\"./READMEMedia/media/help.png\" width\u003d\"192\" height\u003d\"275.25\" /\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Get help on the go from Chicky. A list of commands and their keywords will be displayed."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### Exit"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Feel free to close Task Chick once you\u0027re done. Your session will be saved. Remember to say bye to Chicky!"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### `todo` or `-t` - Adds todo task"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "`todo [task description]` or `-t [task description]`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Adds a task of type _todo_ to your task list."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Example of usage: `todo cs2103t homework`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### `event` or `-e` - Adds event task"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "`event [task description] /at [dd/mm/yyyy hhmm]` or `-e [task description] /at [dd/mm/yyyy hhmm]`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Adds a task of type _event_ to your task list. Please specify the date in the format `dd/mm/yyyy` and the"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " time in 24-hour format `hhmm`."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Example of usage: `event orbital splashdown /at 28/8/2019 1900`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### `deadline` or `-d` - Adds deadline task"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "`deadline [task description] /by [dd/mm/yyyy]` or `-d [task description] /by [dd/mm/yyyy]`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Adds a task of type _deadline_ to your task list. Please specify the date in the format `dd/mm/yyyy` and the"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " time in 24-hour format `hhmm`."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Example of usage: `deadline duke increments /by 18/9/2019 2359`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### `update` - Updates a task description"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "`update [task index] [new description]`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Updates the description of your task."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Example of usage: `update 1 complete cs2101 readings`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### `complete` or `c` - Complete a task"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "`complete [task index]` or `c [task index]`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Marks a task you completed with a _v_."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### `delete` or `d` - Delete a task"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "`delete [task index]` or `d [task index]`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Deletes a task from your task list."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### `undo` or `u` - Undo an action"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Undo a change to the task list. Changes made in a previous session of Task Chick cannot be undone."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### `list` or `l` - View all tasks"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "View all your tasks."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### `schedule` or `s` - View scheduled tasks"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "`schedule [dd/mm/yyyy]` or `s [dd/mm/yyyy]`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "View tasks you have scheduled on a specific date. Please specify the date in the format `dd/mm/yyyy`."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### `find` or `f` - Find matching tasks"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "`find [search term]` or `f [search term]`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Find tasks containing a specific search term."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### `help` or `h` - View instructions"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Get instructions on how to use Task Chick."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "### `bye` - Exit Task Chick"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "Exit this session of Task Chick. Task Chick will close after 2 seconds."
      }
    ],
    "authorContributionMap": {
      "hellodommy": 143,
      "-": 12
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private DialogBox(String text, Image img, String backgroundColour, String textColour) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        dialog.setMinSize(Label.USE_COMPUTED_SIZE, Label.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        dialog.setStyle(\"-fx-background-color:\" + backgroundColour + \"; -fx-background-radius: 15; \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                + \"-fx-text-fill:\" + textColour);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Creates the text bubble for User."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param text User input."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param img User image."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Text bubble of user."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return new DialogBox(text, img, \"#4996f5\", \"#ffffff\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Creates the text bubble for Chick."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param text System response."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param img Chick image."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Text bubble of chick."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static DialogBox getTaskChickDialog(String text, Image img) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        var db \u003d new DialogBox(text, img, \"#e5e5e9\", \"#000000\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 75
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * A GUI for Task Chick using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private TaskChick taskChick \u003d new TaskChick();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setTaskChick(taskChick);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().showWelcome();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            stage.setTitle(\"Task Chick - Chicky to keep you on track!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private TaskChick taskChick;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private Image chickyImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/chicky.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void setTaskChick(TaskChick tc) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        taskChick \u003d tc;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        String response \u003d taskChick.getResponse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                DialogBox.getTaskChickDialog(response, chickyImage)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        // ends the program when user inputs \"bye\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            Timer tm \u003d new Timer();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            tm.schedule(new TimerTask() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                public void run() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            }, 2000);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Displays welcome message to user when they first open Task Chick."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                DialogBox.getTaskChickDialog(\"Hello, I\u0027m Task Chick!\\n\\nWhat can I do for you \""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                        + \"today?\\n\\nEnter \" + \"\u0027help\u0027 to see how you can use me ^_^\", chickyImage)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        );"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 73
    }
  },
  {
    "path": "src/main/java/TaskChick.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.exception.TaskChickException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Task Chick is a Personal Assistant Chatbot that helps a person to keep track of various things."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class TaskChick {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Takes in user input and gets the corresponding response from Task Chick."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Task Chick\u0027s response."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return c.execute(tasks, storage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (TaskChickException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Initialises a session for Duke and loads tasks, if any, from a previous session."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public TaskChick() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        storage \u003d new Storage(\"taskchick.txt\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 42,
      "-": 1
    }
  },
  {
    "path": "src/main/java/taskchick/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "package taskchick.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Command to add tasks to the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Creates a AddCommand object with the new task assigned."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Executes the addition of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param tasks Task list where the task will be added."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param storage Storage to be updated with the new task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        UndoCommand.saveVersion(storage.getSavedListString(tasks));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        String response \u003d tasks.addTask(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        assert (!response.isEmpty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            storage.store(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return \"OOPS!!! \" + e.getMessage();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 41
    }
  },
  {
    "path": "src/main/java/taskchick/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "package taskchick.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Abstract class that Represents an executable command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static boolean isExit \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Indicates whether the program should end."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Whether the program should end."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param tasks Task list to refer to if necessary."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param storage Storage to be updated with changes if any."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public abstract String execute(TaskList tasks, Storage storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 30
    }
  },
  {
    "path": "src/main/java/taskchick/command/CompleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "package taskchick.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.exception.TaskChickException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Command to mark a task as completed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class CompleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Creates a CompleteCommand object with the specified task number to be marked as completed assigned."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param taskNumber Index of the task to be marked as completed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public CompleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Parses the command given to Task Chick and creates a CompleteCommand if possible."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param fullCommand Full command split by whitespace."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return CompleteCommand object to be created."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @throws TaskChickException If no index is given."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static CompleteCommand process(String[] fullCommand) throws TaskChickException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return new CompleteCommand(Integer.parseInt(fullCommand[1]));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! Please specify a task number to be marked as completed.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! Please specify the index of the task to be marked as completed\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                    + \" as an integer.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Executes the completion of the task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param tasks Task list where the task will be marked as completed."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param storage Storage to be updated with the task completed."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws TaskChickException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            UndoCommand.saveVersion(storage.getSavedListString(tasks));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder(tasks.completeTask(taskNumber));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            storage.store(tasks);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return sb.toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            UndoCommand.removeRecentSavedVersion();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! Your specified task number is out of range.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! \" + e.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 63
    }
  },
  {
    "path": "src/main/java/taskchick/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "package taskchick.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.exception.TaskChickException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Command to remove tasks from the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Creates a DeleteCommand object with the specified task number to be deleted assigned."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param taskNumber Index of the task to be deleted."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Parses the command given to Task Chick and creates a DeleteCommand if possible."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param fullCommand Full command split by whitespace."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return DeleteCommand object to be created."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @throws TaskChickException If no index is given."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static DeleteCommand process(String[] fullCommand) throws TaskChickException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(fullCommand[1]));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! Please specify the index of the task to be deleted.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! Please specify the index of the task to be deleted as an \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                    + \"integer.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Executes the remove command."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param tasks Task list where the task should be deleted from."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param storage Storage to be updated with the task removed."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws TaskChickException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            UndoCommand.saveVersion(storage.getSavedListString(tasks));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            sb.append(tasks.deleteTask(taskNumber));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            storage.store(tasks);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return sb.toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            UndoCommand.removeRecentSavedVersion();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! Your specified task number is out of range.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! \" + e.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 63
    }
  },
  {
    "path": "src/main/java/taskchick/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "package taskchick.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Command to end the Task Chick session."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Executes the exit command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param tasks Unused."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param storage Unused."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 21
    }
  },
  {
    "path": "src/main/java/taskchick/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "package taskchick.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.exception.TaskChickException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Command to search for tasks containing a specific key word/phrase and display those matching tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private String searchTerm;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Creates a FindCommand object with the specific key word/phrase assigned."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param searchTerm Key word/phrase to search for."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public FindCommand(String searchTerm) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.searchTerm \u003d searchTerm;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Parses the command given to Task Chick and creates a FindCommand if possible."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param fullCommand Full command split by the first whitespace."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return FindCommand object to be created."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @throws TaskChickException If no search term has been specified."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static FindCommand process(String[] fullCommand) throws TaskChickException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return new FindCommand(fullCommand[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! Please specify a search term.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Executes the search command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param tasks Task list to search from."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param storage Unused."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        String response \u003d tasks.findTasks(searchTerm);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        assert (!response.isEmpty());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 50
    }
  },
  {
    "path": "src/main/java/taskchick/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "package taskchick.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Command to guide users on how to use Task Chick."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Executes the help command with instructions for all possible commands."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param tasks Unused."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param storage Unused."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        sb.append(\"Chicky is here to help!\\n\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        sb.append(\"VIEWING\\n\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        print(\"🐥 list (or l)\", \"to see the tasks you have on your list\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        print(\"🐥 schedule (or s) [date]\", \"to see the tasks you have scheduled on that specific date\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        print(\"🐥 find (or f) [search term]\", \"to see the tasks containing that search term\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        sb.append(\"\\nADDING TASKS\\n\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        print(\"🐥 todo (or -t) [description]\", \"to add a task of type todo\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        print(\"🐥 deadline (or -d) [description] /by [DD/MM/YYYY HHMM]\", \"to add a task of type deadline\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        print(\"🐥 event (or -e) )description] /at [DD/MM/YYYY HHMM]\", \"to add a task of type event\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        sb.append(\"\\nMODIFYING TASKS\\n\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        print(\"🐥 delete (or d) [task number]\", \"to delete the task of that specified index number from the task list\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        print(\"🐥 complete (or c) [task number]\", \"to mark the task as completed\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        print(\"🐥 update [task number] [new description]\", \"to update the description of a task\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        print(\"🐥 undo (or u)\", \"to undo a modification to the task list\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Creates a printing format for the instructions."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param command Command to be explained."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param description Explanation of command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void print(String command, String description) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        sb.append(command + \" - \" + description + \"\\n\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 47
    }
  },
  {
    "path": "src/main/java/taskchick/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "package taskchick.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Command to display all tasks in the list to user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Executes the displaying of the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param tasks Task list to display from."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param storage Unused."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        String response \u003d tasks.printTasks();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        assert (!response.isEmpty());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 23
    }
  },
  {
    "path": "src/main/java/taskchick/command/ScheduleCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "package taskchick.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.exception.TaskChickException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Command to show users the tasks they have on a specific date."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class ScheduleCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private int[] date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Creates a UpdateCommand object with the task number and new description to be updated assigned."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param date Specific date to be checked, in the array {dd, mm, yyyy}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public ScheduleCommand(int[] date) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Parses the command given to Task Chick and creates a ScheduleCommand if possible."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param fullCommand Full command split by whitespace."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return ScheduleCommand object to be created."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @throws TaskChickException If date given is not in number format (eg. 9/Sep/2019), or not in dd/mm/yyyy format."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static ScheduleCommand process(String[] fullCommand) throws TaskChickException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            String[] dateArray \u003d fullCommand[1].split(\"/\", 3);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            int dayFromArray \u003d Integer.parseInt(dateArray[0]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            int monthFromArray \u003d Integer.parseInt(dateArray[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            int yearFromArray \u003d Integer.parseInt(dateArray[2]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return new ScheduleCommand(new int[]{dayFromArray, monthFromArray, yearFromArray});"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! Please enter the date in the format DD/MM/YYYY\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! Please specify the date you want to check in the format \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                    + \"DD/MM/YYYY\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Executes the ScheduleCommand through the TaskList object."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param tasks Task list to refer to."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param storage Unused."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Response to user."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return tasks.displaySchedule(date);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 56
    }
  },
  {
    "path": "src/main/java/taskchick/command/UndoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "package taskchick.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.exception.TaskChickException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Command to undo a previous change to the task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class UndoCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private static Stack\u003cString\u003e listVersions \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Saves a version of the task list into the stack."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param listVersion List version to be saved."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static void saveVersion(String listVersion) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        listVersions.push(listVersion);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Removes the most recently saved version of the list when a list version is already saved before a"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * command is executed, but the command is not valid and so there is not change to the task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static void removeRecentSavedVersion() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        listVersions.pop();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Executes the undoing of a command."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param tasks Task list to be undone."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param storage Storage to be updated with the older task list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        if (listVersions.isEmpty()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return \"You have nothing to undo!\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder(tasks.undoCommand(storage, listVersions.pop()));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            storage.store(tasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return sb.toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! \" + e.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 54
    }
  },
  {
    "path": "src/main/java/taskchick/command/UpdateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "package taskchick.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.exception.TaskChickException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Command to update the description of a task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class UpdateCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private String newDescription;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Creates a UpdateCommand object with the task number and new description to be updated assigned."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param taskNumber Index of the task to be updated."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param newDescription Updated description of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public UpdateCommand(int taskNumber, String newDescription) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.newDescription \u003d newDescription;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Parses the command given to Task Chick and creates a UpdateCommand if possible."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param fullCommand Full command split by whitespace."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return UpdateCommand object to be created."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @throws TaskChickException If input is not in the format update [task number] [new description]."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static UpdateCommand process(String[] fullCommand) throws TaskChickException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            String[] currArray \u003d fullCommand[1].split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return new UpdateCommand(Integer.parseInt(currArray[0]), currArray[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! Please enter in the format update [task number] [new \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                    + \"description]\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! Please specify the index of the task as an integer.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Executes the UpdateCommand."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param tasks Task list to refer to."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param storage Storage where the list is updated with the new description."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Response to user."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws TaskChickException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            UndoCommand.saveVersion(storage.getSavedListString(tasks));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            sb.append(tasks.updateDescription(taskNumber, newDescription));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            storage.store(tasks);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return sb.toString();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! Your specified task number is out of range.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! \" + e.getMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 68
    }
  },
  {
    "path": "src/main/java/taskchick/datetime/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "package taskchick.datetime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.exception.TaskChickException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Enables Task Chick to understand date and times."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private int month;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private int day;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private int time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Initialises appropriate date and time fields for Task Chick to understand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param year 4-digit integer."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param month Integer value of the month."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param day Integer value of the day of the month."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param time 4-digit integer number (time in 24 hour format)."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public DateTime(int year, int month, int day, int time) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public int[] getDate() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return new int[]{day, month, year};"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Creates a DateTime object by splitting up the date and time given in a string."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param dateTimeString Date and time given in the format DD/MM/YYYY HHMM."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return DateTime object created."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException If date and time given is not in the accepted format."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static DateTime create(String dateTimeString) throws TaskChickException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            String[] currArray \u003d dateTimeString.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            String dateString \u003d currArray[0];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            String timeString \u003d currArray[1];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            String[] dateArray \u003d dateString.split(\"/\", 3);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return new DateTime(Integer.parseInt(dateArray[2]), Integer.parseInt(dateArray[1]),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                    Integer.parseInt(dateArray[0]), Integer.parseInt(timeString));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! Please indicate the date/time in the format DD/MM/YYYY HHMM.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Formats the date with suffix based on the number of the day."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Date with suffix -st, -nd, -rd and -th when appropriate."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private String getDay() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        if (day \u003d\u003d 1 || day \u003d\u003d 21 || day \u003d\u003d 31) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return day + \"st\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } else if (day \u003d\u003d 2 || day \u003d\u003d 22) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return day + \"nd\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } else if (day \u003d\u003d 3 || day \u003d\u003d 23) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return day + \"rd\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } else if (day \u003c\u003d 30) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return day + \"th\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! Please enter a valid date.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Formats the month based on the number of the month."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Month name in string format."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private String getMonth() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        String monthString;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        switch (month) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            monthString \u003d \"January\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return monthString;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            monthString \u003d \"February\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return monthString;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            monthString \u003d \"March\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return monthString;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            monthString \u003d \"April\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return monthString;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case 5:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            monthString \u003d \"May\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return monthString;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case 6:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            monthString \u003d \"June\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return monthString;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case 7:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            monthString \u003d \"July\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return monthString;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case 8:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            monthString \u003d \"August\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return monthString;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case 9:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            monthString \u003d \"September\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return monthString;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case 10:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            monthString \u003d \"October\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return monthString;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case 11:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            monthString \u003d \"November\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return monthString;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case 12:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            monthString \u003d \"December\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return monthString;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! Please enter a valid month.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Formats the 24-hour time into 12-hour time format."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return 12-hour time in string format."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private String getTime() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        int hour;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        int minute;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        String timeSuffix;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        if (time \u003c\u003d 59) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            minute \u003d time % 100;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            hour \u003d 12;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            timeSuffix \u003d \"am\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } else if (time \u003c\u003d 1159) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            minute \u003d time % 100;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            hour \u003d (time - minute) / 100;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            timeSuffix \u003d \"am\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } else if (time \u003c\u003d 1259) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            minute \u003d time % 100;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            hour \u003d 12;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            timeSuffix \u003d \"pm\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } else if (time \u003e\u003d 1300 \u0026\u0026 time \u003c\u003d 2359) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            minute \u003d time % 100;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            hour \u003d (time - minute) / 100 - 12;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            timeSuffix \u003d \"pm\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! Please enter a valid time.\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return hour + \":\" + String.format(\"%02d\", minute) + timeSuffix;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return getDay() + \" of \" + getMonth() + \" \" +  year + \", \" + getTime();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 157
    }
  },
  {
    "path": "src/main/java/taskchick/exception/TaskChickException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "package taskchick.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class TaskChickException extends InputMismatchException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public TaskChickException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 11
    }
  },
  {
    "path": "src/main/java/taskchick/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "package taskchick.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.command.CompleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.command.HelpCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.command.ScheduleCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.command.UndoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.command.UpdateCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.exception.TaskChickException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.task.Deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.task.Event;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.task.Todo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Deals with making sense of the user command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Reads commands give to Task Chick."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Creates the appropriate command object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param fullCommand Whole command where the first word will be extracted."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Command object that is created according to the type of command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        String[] currArray \u003d (fullCommand.trim()).split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        switch (currArray[0]) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"b\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"l\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"complete\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"c\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return CompleteCommand.process(currArray);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"d\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return DeleteCommand.process(currArray);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"f\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return FindCommand.process(currArray);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"-t\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return new AddCommand(Todo.process(currArray));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"-d\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return new AddCommand(Deadline.process(currArray));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"-e\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return new AddCommand(Event.process(currArray));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"h\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"update\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return UpdateCommand.process(currArray);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"schedule\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"s\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return ScheduleCommand.process(currArray);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"undo\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        case \"u\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return new UndoCommand();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 74
    }
  },
  {
    "path": "src/main/java/taskchick/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "package taskchick.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.exception.TaskChickException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Creates a Storage object with the file path assigned."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param filePath Location of task list to load from and store to."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Interprets the todo in the saved string format and creates a todo object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param todoInString Todo in saved string format."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Todo object created."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private Todo loadTodo(String todoInString) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        String[] currArray \u003d todoInString.split(\" \\\\| \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        Todo currTodo \u003d new Todo(currArray[2]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        if (currArray[1].equals(\"v\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            currTodo.markAsCompleted();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return currTodo;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Interprets the deadline in the saved string format and creates a deadline object."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param deadlineInString Deadline in saved string format."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Deadline object created."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private Deadline loadDeadline(String deadlineInString) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        String[] currArray \u003d deadlineInString.split(\" \\\\| \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        Deadline currDeadline \u003d new Deadline(currArray[2], currArray[3]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        if (currArray[1].equals(\"v\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            currDeadline.markAsCompleted();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return currDeadline;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Interprets the event in the saved string format and creates an event object."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param eventInString Event in saved string format."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Event object created."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private Event loadEvent(String eventInString) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        String[] currArray \u003d eventInString.split(\" \\\\| \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        Event currEvent \u003d new Event(currArray[2], currArray[3]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        if (currArray[1].equals(\"v\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            currEvent.markAsCompleted();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return currEvent;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Converts the contents of .txt file into a String."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return .txt file as a String."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @throws FileNotFoundException If .txt file cannot be found."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private String convertFileToString() throws FileNotFoundException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            sb.append(sc.nextLine() + \"\\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Creates a task list based on the string of tasks given."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param tasks Tasks given with their type, description, completion status and date (if applicable)."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Populated list of tasks."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTasks(String tasks) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ArrayList\u003cTask\u003e loadedTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        Scanner sc \u003d new Scanner(tasks);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            String currTask \u003d sc.nextLine();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            if (currTask.charAt(0) \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                loadedTaskList.add(loadTodo(currTask));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            } else if (currTask.charAt(0) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                loadedTaskList.add(loadDeadline(currTask));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            } else if (currTask.charAt(0) \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                loadedTaskList.add(loadEvent(currTask));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                throw new TaskChickException(\"OOPS!!! Your task file appears to be corrupted.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return loadedTaskList;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Loads the task list from the previous session form the hard disk, if any."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return ArrayList of task that has been loaded from previous session."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @throws FileNotFoundException If there was no previous session."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return loadTasks(convertFileToString());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Stores the task list in the hard disk."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param tasks Task list to retrieve."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @throws IOException If hard disk cannot be found in the given file path."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void store(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        fw.write(getSavedListString(tasks));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Formats the task list to be stored."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param tasks Task list to retrieve."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return All tasks in the list in a simplified format."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static String getSavedListString(TaskList tasks) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        String allTasks \u003d \"\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getTasks().size(); i++) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            allTasks +\u003d tasks.getTasks().get(i).toSave() + \"\\n\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return allTasks;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 155
    }
  },
  {
    "path": "src/main/java/taskchick/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "package taskchick.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.datetime.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.exception.TaskChickException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Deadlines are tasks that need to be done before a specific date/time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    protected DateTime dateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    protected String timeInFile;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Creates a deadline task with the specified description and date/time."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param description Deadline to complete."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param dateTimeString Date/time of the deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public Deadline(String description, String dateTimeString) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.dateTime \u003d dateTime.create(dateTimeString);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.timeInFile \u003d dateTimeString;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Parses the command given to Task Chick and creates a deadline task if possible."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param fullCommand Full command split by the word \"deadline\"."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Deadline object created."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @throws TaskChickException If the deadline has no description, or no date/time."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static Deadline process(String[] fullCommand) throws TaskChickException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        if (fullCommand.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! The description of a deadline cannot be empty :-(\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        String[] detailsArray \u003d fullCommand[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        if (detailsArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! Please specify a date and time for your deadline :-(\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return new Deadline(detailsArray[0], detailsArray[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } catch (TaskChickException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Retrieves the date of this deadline."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Date in the array {dd, mm, yyyy}."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public int[] getDate() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return dateTime.getDate();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Formats the event to be stored in the hard disk."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Deadline details in the format D | v or x | description | time."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return \"D | \" + super.getStatusIcon() + \" | \" + super.description + \" | \" + timeInFile;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Formats the deadline to be displayed to the user."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Deadline details in the format [D][v or x] description (at: date and time)."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return \"[D][\" + super.getStatusIcon() + \"] \" + super.description + \" (by: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 77
    }
  },
  {
    "path": "src/main/java/taskchick/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "package taskchick.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.datetime.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.exception.TaskChickException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Events are tasks that start at a specific time and ends at a specific time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    protected DateTime dateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    protected String timeInFile;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Creates an event task with the specified description and date/time."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param description Event to attend to."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param dateTimeString Date/time of the event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public Event(String description, String dateTimeString) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.dateTime \u003d dateTime.create(dateTimeString);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.timeInFile \u003d dateTimeString;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Parses the command given to Task Chick and creates a event task if possible."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param fullCommand Full command split by the word \"event\"."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Event object created."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @throws TaskChickException If the deadline has no description, or no date/time."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static Event process(String[] fullCommand) throws TaskChickException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        if (fullCommand.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! The description of an event cannot be empty :-(\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        String[] detailsArray \u003d fullCommand[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        if (detailsArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! Please specify a date and time for your event :-(\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return new Event(detailsArray[0], detailsArray[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Retrieves the date of this event."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Date in the array {dd, mm, yyyy}."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public int[] getDate() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return dateTime.getDate();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Formats the event to be stored in the hard disk."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Event details in the format E | v or x | description | time."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return \"E | \" + super.getStatusIcon() + \" | \" + super.description + \" | \" + timeInFile;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Formats the event to be displayed to the user."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Event details in the format [E][v or x] description (at: date and time)."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return \"[E][\" + super.getStatusIcon() + \"] \" + super.description + \" (at: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 75
    }
  },
  {
    "path": "src/main/java/taskchick/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "package taskchick.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Tasks include events, deadlines and todo actions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    protected boolean isCompleted;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Creates a task that is initialised as incomplete."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param description An activity that the user should attend/complete."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.isCompleted \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Retrieves the description of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Task description."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Updates the description of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param newDescription New description to replace the existing one."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void updateDescription(String newDescription) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        description \u003d newDescription;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Retrieves the date assigned to the task (not applicable to todo types)."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return A dummy value - this method will be overridden in Deadline and Event classes."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public int[] getDate() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Marks a task as completed."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void markAsCompleted() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.isCompleted \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Gets the status of the task as done or undone."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return v or x if done or undone respectively."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return (isCompleted ? \"v\" : \"x\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Formats the task to be stored in the hard disk, which differs based on the task type."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Formatted task with its details."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 72
    }
  },
  {
    "path": "src/main/java/taskchick/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "package taskchick.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.exception.TaskChickException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Todos are tasks without any date/time attached to it."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Creates a todo task with a specific description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param description Task to do."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Parses the command given to Task Chick and creates a Todo task if possible."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param fullCommand Full command split by the word \"todo\"."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Todo task created."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @throws TaskChickException If the description of the todo is empty."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public static Todo process(String[] fullCommand) throws TaskChickException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        if (fullCommand.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            throw new TaskChickException(\"OOPS!!! The description of a todo cannot be empty :-(\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return new Todo(fullCommand[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Formats the todo to be stored in the hard disk."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Todo details in the format T | v or x | description."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return \"T | \" + super.getStatusIcon() + \" | \" + super.description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Formats the todo to be displayed to the user."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Todo details in the format [T][v or x] description."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return \"[T][\" + super.getStatusIcon() + \"] \" + super.description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 53
    }
  },
  {
    "path": "src/main/java/taskchick/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "package taskchick.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " * Contains the task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Creates an empty task list if there is no previous session of Task Chick, or no tasks in the task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Fills the new  task list with tasks from previous session of Task Chick."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param savedTasks Task list from the previous session of Task Chick."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e savedTasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        tasks.addAll(savedTasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Retrieves the task list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Prints tasks with their index for the user."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param tasksToPrint List to print from."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Tasks with the index starting from 1."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private String printNumberedTasks(ArrayList\u003cTask\u003e tasksToPrint) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        for (Task task : tasksToPrint) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            sb.append(\"\\n\" + counter + \".\" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Informs users of the size of their task list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Number of tasks in the list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private String getListSize() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        if (tasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return \"Now you have 1 task in the list.\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Replaces this task list with an older version of the task list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param olderTaskList Task list that is replacing this current task list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private void replaceTaskList(ArrayList\u003cTask\u003e olderTaskList) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        for (Task olderTasks : olderTaskList) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            tasks.add(olderTasks);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Reverts the task list to an older version and shows the user the reverted version."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param storage Where the task list in String can be converted to an ArrayList of tasks."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param olderTaskListInString Older version of the task list in String format."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Response to user."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String undoCommand(Storage storage, String olderTaskListInString) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ArrayList\u003cTask\u003e olderTaskList \u003d storage.loadTasks(olderTaskListInString);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        replaceTaskList(olderTaskList);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Change undone!\\n\\n\" + \"Here is your list now:\\n\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        sb.append(printNumberedTasks(tasks));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Adds the task to the task list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String addTask(Task task) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return \"Got it. Chicky has added this task:\\n\\n\" + task.toString() + \"\\n\\n\" + getListSize();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Updates task description only while retaining task\u0027s position in list."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param index Index of the task to be updated."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param description New description of the task."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Response to user."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String updateDescription(int index, String description) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        Task taskToUpdate \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        String oldTaskString \u003d taskToUpdate.toString();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        taskToUpdate.updateDescription(description);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return \"Chicky has updated the task:\\n\\n\" + oldTaskString + \"\\n\\n\" + \"as follows:\\n\\n\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                + taskToUpdate.toString();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Displays the contents of the task list to the user."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String printTasks() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return \"You do not have any tasks in your list.\\n\" + \"Use \u0027help\u0027 to see how to add tasks\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                    + \" to your list!\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Chicky found these tasks in your list:\\n\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        sb.append(printNumberedTasks(tasks));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Marks a task as completed and informs the user."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param taskNumber Index of the task to be marked as completed."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String completeTask(int taskNumber) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        tasks.get(taskNumber - 1).markAsCompleted();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return \"Good job! Chicky has marked this task as completed:\\n\\n\" + tasks.get(taskNumber - 1).toString();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Removes a task and informs the user."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param taskNumber Index of the task to be removed."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        String taskDescription \u003d tasks.get(taskNumber - 1).toString();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return \"Alrighty! Chicky has removed this task:\\n\\n\" + taskDescription + \"\\n\\n\" + getListSize();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Searches for tasks matching the search term and displays the matching tasks to the user."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param searchTerm Key word/phrase to search for."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String findTasks(String searchTerm) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ArrayList\u003cTask\u003e searchResults \u003d getFoundResults(searchTerm);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(printFoundGreeting(searchResults.size(), searchTerm));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        sb.append(printNumberedTasks(searchResults));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Saves tasks containing the search term into an ArrayList."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param searchTerm Search term."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Search results."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private ArrayList\u003cTask\u003e getFoundResults(String searchTerm) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ArrayList\u003cTask\u003e searchResults \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            if (task.getDescription().contains(searchTerm)) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                searchResults.add(task);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return searchResults;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Prints the opening message when users search for a term, depending on how many results their search"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * term yielded."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param numResults Number of search results yielded."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param searchTerm Specified search term."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Customised message to user."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private String printFoundGreeting(int numResults, String searchTerm) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        if (numResults \u003d\u003d 0) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return \"OOPS!!! Chicky can\u0027t find any task containing the term \\\"\" + searchTerm + \"\\\".\";"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } else if (numResults \u003d\u003d 1) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return \"Yay!!! Chicky found 1 task containing the term \\\"\" + searchTerm + \"\\\":\\n\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } else if (numResults \u003e 1) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return \"Yay!!! Chicky found \" + numResults + \" tasks containing the term \\\"\" + searchTerm"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                    + \"\\\":\\n\";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return \"OOPS!!! Chicky has encountered an unexpected error.\";"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Searches for deadlines and events on a specified date and compiles it for the user."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param scheduleDate Date the user is searching for."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Response to user."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public String displaySchedule(int[] scheduleDate) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ArrayList\u003cTask\u003e scheduledTasks \u003d getScheduledTasks(scheduleDate);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        sb.append(printScheduleGreeting(scheduledTasks.size()));"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        sb.append(printNumberedTasks(scheduledTasks));"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Saves deadlines and events scheduled on a specific date into an ArrayList."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param scheduleDate Specified date to match."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return ArrayList with the deadlines and events scheduled on that specific date."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private ArrayList\u003cTask\u003e getScheduledTasks(int[] scheduleDate) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        ArrayList\u003cTask\u003e scheduledTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            if (!(task instanceof Todo)) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                int[] taskDate \u003d task.getDate();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                if (Arrays.equals(scheduleDate, taskDate)) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                    scheduledTasks.add(task);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        return scheduledTasks;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * Prints the opening message when users call for a schedule, depending on how many tasks they have"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * scheduled on that specific day."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @param listSize Number of tasks scheduled on a specific day."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     * @return Customised message to user."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    private String printScheduleGreeting(int listSize) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        if (listSize \u003d\u003d 0) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return \"Yay!!! You do not have any tasks on that day!\";"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } else if (listSize \u003d\u003d 1) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return \"Chicky found 1 task on that day:\\n\";"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } else if (listSize \u003e 1) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return \"Chicky found \" + listSize + \" tasks on that day:\\n\";"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            return \"OOPS!!! Chicky has encountered an unexpected error.\";"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 259
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: fefefe;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"64.0\" fitWidth\u003d\"64.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"20.0\" right\u003d\"20.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 22
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-background-color: fefefe;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #4996f5;\" text\u003d\"Send\" textFill\u003d\"WHITE\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: fefefe;\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 19
    }
  },
  {
    "path": "src/test/java/DateTimeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.datetime.DateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class DateTimeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void testDateTime_validInput_success() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        assertEquals(\"31st of April 2019, 4:32pm\", (DateTime.create(\"31/4/2019 1632\")).toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        assertEquals(\"22nd of September 2030, 12:00am\", (DateTime.create(\"22/9/2030 0000\")).toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        assertEquals(\"3rd of March 1930, 8:20am\", (DateTime.create(\"3/3/1930 0820\")).toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        assertEquals(\"16th of February 1966, 7:12pm\", (DateTime.create(\"16/2/1966 1912\")).toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 15
    }
  },
  {
    "path": "src/test/java/SaveTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.task.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.task.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import taskchick.task.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "public class SaveTaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    public void saveTask_validTask_success() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        assertEquals(\"E | 0 | have project meeting | 12/3/2020 1430\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                (new Event(\"have project meeting\", \"12/3/2020 1430\")).toSave());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        assertEquals(\"T | 0 | do homework\", (new Todo(\"do homework\")).toSave());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "        assertEquals(\"D | 0 | complete level 6 | 20/8/2019 2359\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "                (new Deadline(\"complete level 6\", \"20/8/2019 2359\")).toSave());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 17
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "       [T][✘] read book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Now you have 1 task in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "       [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "       [T][✓] read book"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "       [E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "       [T][✘] join sports club"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "       [T][✓] join sports club"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "       [T][✘] borrow book"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     1.[T][✓] read book"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     2.[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     3.[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     4.[T][✓] join sports club"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     5.[T][✘] borrow book"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "       [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "       [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "     Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "hellodommy": 66
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "event project meeting /at Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 10
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hellodommy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hellodommy"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "hellodommy": 34
    }
  }
]
