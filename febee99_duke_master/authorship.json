[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "//    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "compileJava {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "    options.encoding \u003d \"UTF-8\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "//javafx {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "//    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "//    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "//}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "test {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "run {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author {Oscar-B-Liang}-reused"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "febee99"
        },
        "content": "//{Solution to enable cross-platform jar files}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "febee99"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "febee99"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "febee99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "febee99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "febee99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "febee99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "febee99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "febee99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "febee99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "febee99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "febee99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "febee99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "febee99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "febee99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "febee99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "febee99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "febee99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "febee99"
        },
        "content": "//    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "febee99"
        },
        "content": "//    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "febee99"
        },
        "content": "//    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "febee99"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 62,
      "-": 15
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "T|0|make bed again"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": "D|0|make bed |Wed, 18 Sep 2019, 11:59 PM"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "T|0|make the bed"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "D|0|hand in homework |Wed, 18 Sep 2019, 11:59 PM"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "T|1|make fishball"
      }
    ],
    "authorContributionMap": {
      "febee99": 5
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "# Duke: User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "Duke tracks ones\u0027 current tasks, deadlines and events. Simply enter a command to record them down."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "![Ui](Ui.png)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "## 2. Usage"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "### 2.1 Add Commands"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "### 2.1.1 `todo` - Add a todo task to your list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "This adds a todo task to your list. It is marked as undone by default."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": " "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "_Example of usage:_ "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "todo make the bed"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "_Expected outcome:_"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "[T][✘] make the bed"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "Now you have 8 tasks in the list.`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "### 2.1.2 `deadline` - Add an upcoming deadline task to your list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "This adds a deadline task to your list with the due date specified. It is marked as undone by default. \u003cbr\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "If any natural dates are used, e.g. \"today\", \"tomorrow\", \"sunday\", \"next tuesday\", the time is set to be"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "the end of the day, i.e. 11.59pm by default."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "_Example of usage:_ "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "deadline hand in homework /by tomorrow"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "_Expected outcome:_"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "[D][✘] hand in homework"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "(by: Wed, 18 Sept 2019, 11:59PM)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "Now you have 8 tasks in the list.`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "### 2.1.3 `event` - Add an upcoming event task to your list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": "This adds a event task to your list with the starting and ending dates specified. It is marked as undone by default. \u003cbr\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "febee99"
        },
        "content": "If any natural dates are used, e.g. \"today\", \"tomorrow\", \"sunday\", \"next tuesday\", the time is set to be"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "febee99"
        },
        "content": "the end of the day, i.e. 11.59pm by default."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "febee99"
        },
        "content": "_Example of usage:_ "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "febee99"
        },
        "content": "event gala dinner /at today - 1/12/2019 2000"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "febee99"
        },
        "content": "_Expected outcome:_"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "febee99"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "febee99"
        },
        "content": "[E][✘] gala dinner"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "febee99"
        },
        "content": "(from: Wed, 18 Sept 2019, 11:59PM,`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "febee99"
        },
        "content": "to: Sun, 1 Dec 2019 , 08:00PM)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "febee99"
        },
        "content": "Now you have 8 tasks in the list.`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "febee99"
        },
        "content": "### 2.2 Delete Command"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "febee99"
        },
        "content": "### 2.2.1 `delete` - Delete a task from your list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "febee99"
        },
        "content": "This deletes a task from your list. The task to be deleted is specified by the task index. \u003cbr\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "febee99"
        },
        "content": "The task index has to be positive and within the size of your list for the deletion to be successful. "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "febee99"
        },
        "content": " "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "febee99"
        },
        "content": "_Example of usage:_ "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "febee99"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "febee99"
        },
        "content": "_Expected outcome:_"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "febee99"
        },
        "content": "Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "febee99"
        },
        "content": "[T][✘] make breakfast"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "febee99"
        },
        "content": "Now you have 10 tasks in the list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "febee99"
        },
        "content": "### 2.3 Done Command"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "febee99"
        },
        "content": "### 2.3.1 `done` - Marks a task as done in your list."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "febee99"
        },
        "content": "This marks a task as done in your list. The task to be marked as done is specified by the task index. \u003cbr\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "febee99"
        },
        "content": "The task index has to be positive and within the size of your list for the marking to be successful. "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "febee99"
        },
        "content": " "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "febee99"
        },
        "content": "_Example of usage:_ "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "febee99"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "febee99"
        },
        "content": "_Expected outcome:_"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "febee99"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "febee99"
        },
        "content": "[T][✓] pick up groceries"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "febee99"
        },
        "content": "### 2.4 Find Command"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "febee99"
        },
        "content": "### 2.4.1 `find` - Finds tasks in your list based on a keyword."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "febee99"
        },
        "content": "This finds relevant tasks in your list based on the specified keyword. \u003cbr\u003e It matches to any tasks that contain the keyword, \u003cbr\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "febee99"
        },
        "content": "either partially or entirely."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "febee99"
        },
        "content": " "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "febee99"
        },
        "content": "_Example of usage:_ "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "febee99"
        },
        "content": "find work"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "febee99"
        },
        "content": "_Expected outcome:_"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "febee99"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "febee99"
        },
        "content": "[D][✘] hand in homework"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "febee99"
        },
        "content": "(by: Wed, 18 Sep 2019, 11:59 PM)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "febee99"
        },
        "content": "_Example of usage:_ "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "febee99"
        },
        "content": "find webcast`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "febee99"
        },
        "content": "_Expected outcome:_"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "febee99"
        },
        "content": "No matching tasks found.`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "febee99"
        },
        "content": "### 2.5 List Command"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "febee99"
        },
        "content": "### 2.5.1 `list` - Lists all the tasks in your list."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "febee99"
        },
        "content": "This lists out all the tasks currently stored in your list."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "febee99"
        },
        "content": "_Example of usage:_ "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "febee99"
        },
        "content": "list"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "febee99"
        },
        "content": "_Expected outcome:_"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "febee99"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "febee99"
        },
        "content": "1. [D][✘] hand in homework"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "febee99"
        },
        "content": "(by: Wed, 18 Sep 2019, 11:59 PM)"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "febee99"
        },
        "content": "2. [D][✘] complete assignment 1"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "febee99"
        },
        "content": "(by: Mon, 16 Sep 2019, 11:59 PM)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "febee99"
        },
        "content": "3. [E][✘] gala dinner"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "febee99"
        },
        "content": "(from: Wed, 18 Sept 2019, 11:59PM,"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "febee99"
        },
        "content": "to: Sun, 1 Dec 2019 , 08:00PM)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "febee99"
        },
        "content": "### 2.6 Sort Command"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "febee99"
        },
        "content": "### 2.6.1 `sort` - Sorts all the tasks in your list."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "febee99"
        },
        "content": "This sorts the tasks in your list. You can specify Duke to sort your list for you in one of two ways, \u003cbr\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "febee99"
        },
        "content": "either by task name or task date. The starting date of "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "febee99"
        },
        "content": "_Example of usage:_ "
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "febee99"
        },
        "content": "`sort name`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "febee99"
        },
        "content": "_Expected outcome:_"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "febee99"
        },
        "content": "Sorted list by name:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "febee99"
        },
        "content": "2. [D][✘] complete assignment 1"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "febee99"
        },
        "content": "(by: Mon, 16 Sep 2019, 11:59 PM)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "febee99"
        },
        "content": "3. [E][✘] gala dinner"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "febee99"
        },
        "content": "(from: Wed, 18 Sept 2019, 11:59PM,"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "febee99"
        },
        "content": "to: Sun, 1 Dec 2019 , 08:00PM)` \u003cbr\u003e "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "febee99"
        },
        "content": "1. [D][✘] hand in homework"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "febee99"
        },
        "content": "(by: Wed, 18 Sep 2019, 11:59 PM)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "febee99"
        },
        "content": "4. [T][✘] make the bed"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "febee99"
        },
        "content": "_Example of usage:_ "
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "febee99"
        },
        "content": "sort date"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "febee99"
        },
        "content": "_Expected outcome:_"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "febee99"
        },
        "content": "Sorted list by date:"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "febee99"
        },
        "content": "4. [T][✘] make the bed"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "febee99"
        },
        "content": "2. [D][✘] complete assignment "
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "febee99"
        },
        "content": "(by: Mon, 16 Sep 2019, 11:59 PM)"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "febee99"
        },
        "content": "3. [E][✘] gala dinner"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "febee99"
        },
        "content": "(from: Wed, 18 Sept 2019, 11:59PM,"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "febee99"
        },
        "content": "to: Sun, 1 Dec 2019 , 08:00PM)`"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "febee99"
        },
        "content": "1. [D][✘] hand in homework`"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "febee99"
        },
        "content": "`"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "febee99"
        },
        "content": "`(by: Wed, 18 Sep 2019, 11:59 PM)`\u003cbr\u003e"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "febee99"
        },
        "content": "### 2.7 Exit Command"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "febee99"
        },
        "content": "### 2.7.1 `bye` - Exits from the program."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "febee99"
        },
        "content": "This quits Duke and allows you to exit from the program."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "febee99"
        },
        "content": "bye"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "febee99"
        },
        "content": "_Expected outcome:_"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "febee99"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "febee99"
        },
        "content": "```"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "febee99"
        },
        "content": "### 2.8 Saving The Data"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "febee99"
        },
        "content": "Previously saved tasks can be loaded up as the program boots up. Your task list is also automatically altered\u003cbr\u003e"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "febee99"
        },
        "content": "after any command that modifies the list."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "febee99"
        },
        "content": "## 3. Command Summary"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "febee99"
        },
        "content": "Command Type        | Usage            |   Example       |          "
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "febee99"
        },
        "content": "------------        | -------------    | ---------------|"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "febee99"
        },
        "content": "AddCommand   | todo \u003c$description\u003e | todo assignment 1                      |"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "febee99"
        },
        "content": "AddCommand   | deadline \u003c$description\u003e /by \u003c$date\u003e \u003c$time\u003e | deadline Duke Milestone /by 2/2/2019 2359 |"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "febee99"
        },
        "content": "AddCommand   | event \u003c$description\u003e /at \u003c$starting_date\u003e \u003c$starting_time\u003e - \u003c$ending_date\u003e \u003c$ending_time\u003e| event gala dinner /at today - tomorrow |"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "febee99"
        },
        "content": "DeleteCommand | delete \u003c$task_index\u003e | delete 4|"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "febee99"
        },
        "content": "DoneCommand | done \u003c$task_index\u003e | done 3 |"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "febee99"
        },
        "content": "FindCommand | find \u003c$keyword\u003e | find homework | "
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "febee99"
        },
        "content": "SortCommand | sort \u003c$method\u003e | sort name or sort date |"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "febee99"
        },
        "content": "ExitCommand | bye |"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "febee99": 235,
      "-": 15
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "class DialogBox extends HBox {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "        displayPicture.setClip(new Circle(50, 50, 40));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Gets User Dialogue."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param text The text to pass in."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param img  The image of User."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The User Dialog Box."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "febee99"
        },
        "content": "    static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "febee99"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "febee99"
        },
        "content": "        db.setBackground(Background.EMPTY);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "febee99"
        },
        "content": "        String style \u003d \"-fx-background-color: rgba(119, 136, 153, 0.5);\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "febee99"
        },
        "content": "        db.setStyle(style);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Gets Duke Dialogue."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param text The text to pass in."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param img The image of Duke."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The User Dialog Box."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "febee99"
        },
        "content": "    static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "febee99"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "febee99"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "febee99"
        },
        "content": "        db.setBackground(Background.EMPTY);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "febee99"
        },
        "content": "        String style \u003d \"-fx-background-color: rgba(211, 211, 211, 0.5);\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "febee99"
        },
        "content": "        db.setStyle(style);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 85
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises new duke.Duke session."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "    Duke() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "        storage \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Starts up the chat-box application."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param stage The stage to set the scene on."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Parses the user input and returns a response string by Duke."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param input The user input keyed in."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The response string generated."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": "            return c.execute(tasks, storage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "febee99"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 56,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Launches the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param args The args to launch the program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 15
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 32
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Set Duke to d."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param d The duke to be initialised."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "                DialogBox.getDukeDialog(new Ui().showWelcome(), dukeImage)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "        );"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "febee99"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "febee99"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "febee99"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "febee99"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "febee99"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "febee99"
        },
        "content": "        );"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "febee99"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 62
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.parser.DateParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private Date start;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private Date end;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises an AddCommand."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param type        The type of AddCommand."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param nameAndDate The name and date of the task to be added."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @throws DukeException In the event of empty descriptions/invalid commands/ invalid command formats."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public AddCommand(String type, String[] nameAndDate) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "        String taskName \u003d nameAndDate[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "        Date[] taskDate;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "            task \u003d new ToDo(taskName);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "            taskDate \u003d DateParser.parse(nameAndDate[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "            task \u003d new Deadline(taskName, taskDate[0]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "            taskDate \u003d DateParser.parse(nameAndDate[1]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "            task \u003d new Event(taskName, taskDate[0], taskDate[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Executes the AddCommand, adds the task to the LinkedList and saves it to the file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param tasks   The TaskList containing all existing tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param storage The Storage for saving tasks to file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The response string."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "febee99"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "febee99"
        },
        "content": "        storage.appendTaskToFile(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return (\"Got it. I\u0027ve added this task:\\n\" + task + tasks.getStatus());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Checks if it is a bye command."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return A boolean: true if it is a bye command."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 70
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param tasks   The TaskList containing all existing tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param storage The Storage for saving tasks to file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The response string."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public abstract String execute(TaskList tasks, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Checks if it is a bye command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return A boolean: true if it is a bye command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 25
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private int[] indexes;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a DeleteCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param index The index of the task to be deleted."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Executes the Delete Command and removes the task from the Linked List and file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param tasks   The TaskList containing all existing tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param storage The Storage for saving tasks to file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The response string."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "            Task t \u003d tasks.getList().get(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "            storage.deleteTaskFromFile(t);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "            tasks.deleteTask(t);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "            return (\"Noted. I\u0027ve removed this task:\\n\" + t + tasks.getStatus());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "            throw new DukeException(\"Invalid task number. Not within range\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Checks if it is a bye command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return A boolean: true if it is a bye command."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 49
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a DoneCommand."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param index The index of the task to be marked as done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Executes the Done Command and marks the task as done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param tasks   The TaskList containing all existing tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param storage The Storage for saving tasks to file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The response string."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "            Task t \u003d tasks.getList().get(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "            // Delete from file, mark as done, reinsert into file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "            storage.deleteTaskFromFile(t);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "            t.markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "            storage.appendTaskToFile(t);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "            assert (t.getStatus()) : \"Not marked as done\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "            return (\"Nice! I\u0027ve marked this task as done:\\n\" + t);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "            throw new DukeException(\"Invalid task number. Not within range\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Checks if it is a bye command."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return A boolean: true if it is a bye command."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 51
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises an ExitCommand."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Executes the Exit Command and kills the duke session."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param tasks   The TaskList containing all existing tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param storage The Storage for saving tasks to file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The response string."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return (\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Checks if it is a bye command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return A boolean: true if it is a bye command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 34
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a FindCommand."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param keyword The keyword to find in tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.keyword \u003d keyword.toLowerCase();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Executes the Find Command and lists all existing tasks in the TaskList that contains the keyword."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param tasks   The TaskList containing all existing tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param storage The Storage for saving tasks to file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The response string."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "        // Print all existing items in the list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "        boolean hasMatching \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "        for (Task x : tasks.getList()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "            if (x.toString().toLowerCase().contains(keyword)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "                hasMatching \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "                sb.append(tasks.getList().indexOf(x) + 1).append(\". \").append(x).append(\"\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "        if (!hasMatching) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "            sb \u003d new StringBuilder(\"No matching tasks found.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Checks if it is a bye command."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return A boolean: true if it is a bye command."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 52
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a ListCommand."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /** "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Executes the List Command and lists all existing tasks in the TaskList."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param tasks   The TaskList containing all existing tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param storage The Storage for saving tasks to file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The response string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "        // Print all existing items in the list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "        tasks.getList().forEach(x -\u003e sb.append(tasks.getList().indexOf(x) + 1).append(\". \").append(x).append(\"\\n\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Checks if it is a bye command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return A boolean: true if it is a bye command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 37
    }
  },
  {
    "path": "src/main/java/duke/command/SortCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class SortCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private String way;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a FindCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param way The way to sort the list by."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public SortCommand(String way) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.way \u003d way;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Executes the Sort Command and sorts the list by the way specified."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param tasks   The TaskList containing all existing tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param storage The Storage for saving tasks to file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The response string."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Sorted list by \" + way + \":\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "        LinkedList\u003cTask\u003e t \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "        switch (way) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "        case (\"name\"):"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "            t \u003d tasks.sortByName();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "        case (\"date\"):"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "            t \u003d tasks.sortByDate();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "        t.forEach(x -\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": "                sb.append(tasks.getList().indexOf(x) + 1).append(\". \").append(x).append(\"\\n\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Checks if it is a bye command."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return A boolean: true if it is a bye command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 55
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a DukeException."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param message The error message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "        super(\"☹ OOPS!!! \" + message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Returns an example of the correct format for the specific command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param command The command to return a format for."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The correct user input format."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "    static String getCorrectFormat(String command) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "            return \"e.g. todo make bed\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "            return \"e.g. deadline assignment 3 /by 11/12/2019 1500\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "            return \"e.g. event assignment 3 /at 11/12/2019 1500 - 12/12/2019 2000\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "            return \"e.g. \" + command + \" 3\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "            return \"e.g. find book\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "            return \"list\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "        case \"sort\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "            return \"e.g. sort name\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 42
    }
  },
  {
    "path": "src/main/java/duke/exception/IncorrectFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class IncorrectFormatException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public IncorrectFormatException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "        super(\"Incorrect format detected. Please try again.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a IncorrectFormatException."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param command The command entered."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param reason The specific reason why it is an incorrect format."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public IncorrectFormatException(String command, String reason) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "        super(\"Incorrect format detected. Please try again.\\n\" + command + \" \" + reason);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a IncorrectFormatException."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param command The command used in the wrong format."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public IncorrectFormatException(String command) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "        super(\"Incorrect format detected. Please try again with the following format...\\n\" + getCorrectFormat(command));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 27
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class MissingDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a EmptyDescriptionException."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param taskType The task type entered."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public MissingDescriptionException(String taskType) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "        super(\"The description of a \" + taskType"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "                + \" cannot be empty. Please try again with the following format...\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "                + getCorrectFormat(taskType));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 15
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingFieldException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class MissingFieldException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a MissingFieldException."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param missingField The task type entered."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public MissingFieldException(String missingField) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "        super(\"Missing a \" + missingField + \".\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a UnknownCommandException."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public UnknownCommandException() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "        super(\"I\u0027m sorry, but I don\u0027t know what that means :-( \");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 12
    }
  },
  {
    "path": "src/main/java/duke/parser/DateParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.exception.IncorrectFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.exception.MissingFieldException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class DateParser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private static final String[] allDays \u003d new String[] {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "        \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"};"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Parses any description and determines the type of command that was entered."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param fullDate The command input by user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The parsed description."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @throws DukeException In the event that a description has an incorrect format/empty fields."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public static Date[] parse(String fullDate) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "            if (fullDate.contains(\"-\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "                String[] dates \u003d fullDate.split(\"-\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "                System.out.println(Arrays.toString(dates));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "                return new Date[]{parseDate(dates[0]), parseDate(dates[1])};"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "                return new Date[] {parseDate(fullDate)};"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "            throw new MissingFieldException(\"\u003c$ending_date\u003e\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Parses a date string and reformats it as a date."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The string representation of the new date object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private static Date parseDate(String date) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "            SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\", java.util.Locale.ENGLISH);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "            Date myDate \u003d sdf.parse(parseNaturalDate(date.trim()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "            sdf.applyPattern(\"EEE, d MMM yyyy, hh:mm a\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "            String dateString \u003d sdf.format(myDate);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": "            return sdf.parse(dateString);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "febee99"
        },
        "content": "            System.out.println(e.getLocalizedMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "febee99"
        },
        "content": "            throw new IncorrectFormatException(\"Date formats\", \"should have the format e.g. 11/12/1999 1600\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Parses a natural date string and reformats it as a date."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The string representation of the new date object."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private static String parseNaturalDate(String date) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "febee99"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "febee99"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\", java.util.Locale.ENGLISH);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "febee99"
        },
        "content": "        String day \u003d date.split(\"\\\\s+\")[0];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "febee99"
        },
        "content": "        switch (day) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "febee99"
        },
        "content": "        case \"today\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "febee99"
        },
        "content": "            return sdf.format(setToEndOfDay(calendar.getTime()));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "febee99"
        },
        "content": "        case \"tomorrow\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "febee99"
        },
        "content": "            calendar.add(Calendar.DATE, 1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "febee99"
        },
        "content": "            return sdf.format(setToEndOfDay(calendar.getTime()));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "febee99"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "febee99"
        },
        "content": "            if (Arrays.stream(allDays).parallel().anyMatch(date::contains)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "febee99"
        },
        "content": "                Optional\u003cString\u003e matching \u003d Arrays.stream(allDays).parallel().filter(date::contains).findAny();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "febee99"
        },
        "content": "                return parseDaysOfWeek(matching, date, calendar);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "febee99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "febee99"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Parses a day in the week to a date object."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param day The day to be parsed."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param calendar The calendar to add days to the date."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The string representation of the new date object."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private static String parseDaysOfWeek(Optional\u003cString\u003e day, String date, Calendar calendar) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "febee99"
        },
        "content": "        int dayToday \u003d calendar.get(Calendar.DAY_OF_WEEK);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "febee99"
        },
        "content": "        int days \u003d Arrays.asList(allDays).indexOf(day.get()) + 1 - dayToday;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "febee99"
        },
        "content": "        System.out.println(days);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "febee99"
        },
        "content": "        if (days \u003c\u003d 0) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "febee99"
        },
        "content": "            days +\u003d 7;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "febee99"
        },
        "content": "            System.out.println(\"negative:: \" + days);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "febee99"
        },
        "content": "        if (date.contains(\"next\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "febee99"
        },
        "content": "            // If the day has not passed this week, e.g. wednesday will assume it to be wednesday of this week."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "febee99"
        },
        "content": "            days +\u003d 7;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "febee99"
        },
        "content": "            System.out.println(\"next \" + days);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "febee99"
        },
        "content": "        calendar.add(Calendar.DAY_OF_YEAR, days);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return new SimpleDateFormat(\"dd/MM/yyyy HHmm\","
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "febee99"
        },
        "content": "                java.util.Locale.ENGLISH).format(setToEndOfDay(calendar.getTime()));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Sets the time of the date to 2359."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param date The date to be edited."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The new date object with time 2359."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private static Date setToEndOfDay(Date date) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "febee99"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "febee99"
        },
        "content": "        cal.setTime(date);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "febee99"
        },
        "content": "        cal.set(Calendar.HOUR_OF_DAY, 23);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "febee99"
        },
        "content": "        cal.set(Calendar.MINUTE, 59);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "febee99"
        },
        "content": "        cal.set(Calendar.SECOND, 0);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "febee99"
        },
        "content": "        cal.set(Calendar.MILLISECOND, 0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return cal.getTime();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "febee99": 124
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.command.SortCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.exception.IncorrectFormatException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.exception.MissingDescriptionException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.exception.MissingFieldException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.exception.UnknownCommandException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Parses any user inputs and determines the type of command that was entered."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param fullCommand The command input by user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The type of command entered."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @throws DukeException In the event that a command has an incorrect format/ empty description."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "        //Parse the string to check which command it is referring to"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "        String[] details \u003d fullCommand.trim().split(\"\\\\s+\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "            switch (details[0]) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "                return new FindCommand(details[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"sort\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "                return new SortCommand(details[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "                return new DoneCommand(Integer.parseInt(details[1]) - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(details[1]) - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "                return new AddCommand(details[0], getNameAndDate(fullCommand));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "                throw new UnknownCommandException();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "            // If the command misses a description entirely"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": "            switch (details[0]) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "febee99"
        },
        "content": "                throw new MissingDescriptionException(details[0]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "febee99"
        },
        "content": "                throw new MissingFieldException(\"task index\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "febee99"
        },
        "content": "                throw new MissingFieldException(\"keyword to find\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "febee99"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "febee99"
        },
        "content": "                throw new IncorrectFormatException();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "febee99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "febee99"
        },
        "content": "            // If the delete/done commands are followed by strings instead of a number index"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "febee99"
        },
        "content": "            throw new IncorrectFormatException(details[0], \"should be followed by a number index not a string\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Gets task name and date separately from full command."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param fullCommand The command input by user."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The string array containing the task name and task date parsed from full command."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @throws DukeException In the event that a command is missing a task name."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "febee99"
        },
        "content": "    static String[] getNameAndDate(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "febee99"
        },
        "content": "        String taskType \u003d fullCommand.trim().split(\"\\\\s+\")[0]; //e.g. deadline"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "febee99"
        },
        "content": "        String nameAndDate \u003d fullCommand.split(taskType)[1].trim(); //e.g. do homework /by tomorrow"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "febee99"
        },
        "content": "        String[] details;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "febee99"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "febee99"
        },
        "content": "                return parseDeadlineDetails(taskType, nameAndDate);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "febee99"
        },
        "content": "                return parseEventDetails(taskType, nameAndDate);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "febee99"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "febee99"
        },
        "content": "                return parseToDoDetails(taskType, nameAndDate);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "febee99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "febee99"
        },
        "content": "            throw new IncorrectFormatException(taskType);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "febee99"
        },
        "content": "    static String[] parseToDoDetails(String taskType, String nameAndDate) throws DukeException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "febee99"
        },
        "content": "        if (nameAndDate.length() \u003c 1) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "febee99"
        },
        "content": "            throw new MissingDescriptionException(taskType);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return new String[] {nameAndDate};"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "febee99"
        },
        "content": "    static String[] parseDeadlineDetails(String taskType, String nameAndDate) throws DukeException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "febee99"
        },
        "content": "        String[] details;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "febee99"
        },
        "content": "        details \u003d nameAndDate.split(\"/by\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "febee99"
        },
        "content": "        if (details.length \u003d\u003d 0) { //e.g. deadline /by"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "febee99"
        },
        "content": "            throw new MissingFieldException(\"\u003c$task_name\u003e and a \u003c$task_date\u003e\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } else if (details[0].isBlank()) { //e.g. deadline (space)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "febee99"
        },
        "content": "            throw new MissingDescriptionException(taskType);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } else if (details.length \u003d\u003d 1) { //e.g. deadline do homework"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "febee99"
        },
        "content": "            throw new MissingFieldException(\"\u003c$task_date\u003e\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private static String[] parseEventDetails(String taskType, String nameAndDate) throws DukeException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "febee99"
        },
        "content": "        String[] details;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "febee99"
        },
        "content": "        details \u003d nameAndDate.split(\"/at\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "febee99"
        },
        "content": "        if (details.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "febee99"
        },
        "content": "            throw new MissingFieldException(\"\u003c$task_name\u003e, and \u003c$start_date\u003e - \u003c$end_date\u003e\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } else if (details[0].isBlank()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "febee99"
        },
        "content": "            throw new MissingDescriptionException(taskType);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } else if (details[1].isBlank() || !details[1].contains(\"-\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "febee99"
        },
        "content": "            throw new MissingFieldException(\"\u003c$end_date\u003e\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 129
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a Storage session."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param filepath The file to store tasks to."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Reads the input file line by line to add tasks into the TaskList."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The LinkedList containing all loaded tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @throws DukeException In the event that the file cannot be read properly."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public LinkedList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "        LinkedList\u003cTask\u003e allTasks \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "            File f \u003d new File(filepath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "            if (!f.exists()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": "                f.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(f));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "            String currLine;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "            while ((currLine \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "                assert (currLine.contains(\"|\")) : \"No | detected in line\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "                allTasks.add(convertLineToTask(currLine));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "febee99"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "febee99"
        },
        "content": "            throw new DukeException(\"Cannot parse items...\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return allTasks;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Converts a line from file to a Task object."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param currLine The current line to be converted."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The Task object generated from the line."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private Task convertLineToTask(String currLine) throws ParseException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "febee99"
        },
        "content": "        String[] formattedText \u003d currLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "febee99"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "febee99"
        },
        "content": "        switch (formattedText[0]) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "febee99"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "febee99"
        },
        "content": "            t \u003d new ToDo(formattedText[2]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "febee99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "febee99"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "febee99"
        },
        "content": "            t \u003d new Deadline(formattedText[2],"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    new SimpleDateFormat(\"EEE, d MMM yyyy, hh:mm a\").parse(formattedText[3]));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "febee99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "febee99"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "febee99"
        },
        "content": "            t \u003d new Event(formattedText[2],"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    new SimpleDateFormat(\"EEE, d MMM yyyy, hh:mm a\").parse(formattedText[3]),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    new SimpleDateFormat(\"EEE, d MMM yyyy, hh:mm a\").parse(formattedText[4]));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "febee99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "febee99"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "febee99"
        },
        "content": "            t \u003d new Task(\"\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "febee99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "febee99"
        },
        "content": "        if (formattedText[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "febee99"
        },
        "content": "            t.markAsDone();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Append a new task to the end of the file."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param t The task to be added."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void appendTaskToFile(Task t) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "febee99"
        },
        "content": "            BufferedWriter output \u003d new BufferedWriter(new FileWriter(filepath, true));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "febee99"
        },
        "content": "            output.append(t.toStore()).append(\"\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "febee99"
        },
        "content": "            output.close();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "febee99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Deletes a task from the file."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param t The task to be deleted."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The deletion status boolean."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public boolean deleteTaskFromFile(Task t) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "febee99"
        },
        "content": "        File inputFile \u003d new File(filepath);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "febee99"
        },
        "content": "        File tempFile \u003d new File(\"data/temp.txt\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "febee99"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(inputFile));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "febee99"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(tempFile));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "febee99"
        },
        "content": "            String lineToRemove \u003d t.toStore();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "febee99"
        },
        "content": "            String currentLine;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "febee99"
        },
        "content": "            while ((currentLine \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "febee99"
        },
        "content": "                // trim newline when comparing with lineToRemove"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "febee99"
        },
        "content": "                String trimmedLine \u003d currentLine.trim();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "febee99"
        },
        "content": "                if (trimmedLine.equals(lineToRemove)) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "febee99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "febee99"
        },
        "content": "                writer.write(currentLine + \"\\n\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "febee99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "febee99"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "febee99"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "febee99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return tempFile.renameTo(inputFile);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 139
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private final Date date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a Deadline task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param description The deadline description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param date          The time at which the deadline is up."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public Deadline(String description, Date date) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.date \u003d (Date) date.clone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Gets the date of the deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The date of the deadline."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return (Date) date.clone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * The string representation of a deadline for printing."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The deadline string for printing."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return \"[D]\" + super.toString() + \"\\n(by: \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "                + new SimpleDateFormat(\"EEE, d MMM yyyy, hh:mm a\").format(date) + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * The string representation of a deadline for saving to file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The deadline string for storage."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String toStore() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return \"D\" + super.toStore() + \"|\" + new SimpleDateFormat(\"EEE, d MMM yyyy, hh:mm a\").format(date);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 51
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private final Date start;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private final Date end;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises an event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param description The event description"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param start       The time period during which the event occurs"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public Event(String description, Date start, Date end) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.start \u003d (Date) start.clone();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.end \u003d (Date) end.clone();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Gets the date of the deadline."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The date of the deadline."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return (Date) start.clone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Returns out the string representation of an event for printing."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The event string for printing."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return \"[E]\" + super.toString() + \" \\n(from: \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "                + new SimpleDateFormat(\"EEE, d MMM yyyy, hh:mm a\").format(start) + \" \\n to:  \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "                + new SimpleDateFormat(\"EEE, d MMM yyyy, hh:mm a\").format(end) + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Returns the string representation of an event for saving to file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The event string for storage."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String toStore() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return \"E\" + super.toStore() + \"|\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "febee99"
        },
        "content": "                + new SimpleDateFormat(\"EEE, d MMM yyyy, hh:mm a\").format(start) + \"|\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "febee99"
        },
        "content": "                + new SimpleDateFormat(\"EEE, d MMM yyyy, hh:mm a\").format(end);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 56
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param description The task description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Gets the status icon of a task by checking if it is done or not."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The string representation of the icon."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Gets the status of a task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The boolean status of a task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Gets the description of a task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The description of a task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return description.trim().toLowerCase();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Gets the date of a task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The date of a task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * The string representation of a task for printing."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The task string for printing."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * The string representation of a task for saving to file."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The task string for storage."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String toStore() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return isDone ? \"|1|\" + this.description : \"|0|\" + this.description;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 82
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private static LinkedList\u003cTask\u003e allTasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a TaskList with allTasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param allTasks The LinkedList containing all existing tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public TaskList(LinkedList\u003cTask\u003e allTasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "        TaskList.allTasks \u003d allTasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises an empty TaskList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "        allTasks \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Gets the LinkedList from TaskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The LinkedList containing all existing tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return Collections.unmodifiableList(allTasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Adds the task to the LinkedList containing all existing tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param t The task to be newly added."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "        allTasks.add(t);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Deletes the task from the LinkedList containing all existing tasks."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param t The task to be deleted."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void deleteTask(Task t) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "        allTasks.remove(t);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Gets the current status of task list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The string representation of its status."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return \"\\nNow you have \" + allTasks.size()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "febee99"
        },
        "content": "                + (allTasks.size() \u003d\u003d 1 ? \" task in the list.\" : \" tasks in the list.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Sorts the LinkedList containing all existing tasks by name."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The sorted LinkedList."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public LinkedList\u003cTask\u003e sortByName() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "febee99"
        },
        "content": "        LinkedList\u003cTask\u003e copy \u003d new LinkedList\u003c\u003e(allTasks);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "febee99"
        },
        "content": "        Comparator\u003cTask\u003e nameSorter \u003d Comparator.comparing(Task::getDescription);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "febee99"
        },
        "content": "        copy.sort(nameSorter);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return copy;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Sorts the LinkedList containing all existing tasks by date."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The sorted LinkedList."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public LinkedList\u003cTask\u003e sortByDate() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "febee99"
        },
        "content": "        LinkedList\u003cTask\u003e copy \u003d new LinkedList\u003c\u003e(allTasks);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "febee99"
        },
        "content": "        Comparator\u003cTask\u003e nameSorter \u003d Comparator.comparing(Task::getDate,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "febee99"
        },
        "content": "                Comparator.nullsFirst(Comparator.naturalOrder()));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "febee99"
        },
        "content": "        copy.sort(nameSorter);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return copy;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 88
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a to-do task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param description The description of the to-do task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * The string representation of a to-do for printing."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The to-do string for printing."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * The string representation of a to-do for saving to file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The to-do string for storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String toStore() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return \"T\" + super.toStore();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 33
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a Ui."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Prints out the logo and welcome message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The welcome string."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "        String s \u003d \" __    _  _   _  __  ___    \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "                + \"| _\\\\  | || | | |/ / | __|   \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "                + \"| v | | \\\\/ | |   \u003c  | _|    \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "                + \"|__/ \\\\__/  |_|\\\\_\\\\|___|   \\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "        String x \u003d \" _                   __    \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "                + \"|  \\\\ |    | |__/ |__     \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "                + \"|__/\\\\__/ |   \\\\ |__    \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "                + \"                       \\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "        String a \u003d \" __                   __    \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "                + \"|   \\\\ |     | |__/ |__     \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "                + \"|__/ \\\\__/  |  \\\\  |__    \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "                + \"                       \\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return s + \"Hello! I\u0027m Duke. \\nWhat can I do for you?\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Prints out a loading error message."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "        System.err.println(\"Loading error...\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Prints out the given error message."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param message The passed input message"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "        System.err.println(message);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Reads the command input by the user."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The command input by the user for parsing."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "febee99"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Prints out the given message."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param msg The passed output message"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void printMessage(String msg) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "febee99"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 67
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "    \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "    \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-line-spacing: 0.5em;\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "        \u003cfont\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "            \u003cFont name\u003d\"Lucida Grande\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "        \u003c/font\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "        \u003cpadding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "            \u003cInsets bottom\u003d\"2.0\" left\u003d\"3.0\" right\u003d\"3.0\" top\u003d\"2.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "        \u003c/padding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "    \u003c/Label\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "        \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "    \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "febee99": 32
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "            fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "               AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "                vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "febee99": 20
    }
  },
  {
    "path": "src/test/java/duke/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertArrayEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void getNameAndDate_ToDo_parsedCorrectly() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "            assertArrayEquals(new String[]{\"assignment 1\"},"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "                Parser.getNameAndDate(\"todo assignment 1\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void getNameAndDate_ToDo_exceptionThrown() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "            Parser.getNameAndDate(\"todo \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "            String expected \u003d \u0027\\u2639\u0027 + \" OOPS!!! The description of a todo cannot be empty.\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "                + \" Please try again with the following format...\\ne.g. todo make bed\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "            assertEquals(expected, e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void getNameAndDate_Deadline_parsedCorrectly() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "            assertArrayEquals(new String[]{\"Make the bed \", \" tomorrow\"},"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    Parser.getNameAndDate(\"deadline Make the bed /by tomorrow\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void getNameAndDate_Deadline_exceptionThrown() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "            Parser.getNameAndDate(\"deadline \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "            String expected \u003d \u0027\\u2639\u0027 + \" OOPS!!! The description of a deadline cannot be empty.\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    + \" Please try again with the following format...\\ne.g. deadline assignment 3 /by 11/12/2019 1500\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "            assertEquals(expected, e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void getNameAndDate_Event_parsedCorrectly() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "febee99"
        },
        "content": "            assertArrayEquals(new String[]{\"Gala dinner \", \" today - tomorrow\"},"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    Parser.getNameAndDate(\"event Gala dinner /at today - tomorrow\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "febee99"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void getNameAndDate_Event_exceptionThrown() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "febee99"
        },
        "content": "            Parser.getNameAndDate(\"event \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "febee99"
        },
        "content": "            String expected \u003d \u0027\\u2639\u0027 + \" OOPS!!! The description of a event cannot be empty.\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    + \" Please try again with the following format...\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    + \"\\ne.g. event assignment 3 /at 11/12/2019 1500 - 12/12/2019 2000\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "febee99"
        },
        "content": "            assertEquals(expected, e.getMessage());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void parseToDoDetails_parsedCorrectly() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "febee99"
        },
        "content": "            assertArrayEquals(new String[]{\"Make the bed\"},"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    Parser.parseToDoDetails(\"todo\", \"Make the bed\"));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "febee99"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 87
    }
  },
  {
    "path": "src/test/java/duke/tasks/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void toString_normalDeadline_convertedCorrectly() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "        cal.setTime(new Date());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "        cal.add(Calendar.DAY_OF_YEAR, 1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "        Date tomorrow \u003d cal.getTime();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "        assertEquals(\"[D][\" + \u0027\\u2718\u0027 + \"] Quiz 1\\n(by: \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "                + new SimpleDateFormat(\"EEE, d MMM yyyy, hh:mm a\").format(tomorrow) + \")\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "                new Deadline(\"Quiz 1\", tomorrow).toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void toStore_normalDeadline_convertedCorrectly() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "        cal.setTime(new Date());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "        cal.add(Calendar.DAY_OF_YEAR, 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "        Date tomorrow \u003d cal.getTime();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "        assertEquals(\"D|0|Quiz 1|\" + new SimpleDateFormat(\"EEE, d MMM yyyy, hh:mm a\").format(tomorrow),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "                new Deadline(\"Quiz 1\", tomorrow).toStore());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 34
    }
  },
  {
    "path": "src/test/java/duke/tasks/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void toString_normalDeadline_convertedCorrectly() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "        assertEquals(\"[T][\" + \u0027\\u2718\u0027 + \"] Quiz 1\", new ToDo(\"Quiz 1\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void toStore_normalDeadline_convertedCorrectly() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "        assertEquals(\"T|0|Quiz 1\", new ToDo(\"Quiz 1\").toStore());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 20
    }
  }
]
