[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "group \u0027seedu.duke\u0027 //need change here also or not"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 29,
      "-": 14
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public Date getBy() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 19
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " * Represents the initialisation and continuation of the program"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * Initializes the Duke application and the storage file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    Duke() throws FileNotFoundException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        Storage storage \u003d new Storage(\"../duke.txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        taskList \u003d new TaskList(Storage.load());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * Gets response when user enters an input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * @param input User input for the command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * @return response to the User input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    String getResponse (String input) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            parser.parse(input, ui, taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        } catch (DukeException | ParseException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return ui.getOutput();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 36,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    Date getAt() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 19
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public Main() throws FileNotFoundException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 33
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 49
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " * Deals with making sense of the user command"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * Parses the user input to execute the following intended command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * @param input The user input to execute command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * @param ui User Interface in dealing with duke"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * @param taskList Task list of the current file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * @throws DukeException If user input is in wrong format"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * @throws ParseException If user input of time is in wrong format"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    void parse(String input, Ui ui, TaskList taskList) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        String command \u003d input.split(\" \")[0].trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        assert !command.isEmpty() : \"Input must not be empty\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                if (!input.substring(3).isEmpty()){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Type only bye to terminate the program\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                ui.setToFarewell();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                if (!input.substring(4).isEmpty()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Type only list to display the Task list\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                ui.setToList(taskList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                String todoDescription \u003d input.substring(4).trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                if (todoDescription.isEmpty()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! todo cannot be empty\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                Task todoTask \u003d new Todo(todoDescription);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                taskList.getTaskList().add(todoTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                ui.setToTodo(todoTask, taskList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                Storage.saveTaskList(taskList.getTaskList());//saves file"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    String deadlineDescription \u003d input.substring(8).trim();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    String[] deadlineArray \u003d input.split(\"/by\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    String deadlineName \u003d deadlineArray[0].trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    String deadlineBy \u003d deadlineArray[1].trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    if (deadlineDescription.isEmpty() || deadlineBy.isEmpty()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! deadline and time cannot be empty\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    Task dlTask \u003d new Deadline(deadlineName, sdf.parse(deadlineBy));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    taskList.getTaskList().add(dlTask);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    ui.setToDeadline(dlTask, taskList);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    Storage.saveTaskList(taskList.getTaskList()); //saves file"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                } catch (ParseException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Please insert correct time format: dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Wrong format. Use: deadline (description) /at dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    String eventDescription \u003d input.substring(5).trim();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    String[] eventArray \u003d input.split(\"/at\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    String eventName \u003d eventArray[0].trim();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    String eventAt \u003d eventArray[1].trim();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    if (eventDescription.isEmpty() || eventAt.isEmpty()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! event and time cannot be empty\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    SimpleDateFormat sdf2 \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    Task eventTask \u003d new Event(eventName, sdf2.parse(eventAt));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    taskList.getTaskList().add(eventTask);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    ui.setToEvent(eventTask, taskList);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    Storage.saveTaskList(taskList.getTaskList()); //save file"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                } catch (ParseException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Please insert correct time format: dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Wrong format. Use: event (description) /at dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    int taskNum \u003d Integer.parseInt(input.substring(5).trim());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    taskList.getTaskList().get(taskNum - 1).markAsDone();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    ui.setToDone(taskNum, taskList);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    Storage.saveTaskList(taskList.getTaskList()); //save file"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The task number is not in the list\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Wrong format. Use: done (task number)\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    int taskNum2 \u003d Integer.parseInt(input.substring(6).trim());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    ui.setToDelete(taskNum2, taskList);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    taskList.getTaskList().remove(taskNum2 - 1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    Storage.saveTaskList(taskList.getTaskList()); //save file"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The task number is not in the list\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Wrong format. Use: delete (task number)\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    String findWord \u003d input.substring(4).trim();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    ArrayList\u003cTask\u003e relatedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    ui.setToFind(relatedTasks, taskList, findWord);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Wrong format. Use: delete (task number)\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 125
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private static File file;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    Storage(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * Loads a file to add tasks into taskList"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * @return taskList"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    static ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                String[] task \u003d sc.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                String taskType \u003d task[0].trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                boolean isTaskDone \u003d task[2].trim().equals(\"1\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        Todo newTask \u003d new Todo(task[2].trim());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        if (isTaskDone) newTask.markAsDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        taskList.add(newTask);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        String eventDescription \u003d task[2].trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        String at \u003d task[3].trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        Event newEvent \u003d new Event(eventDescription, sdf.parse(at));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        if (isTaskDone) newEvent.markAsDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        taskList.add(newEvent);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        String deadlineDescription \u003d task[2].trim();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        String by \u003d task[3].trim();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        SimpleDateFormat sdf2 \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        Deadline newDeadline \u003d new Deadline(deadlineDescription, sdf2.parse(by));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        if (isTaskDone) newDeadline.markAsDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        taskList.add(newDeadline);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        } catch (FileNotFoundException | ParseException err) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * Saves the current taskList onto the hard drive"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public static void saveTaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                if (task instanceof Event) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    String str \u003d String.format(\"E | %s | %s | %s\\n\", task.isDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                            task.getDescription(), ((Event) task).getAt());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    fw.write(str);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    String str \u003d String.format(\"D | %s | %s | %s\\n\", task.isDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                            task.getDescription(), ((Deadline) task).getBy());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    fw.write(str);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    String str \u003d String.format(\"T | %s | %s\\n\", task.isDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                            task.getDescription());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    fw.write(str);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 101
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 30
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public void deleteTask(int taskNum) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        this.taskList.remove(taskNum);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 23
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 12
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private String output;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    String getOutput() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return this.output;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    String greet() { //duke greet"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        return \"Hello! I\u0027m Duke.\\n\" + \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    void setToFarewell() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        output \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    void setToList(TaskList taskList) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        output \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getTaskList().size(); i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            String num \u003d \"\" + (i + 1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            output +\u003d \"     \" + num + \".[\" + taskList.getTaskList().get(i).getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                    + taskList.getTaskList().get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    void setToTodo(Task todoTask, TaskList taskList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        output \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                + todoTask.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                \"Now you have \" + taskList.getTaskList().size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    void setToDeadline(Task dlTask, TaskList taskList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        output \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                + dlTask.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                \"Now you have \" + taskList.getTaskList().size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    void setToEvent(Task eventTask, TaskList taskList) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        output \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                + eventTask.toString() + \"\\n\" + \"Now you have \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                + taskList.getTaskList().size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    void setToDone(int taskNum, TaskList taskList) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        assert(taskNum \u003e 0) : \"Task number must be more than 1\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        output \u003d \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                + \"[\" + taskList.getTaskList().get(taskNum - 1).getStatusIcon() + \"]\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                + taskList.getTaskList().get(taskNum - 1).toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    void setToDelete(int taskNum2, TaskList taskList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        assert(taskNum2 \u003e 0) : \"Task number must be more than 1\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        output \u003d \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                + taskList.getTaskList().get(taskNum2 - 1).toString() + \"\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                + \"Now you have \" + (taskList.getTaskList().size() - 1) + \"tasks in the list.\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    void setToFind(ArrayList\u003cTask\u003e relatedTasks, TaskList taskList, String findWord) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        for (Task task : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            if (task.getDescription().contains(findWord)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                relatedTasks.add(task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        output \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        for (int i \u003d 0; i \u003c relatedTasks.size(); i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            int num \u003d i + 1;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            output +\u003d num + \".\" + relatedTasks.get(i);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 73
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 10
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "\u2028\u2028import static org.junit.jupiter.api.Assertions.assertEquals;\u2028\u2028"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "public class TodoTest {\u2028"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    @Test\u2028"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    private void printTodo() {\u2028"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        Todo todo \u003d new Todo(\"learn guitar\");\u2028\u2028"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "        assertEquals(\"[T][✘] learn guitar\", todo.toString());\u2028"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "    }\u2028"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArgVampir"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArgVampir": 10
    }
  }
]
