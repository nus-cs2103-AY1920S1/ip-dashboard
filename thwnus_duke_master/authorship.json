[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "version \u00270.2.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    testImplementation(\u0027org.junit.jupiter:junit-jupiter:5.5.1\u0027)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thwnus"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Main\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thwnus"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thwnus"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    toolVersion \u003d \u00278.24\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 48
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "![Screenshot](Ui.png)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "## Format of this guide"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "User input is prefixed with `\u003e`."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Required parts are surrounded by angle brackets `\u003c\u003e`."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Optional parts are surrounded by square brackets `[]`."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "These brackets are not part of the actual typed commands."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "### Tasks, deadlines, events and loans"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "You can manage tasks, deadlines, events and loans all in one app!"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "### Simple command-line interface"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Perfect for those who prefer no-frills programs."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": "### `todo` \u0026mdash; Add todo task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Add a task you need to do."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thwnus"
        },
        "content": "```"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e todo \u003cdescription\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thwnus"
        },
        "content": "```"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thwnus"
        },
        "content": "### `deadline` \u0026mdash; Add deadline"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Add a deadline you need to meet."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thwnus"
        },
        "content": "```"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e deadline \u003cdescription\u003e [/by \u003ctime: d/m/yyyy hh:mm\u003e]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thwnus"
        },
        "content": "```"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thwnus"
        },
        "content": "### `event` \u0026mdash; Add event"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Add an event you need to attend."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thwnus"
        },
        "content": "```"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e event \u003cdescription\u003e [/at \u003ctime: d/m/yyyy hh:mm\u003e]"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thwnus"
        },
        "content": "```"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thwnus"
        },
        "content": "### `loanin` \u0026mdash; Add loan in"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Add a loan you made from someone."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thwnus"
        },
        "content": "```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e loanin \u003camount\u003e \u003cdescription\u003e [/by \u003ctime: d/m/yyyy hh:mm\u003e]"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thwnus"
        },
        "content": "```"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thwnus"
        },
        "content": "### `loanout` \u0026mdash; Add loan out"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Add a loan you made to someone."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thwnus"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e loanout \u003camount\u003e \u003cdescription\u003e [/by \u003ctime: d/m/yyyy hh:mm\u003e]"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thwnus"
        },
        "content": "```"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thwnus"
        },
        "content": "### `list` \u0026mdash; List tasks"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thwnus"
        },
        "content": "List tasks."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thwnus"
        },
        "content": "```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e list"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thwnus"
        },
        "content": "```"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "thwnus"
        },
        "content": "### `find` \u0026mdash; Filter tasks"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Search for tasks whose description contains a given keyword."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thwnus"
        },
        "content": "```"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e find \u003ckeyword\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "thwnus"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "thwnus"
        },
        "content": "### `done` \u0026mdash; Mark tasks as done"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Mark a task as done. The task number is as shown by `list`."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "thwnus"
        },
        "content": "```"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e done \u003ctask number\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "thwnus"
        },
        "content": "```"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "thwnus"
        },
        "content": "### `delete` \u0026mdash; Delete tasks"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Delete a task. The task number is as shown by `list`."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "thwnus"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e delete \u003ctask number\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "thwnus"
        },
        "content": "```"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "thwnus"
        },
        "content": "### `bye` \u0026mdash; Exit"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Exit Duke."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "thwnus"
        },
        "content": "```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e bye"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "thwnus"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "thwnus": 92,
      "-": 13
    }
  },
  {
    "path": "expected.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Unknown command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e \u003e Invalid task ID"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Invalid task ID"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Invalid number asdhagsdh"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "  [T][ ] asdasdg"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "  [T][ ] sdfusdguiohdfg"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "  [E][ ] sdfjhsdfjsd"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "  [E][ ] awdfksdhjfjkh (at: sdfjksdhfgudfg)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": "  [T][ ] sdhjsdfjhdfg /at sdfsdfgdfgh"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": "  [D][ ] sdfjhsfgjh (by: asdfdfhguidfgd)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thwnus"
        },
        "content": "  [D][ ] fsjgdfjkgh /at sdgldfhguid"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thwnus"
        },
        "content": "[T][✓] asdasdg"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thwnus"
        },
        "content": "[T][✓] sdfusdguiohdfg"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e 1. [T][✓] asdasdg"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thwnus"
        },
        "content": "2. [T][✓] sdfusdguiohdfg"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thwnus"
        },
        "content": "3. [E][ ] sdfjhsdfjsd"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thwnus"
        },
        "content": "4. [E][ ] awdfksdhjfjkh (at: sdfjksdhfgudfg)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thwnus"
        },
        "content": "5. [T][ ] sdhjsdfjhdfg /at sdfsdfgdfgh"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thwnus"
        },
        "content": "6. [D][ ] sdfjhsfgjh (by: asdfdfhguidfgd)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thwnus"
        },
        "content": "7. [D][ ] fsjgdfjkgh /at sdgldfhguid"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thwnus"
        },
        "content": "[D][✓] fsjgdfjkgh /at sdgldfhguid"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e 1. [T][✓] asdasdg"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thwnus"
        },
        "content": "2. [T][✓] sdfusdguiohdfg"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thwnus"
        },
        "content": "3. [E][ ] sdfjhsdfjsd"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thwnus"
        },
        "content": "4. [E][ ] awdfksdhjfjkh (at: sdfjksdhfgudfg)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thwnus"
        },
        "content": "5. [T][ ] sdhjsdfjhdfg /at sdfsdfgdfgh"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thwnus"
        },
        "content": "6. [D][ ] sdfjhsfgjh (by: asdfdfhguidfgd)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thwnus"
        },
        "content": "7. [D][✓] fsjgdfjkgh /at sdgldfhguid"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thwnus"
        },
        "content": "  [T][ ] sdhjsdfjhdfg /at sdfsdfgdfgh"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thwnus"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thwnus"
        },
        "content": "[E][✓] awdfksdhjfjkh (at: sdfjksdhfgudfg)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e 1. [T][✓] asdasdg"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thwnus"
        },
        "content": "2. [T][✓] sdfusdguiohdfg"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thwnus"
        },
        "content": "3. [E][ ] sdfjhsdfjsd"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thwnus"
        },
        "content": "4. [E][✓] awdfksdhjfjkh (at: sdfjksdhfgudfg)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thwnus"
        },
        "content": "5. [D][ ] sdfjhsfgjh (by: asdfdfhguidfgd)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thwnus"
        },
        "content": "6. [D][✓] fsjgdfjkgh /at sdgldfhguid"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003e Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "thwnus": 66
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thwnus"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thwnus"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thwnus"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thwnus"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thwnus"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thwnus"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thwnus"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thwnus"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thwnus"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thwnus"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thwnus"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thwnus"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thwnus"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thwnus"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thwnus"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thwnus"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thwnus"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thwnus"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thwnus"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thwnus"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thwnus"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thwnus"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thwnus"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thwnus"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thwnus"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thwnus"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thwnus"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "thwnus"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thwnus"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thwnus"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "thwnus"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "thwnus"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "thwnus"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "thwnus"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "thwnus"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "thwnus"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "thwnus"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "thwnus"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "thwnus"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "thwnus"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "thwnus"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "thwnus": 100
    }
  },
  {
    "path": "input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "done asdhagsdh"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "todo asdasdg"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "todo sdfusdguiohdfg"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "event sdfjhsdfjsd"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "event awdfksdhjfjkh /at sdfjksdhfgudfg"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "todo sdhjsdfjhdfg /at sdfsdfgdfgh"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "deadline sdfjhsfgjh /by asdfdfhguidfgd"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "deadline fsjgdfjkgh /at sdgldfhguid"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "done 7"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "thwnus": 21
    }
  },
  {
    "path": "runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "#!/bin/bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "if ! gradle assemble; then"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    echo \"Build failed.\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "fi"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "diff \u003c(java -cp build/classes/java/main seedu.duke.Duke \u003c input.txt) expected.txt"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "if [ $? -eq 0 ]; then"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    echo \"Output matches.\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "else"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    echo \"Output mismatch.\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "thwnus": 15
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "thwnus": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.CommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.ByeCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private static final String PROMPT \u003d \"\u003e \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * The main method."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * @param args the command line"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        System.out.println(\"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        TaskList taskList \u003d Serialisation.deserialise();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (taskList \u003d\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            System.out.println(\"No saved list loaded.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            System.out.printf(\"Loaded tasks from %s.%n\", Serialisation.DATA_FILE_PATH);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        try (InputStreamReader isr \u003d new InputStreamReader(System.in);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thwnus"
        },
        "content": "             BufferedReader br \u003d new BufferedReader(isr)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                System.out.print(PROMPT);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                System.out.flush();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                String line \u003d br.readLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                if (line \u003d\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                } else if (line.isBlank()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    System.out.println(\"No command entered.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    Command c \u003d Parser.parse(line);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    if (c \u003d\u003d null) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        System.out.println(\"Unknown command.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    } else if (c instanceof ByeCommand) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        c.execute(taskList);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                } catch (CommandException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            System.err.println(\"IO error.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        Serialisation.serialise(taskList);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        System.out.printf(\"Saved tasks to %s.%n\", Serialisation.DATA_FILE_PATH);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 62,
      "-": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/DukeGui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import javafx.scene.Parent;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import javafx.scene.control.TextArea;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import org.w3c.dom.Text;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.Command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.CommandException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.Parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.ByeCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.TaskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.io.OutputStream;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": " * The main class for the graphical Duke."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class DukeGui extends Application {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private TextArea outputArea;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private TextField commandLine;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private Button enterButton;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        launch(args);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        PrintStream redirectPrintStream \u003d new PrintStream(new TextAreaOutputStream());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        System.setErr(redirectPrintStream);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        System.setOut(redirectPrintStream);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        System.out.println(\"Hello from Duke!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        System.out.println(\"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        taskList \u003d Serialisation.deserialise();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        boolean taskListWasNull \u003d taskList \u003d\u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (taskList \u003d\u003d null) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        setupStage(primaryStage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (taskListWasNull) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            System.out.println(\"No saved list loaded.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            System.out.printf(\"Loaded tasks from %s.%n\", Serialisation.DATA_FILE_PATH);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public void stop() throws Exception {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        Serialisation.serialise(taskList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        System.out.printf(\"Saved tasks to %s.%n\", Serialisation.DATA_FILE_PATH);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private boolean setupStage(Stage primaryStage) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        FXMLLoader loader \u003d new FXMLLoader();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        loader.setLocation(getClass().getResource(\"/main.fxml\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        Parent content;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            content \u003d loader.load();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            System.err.println(\"Error while loading GUI\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        Scene scene \u003d new Scene(content);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        primaryStage.setScene(scene);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        primaryStage.setMinHeight(300);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        primaryStage.setMinWidth(200);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        // FIXME HACK HACK HACK"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        // Should use FX Controller classes"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        outputArea \u003d (TextArea) content.lookup(\"#outputArea\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        commandLine \u003d (TextField) content.lookup(\"#commandText\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        enterButton \u003d (Button) content.lookup(\"#enterButton\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        commandLine.setOnAction(event -\u003e executeCommand());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        enterButton.setOnAction(event -\u003e executeCommand());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private void executeCommand() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        String cmd \u003d commandLine.getText();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        commandLine.setText(\"\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        System.out.printf(\"\u003e %s%n\", cmd);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            Command c \u003d Parser.parse(cmd);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            if (c \u003d\u003d null) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                System.out.println(\"Unknown command.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            } else if (c instanceof ByeCommand) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                c.execute(taskList);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        } catch (CommandException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private class TextAreaOutputStream extends OutputStream {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        private ByteArrayOutputStream buffer \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        private PrintStream origOut \u003d System.out;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        public void write(int i) throws IOException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            buffer.write(i);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            if (i \u003d\u003d ((int) \u0027\\n\u0027) \u0026\u0026 outputArea !\u003d null) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                final String line \u003d buffer.toString(StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                buffer.reset();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                origOut.println(line);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                Platform.runLater(() -\u003e {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    outputArea.appendText(line);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                });"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 137
    }
  },
  {
    "path": "src/main/java/seedu/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": " * This class contains a main method that simply calls the DukeGui main method, in order to workaround how"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": " * Java\u0027s runtime checks if the main class extends {@link javafx.application.Application} and if so, expects"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": " * the JavaFX runtime available as modules."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        DukeGui.main(args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/Serialisation.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class Serialisation {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * The path the data file is stored at."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public static final String DATA_FILE_PATH \u003d \"duke.dat\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private Serialisation() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * Load a serialised task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * The task list is loaded from {@link Serialisation#DATA_FILE_PATH}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * @return the loaded task list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public static TaskList deserialise() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (!new File(DATA_FILE_PATH).exists()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        try (FileInputStream file \u003d new FileInputStream(DATA_FILE_PATH);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thwnus"
        },
        "content": "             ObjectInputStream ois \u003d new ObjectInputStream(file)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return (TaskList) ois.readObject();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        } catch (IOException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            System.err.println(\"Error while loading data file.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * Save a task list to disk."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * The task list is saved to {@link Serialisation#DATA_FILE_PATH}."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public static void serialise(TaskList tasks) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        try (FileOutputStream file \u003d new FileOutputStream(DATA_FILE_PATH);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thwnus"
        },
        "content": "             ObjectOutputStream oos \u003d new ObjectOutputStream(file)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            oos.writeObject(tasks);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            System.err.println(\"Error while writing data file.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 60
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": " * A command that performs actions on a task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * Execute the command on the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * @param taskList The task list to operate on"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * @throws CommandException if an error occurred while running the command"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    void execute(List\u003cTask\u003e taskList) throws CommandException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/CommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class CommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public CommandException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public CommandException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public CommandException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public CommandException(Throwable cause) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        super(cause);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public CommandException(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        super(message, cause, enableSuppression, writableStackTrace);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 22
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.Argument;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.CommandConstructor;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.ByeCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.DeadlineCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.EventCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.LoanCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.TodoCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.annotation.Annotation;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.reflect.Constructor;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.reflect.InvocationTargetException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/uuuu HH:mm\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private static HashMap\u003cString, ConstructorCache\u003e constructors;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        constructors \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        addConstructors(ListCommand.class);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        addConstructors(ByeCommand.class);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        addConstructors(DoneCommand.class);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        addConstructors(TodoCommand.class);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        addConstructors(EventCommand.class);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        addConstructors(DeadlineCommand.class);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        addConstructors(DeleteCommand.class);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        addConstructors(FindCommand.class);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        addConstructors(LoanCommand.class);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    // This class is to be used statically only."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private Parser() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private static \u003cA extends Command\u003e void addConstructors(Class\u003cA\u003e clazz) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        for (Constructor\u003c?\u003e c : clazz.getDeclaredConstructors()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            CommandConstructor[] ccAnns \u003d c.getDeclaredAnnotationsByType(CommandConstructor.class);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            if (ccAnns \u003d\u003d null) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            for (CommandConstructor ccAnn : ccAnns) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                ConstructorCache cc \u003d new ConstructorCache((Constructor\u003c? extends Command\u003e) c);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                constructors.put(ccAnn.value().toLowerCase(), cc);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                boolean seenTrailing \u003d false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                for (Argument a : cc.getParameterAnnotations()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    if (a \u003d\u003d null || a.isCommandName() || !a.isTrailing() || !a.prefix().isBlank()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    if (!seenTrailing) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        seenTrailing \u003d true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        throw new RuntimeException(\"Cannot have multiple trailing arguments without a prefix\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * Parse a command line and return an object implementing {@link Command} that represents"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * the command."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * @param in The command line to parse"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * @return An object representing the parsed command, or {@code null} if no matching command was"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * found"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * @throws CommandException if there were insufficient arguments or some arguments were invalid"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     *                          for their type"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public static Command parse(String in) throws CommandException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        assert constructors !\u003d null : \"ConstructorCache map is null\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        String[] tok \u003d in.split(\"\\\\s\", 2);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        final String commandName \u003d tok[0].toLowerCase();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        ConstructorCache ctor \u003d constructors.get(commandName);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (ctor \u003d\u003d null) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        Class\u003c?\u003e[] paramTypes \u003d ctor.getParameterTypes();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        Argument[] paramAnns \u003d ctor.getParameterAnnotations();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        Object[] params \u003d new Object[paramTypes.length];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        assert paramTypes !\u003d null : \"ConstructorCache parameter type list is null\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        assert paramAnns !\u003d null : \"ConstructorCache parameter annotation list is null\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        for (int i \u003d 0; i \u003c params.length; ++i) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            Argument me \u003d paramAnns[i];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            if (me !\u003d null \u0026\u0026 me.isCommandName()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                params[i] \u003d commandName;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            if (tok.length \u003c 2) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                if (me !\u003d null \u0026\u0026 me.isTrailing()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    params[i] \u003d null;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    // We have a new argument, but there are no more tokens"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    throw new CommandException(\"Insufficient arguments\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            // Three cases here:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            // (1) We are not a trailing argument. The next token is our value."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            // (2) We are a trailing argument, and there are no more arguments after this. The"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            //     remaining tokens are our value."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            // (3) We are a trailing argument, and there is a prefixed trailing argument after this."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            //     The next token up to the prefix of the next argument is our value."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            String value;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            if (me \u003d\u003d null || !me.isTrailing()) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                // Case 1"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                tok \u003d tok[1].split(\"\\\\s\", 2);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                value \u003d tok[0];"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            } else if (i + 1 \u003c params.length) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                // Case 3"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                Argument next \u003d paramAnns[i + 1];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                tok \u003d tok[1].split(\"\\\\s\" + Pattern.quote(next.prefix()) + \"\\\\s\", 2);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                value \u003d tok[0];"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                // Case 2"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                value \u003d tok[1];"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            if (paramTypes[i].equals(int.class)) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    params[i] \u003d Integer.parseInt(value, 10);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    throw new CommandException(\"Invalid number \" + value, nfe);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            } else if (paramTypes[i].equals(String.class)) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                params[i] \u003d value;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            } else if (paramTypes[i].equals(LocalDateTime.class)) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    params[i] \u003d LocalDateTime.parse(value, DATE_FORMAT);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    throw new CommandException(\"Invalid date \\\"\" + value + \"\\\"; format is d/m/yyyy hh:mm\", ex);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                throw new RuntimeException(\"Unhandled argument type\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return ctor.getConstructor().newInstance(params);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        } catch (InstantiationException | IllegalAccessException | InvocationTargetException e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            throw new RuntimeException(\"Unexpected exception invoking constructor\", e);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private static class ConstructorCache {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        private final Class\u003c?\u003e[] parameterTypes;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        private final Argument[] parameterAnnotations;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        private final Constructor\u003c? extends Command\u003e constructor;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        public ConstructorCache(Constructor\u003c? extends Command\u003e ctor) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            this.parameterTypes \u003d ctor.getParameterTypes();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            this.parameterAnnotations \u003d new Argument[this.parameterTypes.length];"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            this.constructor \u003d ctor;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            Annotation[][] paramAnns \u003d ctor.getParameterAnnotations();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            for (int i \u003d 0; i \u003c paramAnns.length; i++) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                Annotation[] as \u003d paramAnns[i];"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                for (Annotation a : as) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    if (!a.annotationType().equals(Argument.class)) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                    this.parameterAnnotations[i] \u003d (Argument) a;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        public Class\u003c?\u003e[] getParameterTypes() {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return parameterTypes;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        public Argument[] getParameterAnnotations() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return parameterAnnotations;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        public Constructor\u003c? extends Command\u003e getConstructor() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return constructor;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 198
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/annotations/Argument.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli.annotations;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.annotation.ElementType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.annotation.Retention;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.annotation.RetentionPolicy;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.annotation.Target;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@Target(ElementType.PARAMETER)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@Retention(RetentionPolicy.RUNTIME)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public @interface Argument {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    String prefix() default \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    boolean isTrailing() default false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    boolean isCommandName() default false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/annotations/CommandConstructor.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli.annotations;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.annotation.ElementType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.annotation.Repeatable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.annotation.Retention;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.annotation.RetentionPolicy;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.annotation.Target;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@Target(ElementType.CONSTRUCTOR)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@Retention(RetentionPolicy.RUNTIME)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@Repeatable(CommandsConstructor.class)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public @interface CommandConstructor {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    String value();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 14
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/annotations/CommandsConstructor.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli.annotations;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.annotation.ElementType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.annotation.Retention;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.annotation.RetentionPolicy;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.lang.annotation.Target;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@Target(ElementType.CONSTRUCTOR)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "@Retention(RetentionPolicy.RUNTIME)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public @interface CommandsConstructor {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    CommandConstructor[] value();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.CommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public abstract class AddCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    protected abstract Task createTask() throws CommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public void execute(List\u003cTask\u003e taskList) throws CommandException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        Task t \u003d createTask();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        System.out.printf("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                \"Got it. I\u0027ve added this task:%n  %s%nNow you have %d tasks in the list.%n\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                t, taskList.size());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 20
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.CommandConstructor;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class ByeCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @CommandConstructor(\"bye\")"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public void execute(List\u003cTask\u003e taskList) {}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return obj \u003d\u003d this || obj instanceof ByeCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 21
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.Argument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.CommandConstructor;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.DeadlineTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class DeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final LocalDateTime deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @CommandConstructor(\"deadline\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public DeadlineCommand(@Argument(isTrailing \u003d true) String description,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                           @Argument(isTrailing \u003d true, prefix \u003d \"/by\") LocalDateTime deadline) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    protected Task createTask() throws CommandException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (description \u003d\u003d null || description.isBlank()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            throw new CommandException(\"Task description cannot be empty.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return new DeadlineTask(description, deadline);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        DeadlineCommand that \u003d (DeadlineCommand) o;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return Objects.equals(description, that.description)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                \u0026\u0026 Objects.equals(deadline, that.deadline);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return Objects.hash(description, deadline);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 51
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.CommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.CommandConstructor;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final int id;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @CommandConstructor(\"delete\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public DeleteCommand(int id) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public void execute(List\u003cTask\u003e taskList) throws CommandException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (id \u003c 1 || id \u003e taskList.size()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            throw new CommandException(\"Invalid task ID\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        Task t \u003d taskList.remove(id - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        System.out.printf("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                \"Noted. I\u0027ve removed this task:%n  %s%nNow you have %d tasks in the list.%n\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                t, taskList.size());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        DeleteCommand that \u003d (DeleteCommand) o;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return id \u003d\u003d that.id;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return Objects.hash(id);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 49
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.CommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.CommandConstructor;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final int id;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @CommandConstructor(\"done\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public DoneCommand(int id) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public void execute(List\u003cTask\u003e taskList) throws CommandException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (id \u003c 1 || id \u003e taskList.size()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            throw new CommandException(\"Invalid task ID\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        Task t \u003d taskList.get(id - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        t.setDone(true);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        System.out.printf(\"Nice! I\u0027ve marked this task as done:%n%s%n\", t);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        DoneCommand that \u003d (DoneCommand) o;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return id \u003d\u003d that.id;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return Objects.hash(id);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 48
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.Argument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.CommandConstructor;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.EventTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class EventCommand extends AddCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final LocalDateTime time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @CommandConstructor(\"event\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public EventCommand(@Argument(isTrailing \u003d true) String description,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        @Argument(isTrailing \u003d true, prefix \u003d \"/at\") LocalDateTime time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    protected Task createTask() throws CommandException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (description \u003d\u003d null || description.isBlank()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            throw new CommandException(\"Task description cannot be empty.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return new EventTask(description, time);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        EventCommand that \u003d (EventCommand) o;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return Objects.equals(description, that.description)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                \u0026\u0026 Objects.equals(time, that.time);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return Objects.hash(description, time);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 51
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.CommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.Argument;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.CommandConstructor;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class FindCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final String substring;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @CommandConstructor(\"find\")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public FindCommand(@Argument(isTrailing \u003d true) String substring) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.substring \u003d substring \u003d\u003d null ? \"\" : substring;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public void execute(List\u003cTask\u003e taskList) throws CommandException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        System.out.println(\"Here are the matching tasks:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        String substring \u003d this.substring.toLowerCase();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); ++i) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            Task t \u003d taskList.get(i);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            if (t.getDescription().toLowerCase().contains(substring)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                System.out.printf(\"%d. %s%n\", i + 1, t);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        FindCommand that \u003d (FindCommand) o;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return Objects.equals(substring, that.substring);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return Objects.hash(substring);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 51
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.CommandConstructor;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @CommandConstructor(\"list\")"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public void execute(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); ++i) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            System.out.printf(\"%d. %s%n\", i + 1, taskList.get(i));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return obj \u003d\u003d this || obj instanceof ListCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/commands/LoanCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.Argument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.CommandConstructor;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.DeadlineTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.LoanTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class LoanCommand extends AddCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final LocalDateTime deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final int amount;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final boolean isLoanOut;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @CommandConstructor(\"loanout\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @CommandConstructor(\"loanin\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public LoanCommand(@Argument(isCommandName \u003d true) String commandName,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                       int amount,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                       @Argument(isTrailing \u003d true) String description,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                       @Argument(isTrailing \u003d true, prefix \u003d \"/by\") LocalDateTime deadline) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        switch (commandName) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        case \"loanout\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            this.isLoanOut \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        case \"loanin\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            this.isLoanOut \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            throw new RuntimeException(\"Unexpected command name passed to LoanCommand\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    protected Task createTask() throws CommandException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (description \u003d\u003d null || description.isBlank()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            throw new CommandException(\"Task description cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return new LoanTask(isLoanOut, amount, description, deadline);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        LoanCommand that \u003d (LoanCommand) o;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return amount \u003d\u003d that.amount \u0026\u0026 isLoanOut \u003d\u003d that.isLoanOut"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                \u0026\u0026 Objects.equals(description, that.description)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                \u0026\u0026 Objects.equals(deadline, that.deadline);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return Objects.hash(description, deadline, amount, isLoanOut);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 69
    }
  },
  {
    "path": "src/main/java/seedu/duke/cli/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.CommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.Argument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.annotations.CommandConstructor;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.tasks.TodoTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class TodoCommand extends AddCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @CommandConstructor(\"todo\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public TodoCommand(@Argument(isTrailing \u003d true) String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    protected Task createTask() throws CommandException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (description \u003d\u003d null || description.isBlank()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            throw new CommandException(\"Task description cannot be empty.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return new TodoTask(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        TodoCommand that \u003d (TodoCommand) o;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return Objects.equals(description, that.description);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return Objects.hash(description);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 46
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private static final long serialVersionUID \u003d -2528903469387431L;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final LocalDateTime deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * Create a deadline with a deadline."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * @param description the deadline description"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * @param deadline the deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public DeadlineTask(String description, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * Get the deadline\u0027s deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * @return the deadline"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public LocalDateTime getDeadline() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                \"[D]%s%s\", super.toString(),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                deadline !\u003d null"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        ? String.format(\" (by: %s)\", deadline.format(DATE_TIME_FORMATTER))"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        : \"\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        );"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 39
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private static final long serialVersionUID \u003d -25289058397902347L;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final LocalDateTime time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * Create an event task, with a specified time."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * @param description the event description"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * @param time the time of the event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public EventTask(String description, LocalDateTime time) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * Get the time of the event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * @return the event time"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public LocalDateTime getTime() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                \"[E]%s%s\", super.toString(),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                time !\u003d null"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        ? String.format(\" (at: %s)\", time.format(DATE_TIME_FORMATTER))"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        : \"\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        );"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 39
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/LoanTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class LoanTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private static final long serialVersionUID \u003d -2528905898387202347L;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final boolean isLoanOut;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final int amount;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final LocalDateTime deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * Create a loan task, describing a monetary loan in or out by the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * @param description the task description"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public LoanTask(boolean isLoanOut, int amount, String description, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.isLoanOut \u003d isLoanOut;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                \"[L][%s] ($%d) %s%s\", isLoanOut ? \"O\" : \"I\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                amount,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                super.toString(),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                deadline !\u003d null"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                ? String.format(\" (by: %s)\", deadline.format(DATE_TIME_FORMATTER))"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                : \"\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        );"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 34
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public abstract class Task implements Serializable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    protected static final DateTimeFormatter DATE_TIME_FORMATTER"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            \u003d DateTimeFormatter.ofPattern(\"EEE, dd LLL uuuu HH:mm\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private static final long serialVersionUID \u003d -2528903467902347L;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * Create a generic task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * @param description the task description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * Get the task description."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * @return the task description"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * Get whether the task is done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * @return whether the task is done"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * Set the task\u0027s done state."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * @param done whether the task is done"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return String.format(\"[%s] %s\", done ? \"\\u2713\" : \" \", description);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 54
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": " * A list of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/tasks/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    private static final long serialVersionUID \u003d 208976467902347L;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * Create a generic todo task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     * @param description the task description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public TodoTask(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 19
    }
  },
  {
    "path": "src/main/resources/main.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003c?import javafx.scene.control.TextArea?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003cVBox maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"300.0\" minWidth\u003d\"200.0\" prefHeight\u003d\"800.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "      \u003cTextArea id\u003d\"outputArea\" editable\u003d\"false\" prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": "      \u003cHBox prefWidth\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            \u003cTextField id\u003d\"commandText\" HBox.hgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "            \u003cButton id\u003d\"enterButton\" defaultButton\u003d\"true\" mnemonicParsing\u003d\"false\" text\u003d\"↵\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "\u003c/VBox\u003e"
      }
    ],
    "authorContributionMap": {
      "thwnus": 20
    }
  },
  {
    "path": "src/test/java/seedu/duke/cli/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thwnus"
        },
        "content": "package seedu.duke.cli;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.ByeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.EventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.LoanCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import seedu.duke.cli.commands.TodoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thwnus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thwnus"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public void listTest() throws CommandException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        assertEquals(Parser.parse(\"list\"), new ListCommand());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public void byeTest() throws CommandException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        assertEquals(Parser.parse(\"bye\"), new ByeCommand());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public void doneTest() throws CommandException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        assertEquals(Parser.parse(\"done 123\"), new DoneCommand(123));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public void deleteTest() throws CommandException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        assertEquals(Parser.parse(\"delete 123\"), new DeleteCommand(123));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public void todoTest() throws CommandException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        assertEquals(Parser.parse(\"todo abcdefg\"), new TodoCommand(\"abcdefg\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public void deadlineNoDateTest() throws CommandException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        assertEquals(Parser.parse(\"deadline abcdefg\"), new DeadlineCommand(\"abcdefg\", null));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public void deadlineWithDateTest() throws CommandException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        assertEquals(Parser.parse(\"deadline abcdefg /by 1/1/2019 00:00\"),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                new DeadlineCommand(\"abcdefg\", LocalDateTime.of(2019, 1, 1, 0, 0)));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public void eventNoDateTest() throws CommandException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        assertEquals(Parser.parse(\"event abcdefg\"), new EventCommand(\"abcdefg\", null));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public void eventWithDateTest() throws CommandException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        assertEquals(Parser.parse(\"event abcdefg /at 1/1/2019 00:00\"),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                new EventCommand(\"abcdefg\", LocalDateTime.of(2019, 1, 1, 0, 0)));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public void findTest() throws CommandException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        assertEquals(Parser.parse(\"find asdasd\"), new FindCommand(\"asdasd\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thwnus"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    public void loanTest() throws CommandException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        assertEquals(Parser.parse(\"loanout 123 hello /by 1/1/2019 00:00\"),"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                new LoanCommand(\"loanout\", 123, \"hello\","
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        LocalDateTime.of(2019, 1, 1, 0, 0)));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thwnus"
        },
        "content": "        assertEquals(Parser.parse(\"loanin 123 hello /by 1/1/2019 00:00\"),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                new LoanCommand(\"loanin\", 123, \"hello\","
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thwnus"
        },
        "content": "                        LocalDateTime.of(2019, 1, 1, 0, 0)));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thwnus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thwnus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thwnus": 80
    }
  }
]
