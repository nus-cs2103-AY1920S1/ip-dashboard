[
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "[T][✘] hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": "[T][✘] hi"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "[T][✘] yes"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "[T][✘] no"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "[T][✘] hi"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "[T][✘] hello"
      }
    ],
    "authorContributionMap": {
      "dalisc": 6
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * The Deadline class extends Task. It is a type of task that also has a deadline."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * The deadline for the task to be completed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public Deadline(String description, String dateTime) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            this.by \u003d dateFormat.parse(dateTime).toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            this.by \u003d dateTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            System.out.println(\"    Next time, please specify the deadline in this format: dd/mm/yyy hh:mm\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            System.out.println(\"    example: 01/12/2019 14:30\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 30
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * Duke is the main class that launches the chat bot when it is run."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * This is the path of the file where the tasks are saved to and loaded from."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * This is the storage class which does the saving and loading of the files."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * This is the task list class that contains the list of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * The ui class handles the output to the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Creates a new chat bot with a specified file path."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * If the specified file contains pre-saved tasks, it will be loaded."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @param filePath The path of the file that is used to save and load the tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.ui.showLogo();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        boolean chat \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        while (chat) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            Parser parser \u003d new Parser(sc.nextLine());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            this.ui.printLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            switch (parser.command) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                this.ui.showByeResponse();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                this.storage.save(tasks.list, filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                chat \u003d false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                if (this.tasks.list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    this.ui.showNoTaskResponse();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    this.ui.showListResponse();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    this.ui.printTasks(tasks);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                parser.parseFind();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                String search \u003d parser.search;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                this.ui.printQuerySet(tasks.list, search);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    if (parser.input.equals(\"done\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! Please specify the task number that you want to mark as done.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    } else if (parser.inputArr.length \u003e 2) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The command format is invalid.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    int num \u003d Integer.parseInt(parser.inputArr[1]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    Task task \u003d this.tasks.list.get(num - 1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    this.ui.showDoneResponse();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    this.ui.printLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    System.out.println(\"    ☹ OOPS!!! This task number does not exist.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    System.out.println(\"    ☹ OOPS!!! Please specify the task number that you want to mark as done.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    System.out.println(\"    \" + e);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    if (parser.input.equals(\"done\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! Please specify the task number that you want to delete.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    } else if (parser.inputArr.length \u003e 2) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The command format is invalid.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    int num \u003d Integer.parseInt(parser.inputArr[1]);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    Task deletedTask \u003d this.tasks.list.remove(num - 1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    this.ui.showDeleteResponse(deletedTask);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    this.ui.showTotalNumberTasks(this.tasks.list);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    System.out.println(\"    ☹ OOPS!!! This task number does not exist.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    System.out.println(\"    ☹ OOPS!!! Please specify the task number that you want to mark as done.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    System.out.println(\"    \" + e);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    parser.parseToDo();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    if (parser.input.equals(\"todo\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                        Task toDoTask \u003d new ToDo(parser.todoDescript);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                        this.tasks.list.add(toDoTask);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                        this.ui.printAddedTask(toDoTask, this.tasks.list);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                } catch (DukeException de) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    System.out.println(\"    \" + de);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    System.out.println(\"    \" + e);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    parser.parseEvent();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    if (parser.input.equals(\"event\")) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    } else if (parser.eventCommand.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! Please specify where the event is.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    Task eventTask \u003d new Event(parser.eventDescript, parser.at);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    this.tasks.list.add(eventTask);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    this.ui.printAddedTask(eventTask, this.tasks.list);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                } catch (DukeException de) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    System.out.println(\"    \" + de);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    System.out.println(\"     ☹ OOPS!!! That is an invalid command.\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    parser.parseDeadline();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    if (parser.input.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    } else if (parser.deadlineCommand.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! Please specify when the deadline is.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    Task deadlineTask \u003d new Deadline(parser.deadlineDescript, parser.by);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    this.tasks.list.add(deadlineTask);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    this.ui.printAddedTask(deadlineTask, this.tasks.list);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                } catch (DukeException de) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    System.out.println(\"    \" + de);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    System.out.println(\"    ☹ OOPS!!! That is gan invalid command.\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    System.out.println(\"    \" + e);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            this.ui.printLine();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "dalisc": 173,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * An unchecked exception class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * The Event class extends Task. It is a type of task with a specified location."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * The location of the task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 20
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * Parser deciphers the user input and breaks it down into meaningful parts that make a task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * The string input of the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * The string command by the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * The string array of the input broken down into its constituents."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected String[] inputArr;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * The task description of a todo task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected String todoDescript;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * The string array of an input that is an event creation."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected String[] eventCommand;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * The task description of an event task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected String eventDescript;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * The location of the event."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * The string array of an input that is a deadline creation."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected String[] deadlineCommand;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * The task description of a deadline task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected String deadlineDescript;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * The date of the deadline."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected String search;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public Parser(String input) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        input \u003d input.trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        String[] inputArr \u003d input.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        String command \u003d inputArr[0];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.inputArr \u003d inputArr;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Breaks down the input into its significant parts, after the input has been identified as an event creation."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void parseEvent() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.eventCommand \u003d this.input.split(\"/at\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.eventDescript \u003d this.eventCommand[0].trim().substring(6);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.at \u003d this.eventCommand[1].substring(1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Breaks down the input into its significant parts, after the input has been identified as a deadline creation."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void parseDeadline() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.deadlineCommand \u003d this.input.split(\"/by\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.deadlineDescript \u003d deadlineCommand[0].trim().substring(9);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.by \u003d deadlineCommand[1].substring(1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Breaks down the input into its significant parts, after the input has been identified as a todo creation."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void parseToDo() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.todoDescript \u003d this.input.substring(5);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void parseFind() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.search \u003d this.input.substring(5);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 89
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * The Storage class deals with the saving and loading of data into Duke."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * The data are the tasks that the user specified."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * The path of the file where data are stored."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Saves the data into the specified filepath."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @param list The list of tasks to be saved."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @param filePath"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e list, String filePath) throws IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.filePath));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            Task task \u003d list.get(i);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            if (i \u003e 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                writer.newLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            writer.write(task.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Loads data from the specified filepath."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @return The list of tasks that were loaded."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(this.filePath));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            String read;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            while ((read \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                String type \u003d read.substring(1, 2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                String status \u003d read.substring(4, 5);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                String info \u003d read.substring(7);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    task \u003d new ToDo(info.trim());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    if (status.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    String[] infoArr \u003d info.split(\"(:at)\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    String description \u003d infoArr[0].trim();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    String at \u003d infoArr[1].substring(1, infoArr[1].length());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    task \u003d new Event(description, at);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    if (status.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    String[] infoArr \u003d info.split(\"(:by)\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    String description \u003d infoArr[0].trim();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    String by \u003d infoArr[1].substring(1, infoArr[1].length());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    task \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    if (status.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            System.out.print(e);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "dalisc": 88
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * Task is a class to represent a task. It contains a description of the task and its status (whether the task has been completed)."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * The description of the task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * A boolean describing whether the task has been completed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * A method that returns the tick or cross symbol, depending whether the task has been completed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @return A tick or cross symbol, depending on whether the task has been completed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 39
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * The TaskList contains the list of current tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Contructs a TaskList instance with a pre-existing list of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @param list The list of tasks that already existed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Constructs a TaskList instance with no tasks added to the list yet."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * A getter for the list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @return The list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 30
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * The ToDo class extends the Task class. It is the most basic type of task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 14
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": " * The Ui class handles the chat bot\u0027s responses to the user, namely what it should print back to the user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * The Duke logo."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * A line that separates user input from chat bot output."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    String line \u003d \"________________________________________\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * An indentation of 4 spaces. All chat bot output are indented by 4 spaces."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    String indent \u003d \"    \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Prints the welcome message and logo."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void showLogo() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(indent + line);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(indent + \"Hello! I\u0027m Duke.\\n\" + indent + \"What can I do for you today?\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(indent + line);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(indent + line);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(indent + \"Duke has failed to load properly.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(indent + line);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Prints the goodbye message."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void showByeResponse() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(indent + \"Bye! Hope to see you again soon.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * If tasks are present, this is the message to introduce the tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void showListResponse() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(indent + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * If no tasks are present, this is the message to state that there are no tasks."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void showNoTaskResponse() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(indent + \"You have no tasks.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Prints an indented line."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(indent + line);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Prints the message that responses to a task being marked as done."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void showDoneResponse() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(indent + \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Prints the message that responses to the user removing a task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @param deletedTask An integer representing the index of the task that the user wants to remove."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void showDeleteResponse(Task deletedTask) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(indent + \"Noted. I\u0027ve removed the following task:\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(indent + indent + deletedTask);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Prints the total number of tasks that are in the list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @param list A list of tasks present."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void showTotalNumberTasks(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(indent + \"Now you have \" + list.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Prints the message that responses to the user adding a task to the list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @param list"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void printAddedTask(Task task, ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(indent + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(indent + indent + task);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(indent + \"Now you have \" + list.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Prints tasks that match the search keyword."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @param list The list of tasks."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @param search The search keyword or phrase."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void printQuerySet(ArrayList\u003cTask\u003e list, String search) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        System.out.println(indent + \"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            Task task \u003d list.get(i);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            int k \u003d i + 1;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            if (task.description.contains(search)) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dalisc"
        },
        "content": "                System.out.println(indent + k + \". \" + task);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * Prints all tasks and index them."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     * @param tasks A TaskList object that contains the list of class."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dalisc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void printTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getList().size(); i++) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            int k \u003d i + 1;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dalisc"
        },
        "content": "            System.out.println(indent + k + \". \" + tasks.list.get(i).toString());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 133
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void testParseEvent() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        String input \u003d \"event Welcome Tea /at Tembusu College\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        Parser parser \u003d new Parser(input);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        parser.parseEvent();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        assertEquals(\"Welcome Tea\", parser.eventDescript);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        assertEquals(\"Tembusu College\", parser.at);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void testParseDeadline() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        String input \u003d \"deadline Homework /by 30/08/2019 23:59\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        Parser parser \u003d new Parser(input);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        parser.parseDeadline();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        assertEquals(\"Homework\", parser.deadlineDescript);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        assertEquals(\"30/08/2019 23:59\", parser.by);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 26
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    public void testGetStatusIcon() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        Task task \u003d new Task(\"test\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        assertEquals(\"\\u2718\", task.getStatusIcon());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "        assertEquals(\"\\u2713\", task.getStatusIcon());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalisc": 13
    }
  },
  {
    "path": "text-ui-testing/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "hello"
      }
    ],
    "authorContributionMap": {
      "dalisc": 1
    }
  },
  {
    "path": "text-ui-testing/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "todo hello"
      }
    ],
    "authorContributionMap": {
      "dalisc": 1
    }
  },
  {
    "path": "text-ui-testing/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalisc"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalisc"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalisc"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalisc"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalisc"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalisc"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalisc"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalisc"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalisc"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalisc"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalisc"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalisc"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalisc"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalisc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalisc"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalisc"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "dalisc": 21
    }
  }
]
