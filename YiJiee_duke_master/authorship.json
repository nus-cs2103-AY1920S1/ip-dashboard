[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "test {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "run {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 33,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import gui.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 8
    }
  },
  {
    "path": "src/main/java/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import main.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class AddCommand implements Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    ArrayList\u003cString\u003e arguments;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    String taskType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Constructor to construct a AddCommand."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param taskType String taskType to be added into the app (Example: ToDo, Event, Deadline)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param arguments ArrayList\u003cString\u003e contains the arguments for a particular taskType."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public AddCommand(String taskType, ArrayList\u003cString\u003e arguments) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.arguments \u003d arguments;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private Task getTask() throws InsufficientTaskArgumentException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        if (taskType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            if (arguments.size() \u003c 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                throw new InsufficientTaskArgumentException(\"Sorry! ToDo requires at least one argument: Description\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            task \u003d new ToDo(arguments.get(0));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (taskType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            if (arguments.size() \u003c 2) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                throw new InsufficientTaskArgumentException(\"Sorry! Deadline requires at least two arguments: Description \u0026 Date\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            task \u003d new Deadline(arguments.get(0), arguments.get(1));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (taskType.equals(\"event\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            if (arguments.size() \u003c 3) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                throw new InsufficientTaskArgumentException(\"Sorry! Event requires at least three arguments: Description \u0026 Date \u0026 Time\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            task \u003d new Event(arguments.get(0), arguments.get(1), arguments.get(2));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * execute performs the command in the gui.Duke app."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param tasks TaskList that contains the list of tasks that is tracked."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param ui Ui of the app."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param storage Storage is the class that manages file reading and file writing of the data passed into the app."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @throws InsufficientTaskArgumentException exception thrown when command does not have enough arguments."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public TaskList execute(TaskList tasks, Ui ui, Storage storage, HistoryManager historyManager) throws InsufficientTaskArgumentException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        Task task \u003d getTask();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        String result \u003d \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"     Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"       \"+ task.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"     Now you have \" + tasks.size() + \" tasks in the list.\\n\" +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        ui.nextLine(result);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        storage.updateTasks(tasks);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        historyManager.updateRecords();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * isExit checks if the command is an exit command."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return boolean whether if the command is an exit command."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * toString() returns the command and its arguments."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        String args \u003d \"\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        for (int i \u003d 0; i \u003c arguments.size(); i++) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            args \u003d args + arguments.get(i) + \" \";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        args \u003d args.trim();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return \"Command: \" + taskType + \", Arguments: \" + args;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 84
    }
  },
  {
    "path": "src/main/java/command/AdminCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import main.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class AdminCommand implements Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    String commandType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    int commandArg;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Constructor for AdminCommand (\"done\" and \"list\" commands)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param commandType String type of command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param commandArg int argument of command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public AdminCommand(String commandType, int commandArg) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.commandType \u003d commandType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.commandArg \u003d commandArg;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public AdminCommand(String commandType) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.commandType \u003d commandType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.commandArg \u003d -1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * isExit checks if the command is an exit command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return boolean whether if the command is an exit command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private void handleListCall(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i \u003d i + 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            result \u003d result + \"    \" + (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        result \u003d result.equals(\"\") ? \"\\n\" : result;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        String finalResult \u003d \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    Here are the tasks in your list:\\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                result +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        ui.nextLine(finalResult);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private void handleDoneCall(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        Task targetedTask \u003d tasks.get(commandArg - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        Task.markAsDone(targetedTask);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        String result \u003d \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"     Nice! I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"       \" + targetedTask.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        ui.nextLine(result);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        storage.updateTasks(tasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * execute performs the command in the gui.Duke app."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param tasks TaskList that contains the list of tasks that is tracked."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param ui Ui of the app."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param storage Storage is the class that manages file reading and file writing of the data passed into the app."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @throws InsufficientTaskArgumentException exception thrown when command does not have enough arguments."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public TaskList execute(TaskList tasks, Ui ui, Storage storage, HistoryManager historyManager) throws InsufficientTaskArgumentException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        if (commandType.equals(\"list\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            handleListCall(tasks, ui);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (commandType.equals(\"done\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            if (commandArg \u003c\u003d  0) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                throw new InsufficientTaskArgumentException(\"Done requires a positive integer argument!\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            if (commandArg \u003e tasks.length()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                throw new InsufficientTaskArgumentException(\"Error! Task not found\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            handleDoneCall(tasks, ui, storage);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            historyManager.updateRecords();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * toString() returns the command and its arguments if there is any."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        if (commandArg \u003d\u003d -1) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return \"Command: \" + commandType;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return \"Command: \" + commandType + \", Arguments: \" + commandArg;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 91
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import main.HistoryManager;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import task.InsufficientTaskArgumentException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * execute performs the command in the gui.Duke app."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param tasks TaskList that contains the list of tasks that is tracked."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param ui Ui of the app."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param storage Storage is the class that manages file reading and file writing of the data passed into the app."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @throws InsufficientTaskArgumentException exception thrown when command does not have enough arguments."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public TaskList execute(TaskList tasks, Ui ui, Storage storage, HistoryManager historyManager) throws InsufficientTaskArgumentException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * isExit checks if the command is an exit command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return boolean whether if the command is an exit command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public boolean isExit();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * toString() returns the command and its arguments if there is any."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public String toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 29
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import main.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    int taskNumber;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Constructor for \"delete\" commands."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param taskNumber int. taskNumber is the task number to be deleted in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * isExit checks if the command is an exit command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return boolean whether if the command is an exit command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private void handleDeleteCall(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        Task removed \u003d tasks.removeTask(taskNumber - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        storage.updateTasks(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        ui.nextLine(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"     Noted. I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"       \" + removed.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"     Now you have \" + tasks.size() + \" tasks in the list.\\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * execute performs the command in the gui.Duke app."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param tasks TaskList that contains the list of tasks that is tracked."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param ui Ui of the app."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param storage Storage is the class that manages file reading and file writing of the data passed into the app."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @throws InsufficientTaskArgumentException exception thrown when command does not have enough arguments."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public TaskList execute(TaskList tasks, Ui ui, Storage storage, HistoryManager historyManager) throws InsufficientTaskArgumentException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        if (tasks.size() \u003c taskNumber) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            throw new InsufficientTaskArgumentException(\"Error! Task cannot be found~!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        handleDeleteCall(tasks, ui, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        historyManager.updateRecords();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * toString() returns the command and its arguments if there is any."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return \"Command: delete, Argument: \" + taskNumber;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 61
    }
  },
  {
    "path": "src/main/java/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import main.HistoryManager;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import task.InsufficientTaskArgumentException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class ExitCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Constructor for \"exit\" commands."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * isExit checks if the command is an exit command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return boolean whether if the command is an exit command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * execute performs the command in the gui.Duke app."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param tasks TaskList that contains the list of tasks that is tracked."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param ui Ui of the app."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param storage Storage is the class that manages file reading and file writing of the data passed into the app."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @throws InsufficientTaskArgumentException exception thrown when command does not have enough arguments."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public TaskList execute(TaskList tasks, Ui ui, Storage storage, HistoryManager historyManager) throws InsufficientTaskArgumentException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        ui.nextLine(\"See you later! 8)\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * toString() returns the command and its arguments if there is any."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return \"Command: exit\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 46
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import main.HistoryManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import task.InsufficientTaskArgumentException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class FindCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private String stringArgument;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Constructor for FindCommand"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param stringArgument String. The keyword to search for in a tasklist."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public FindCommand(String stringArgument) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.stringArgument \u003d stringArgument;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private String concatenateStrings(ArrayList\u003cString\u003e strings) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        for (String s : strings) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            result \u003d result + \"s\" + \"\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        result \u003d result.equals(\"\") ? \"\\n\" : result;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * execute performs the command in the gui.Duke app."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param tasks TaskList that contains the list of tasks that is tracked."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param ui Ui of the app."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param storage Storage is the class that manages file reading and file writing of the data passed into the app."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @throws InsufficientTaskArgumentException exception thrown when command does not have enough arguments."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public TaskList execute(TaskList tasks, Ui ui, Storage storage, HistoryManager historyManager) throws InsufficientTaskArgumentException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        ArrayList\u003cString\u003e tasksThatMatch \u003d tasks.findAllMatches(this.stringArgument);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        String matched \u003d concatenateStrings(tasksThatMatch);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        String result \u003d \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    Here are the matching tasks in your list:\\n\" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                matched +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        ui.nextLine(result);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * isExit checks if the command is an exit command."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return boolean whether if the command is an exithi command."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * toString() returns the command and its arguments if there is any."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return \"Command: find, Argument:\" + this.stringArgument;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 68
    }
  },
  {
    "path": "src/main/java/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import main.HistoryManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import task.InsufficientTaskArgumentException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class HelpCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public TaskList execute(TaskList tasks, Ui ui, Storage storage, HistoryManager historyManager) throws InsufficientTaskArgumentException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        String helpText \u003d \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    | command    | arguments   | description                          |\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    | todo            | name            | adds todo to your task list. |\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    | deadline      | name \\\"/by\\\"  | adds a deadline to your task|\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    |                     | date             | list. date format: dd/mm/yyyy|\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    | event           | name \\\"/at\\\"   | adds an event to your task  |\\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    |                     | date time     | list. date format: dd/mm/yyyy|\\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    |                     |                     | time format: 24h-clock        |\\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    | find             | name            | searches your task list and  |\\n\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    |                    |                      | returns the tasks that          |\\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    |                    |                      | matches the param name.  |\\n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    | delete         | tasknumber  | deletes the task with the     |\\n\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    |                    |                      | tasknumber.                        |\\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    | list              | none             | displays all tasks in your      |\\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    |                    |                      | task list.                                |\\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    | help            | none         | shows summary of commands|\\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    |                    |                  | and their descriptions.             |\\n\" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    | done            | tasknumber | marks task with the task      |\\n\" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    |                     |                     | number as done.                  |\\n\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    | bye              | none             | closes the application.         |\\n\" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    | undo            | none            | undo the previous command|\\n\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    |                     |                     | that changed the tasklist.    |\\n\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        ui.nextLine(helpText);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 58
    }
  },
  {
    "path": "src/main/java/command/UndoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import main.HistoryManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import task.InsufficientTaskArgumentException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class UndoCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public UndoCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public TaskList execute(TaskList tasks, Ui ui, Storage storage, HistoryManager historyManager) throws InsufficientTaskArgumentException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        TaskList prevTaskList \u003d historyManager.undo();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        storage.updateTasks(prevTaskList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        ui.nextLine(\"Got it! I\u0027ve undo the previous command.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return prevTaskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 27
    }
  },
  {
    "path": "src/main/java/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import javafx.beans.Observable;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        text.getStyleClass().add(\"duke-text\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        displayPicture.getStyleClass().add(\"display-picture\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        displayPicture.setFitWidth(120.0);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        displayPicture.setFitHeight(120.0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public void flip() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        text.getStyleClass().add(\"user-text\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        DialogBox dukeDialog \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return dukeDialog;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        DialogBox userDialog \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        userDialog.flip();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return userDialog;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 49
    }
  },
  {
    "path": "src/main/java/gui/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import main.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import command.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class Duke extends Application{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private boolean isOpen \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/Vanillite.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/Rowlet.jpg\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private Storage storage \u003d new Storage(\"./src/main/java/DukeData.txt\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private HistoryManager historyManager \u003d new HistoryManager(storage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private final double APP_HEIGHT \u003d 595.0;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private final double APP_WIDTH \u003d 500.0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private void handleUserInput(Stage stage) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText(), stage));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        ImageView userImage \u003d new ImageView(user);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        userImage.setClip(new Circle(60,60,60));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        ImageView dukeImage \u003d new ImageView(duke);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        dukeImage.setClip(new Circle(60,60,60));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                DialogBox.getUserDialog(userText, userImage),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, dukeImage)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        );"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private String getResponse(String input, Stage stage) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            taskList \u003d c.execute(taskList, ui, storage, historyManager);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            this.isOpen \u003d !c.isExit();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            this.duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/Rowlet.jpg\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return ui.showLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } catch (InsufficientTaskArgumentException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            this.duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/RowletException.jpg\"));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            this.duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/RowletException.jpg\"));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            if (!this.isOpen) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                stage.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private void setStageStyle(Stage stage) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        stage.setTitle(\"gui.Duke\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        stage.setMinHeight(APP_HEIGHT);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        stage.setMinWidth(APP_WIDTH);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private void setScrollPaneStyle() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        scrollPane.setPrefSize(495, 538);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        scrollPane.setStyle(\"-fx-background: grey;\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private void setDialogContainerStyle() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        ImageView dukeImg \u003d new ImageView(duke);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        dukeImg.setClip(new Circle(60,60,60));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(new Label(ui.showWelcome()), dukeImg));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        dialogContainer.setStyle(\"-fx-background-color: grey;\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private void setButtonStyle(Stage stage) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        sendButton.setPrefWidth(70.0);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        sendButton.setPrefHeight(50.0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        // Giving onClick listener to send button."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            handleUserInput(stage);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        });"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private void setUserInputStyle(Stage stage) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        userInput.setPrefWidth(415.0);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        userInput.setPrefHeight(50.0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        // Giving \"Enter\" functionality to input."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            handleUserInput(stage);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        });"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public void start(Stage stage) throws Exception {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        scene.getStylesheets().add(getClass().getResource(\"/data/DukeCSS.css\").toExternalForm());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        setStageStyle(stage);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        mainLayout.setPrefSize(APP_WIDTH, APP_HEIGHT);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        setScrollPaneStyle();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        setDialogContainerStyle();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        setUserInputStyle(stage);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        setButtonStyle(stage);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 162
    }
  },
  {
    "path": "src/main/java/main/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * DukeException for invalid commands."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param msg String to be passed when exception is thrown."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 11
    }
  },
  {
    "path": "src/main/java/main/HistoryManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class HistoryManager {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    Stack\u003cTaskList\u003e records;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public HistoryManager(Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.records \u003d new Stack\u003cTaskList\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public void updateRecords() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        TaskList tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        records.push(tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public TaskList undo() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        if (records.isEmpty()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        records.pop();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        if (records.isEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        TaskList prev \u003d records.peek();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return prev;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 30
    }
  },
  {
    "path": "src/main/java/main/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Parser.parse parses the full input command and returns the appropriate command for execution."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param fullCommand String. One full command from the user input. (Example: todo Fix broken laptop)."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return Command that will be executed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @throws DukeException if the full command does not match any command type."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        String[] commandComponents \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        Command c \u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        ArrayList\u003cString\u003e commandArgs \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        if (commandComponents[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            String description \u003d fullCommand.substring(4);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            description \u003d description.trim();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            if (!description.equals(\"\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                commandArgs.add(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            c \u003d new AddCommand(commandComponents[0], commandArgs);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (commandComponents[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            String descriptions \u003d fullCommand.substring(8);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            descriptions \u003d descriptions.trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            String[] descComponents \u003d descriptions.split(\"/by\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            for (int i \u003d 0; i \u003c descComponents.length; i \u003d i + 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                if (!descComponents[i].equals(\"\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                    commandArgs.add(descComponents[i].trim());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            c \u003d new AddCommand(commandComponents[0], commandArgs);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (commandComponents[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            String descriptions \u003d fullCommand.substring(5);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            descriptions \u003d descriptions.trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            String[] descComponents1 \u003d descriptions.split(\"/at\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            String[] descComponents \u003d descComponents1[1].trim().split(\" \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            commandArgs.add(descComponents1[0].trim());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            for (int i \u003d 0; i \u003c descComponents.length; i \u003d i + 1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                if (!descComponents[i].equals(\"\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                    commandArgs.add(descComponents[i].trim());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            c \u003d new AddCommand(commandComponents[0], commandArgs);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (commandComponents[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            c \u003d new AdminCommand(commandComponents[0]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (commandComponents[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            c \u003d new AdminCommand(commandComponents[0], Integer.parseInt(commandComponents[1]));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (commandComponents[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            c \u003d new DeleteCommand(Integer.parseInt(commandComponents[1]));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (commandComponents[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            c \u003d new ExitCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (commandComponents[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            c \u003d new FindCommand(commandComponents[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (commandComponents[0].equals(\"undo\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            c \u003d new UndoCommand();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (commandComponents[0].equals(\"help\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            c \u003d new HelpCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            throw new DukeException(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                    \"    Sorry! I don\u0027t know what this command does:\\n\" +  \"    \" + fullCommand + \"\\n\" +"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                    \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 68
    }
  },
  {
    "path": "src/main/java/main/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private File data;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private FileWriter fileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private PrintWriter printWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Constructor for Storage objects"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param filepath String of the location for data storage."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.data \u003d new File(filepath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    private Task getData(String[] data){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        Task t \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        if (data[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            t \u003d new ToDo(data[2]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (data[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            t \u003d new Event(data[2], data[3], data[4]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (data[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            t \u003d new Deadline(data[2], data[3]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        if (data[1].equals(\"+\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            Task.markAsDone(t);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Reads tasks from a previous saved file (if present) and store it in a list of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return ArrayList\u003cTask\u003e a list that contains the tasks from the previous save point"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * (if a previous save point exists). Else an empty list is returned."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            if (data.createNewFile()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                System.out.println(\"    Previous file not found. Creating a new file\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                FileReader fr \u003d new FileReader(data);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                BufferedReader bufferedReader \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                while (bufferedReader.ready()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                    String dataRead \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                    String[] dataReads \u003d dataRead.split(\" \\\\| \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                    Task t \u003d getData(dataReads);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                    tasks.add(t);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                System.out.println(\"    Previous file is found! Command \\\"list\\\" to checkout previous tasks!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            this.fileWriter \u003d new FileWriter(data, false);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            this.printWriter \u003d new PrintWriter(fileWriter);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * updateTasks updates the file that stores the list of tasks data."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param tasks TaskList. Data in tasks replaces the TaskList data from the previous file."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public void updateTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            this.data.delete();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            this.data.createNewFile();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            this.fileWriter \u003d new FileWriter(this.data, false);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            this.printWriter \u003d new PrintWriter(this.fileWriter);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i \u003d i + 1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                this.printWriter.println(tasks.get(i).toDataFormat());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                printWriter.flush();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 84
    }
  },
  {
    "path": "src/main/java/main/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    String currentLine;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Constructor for gui.Duke app user interface."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Stores the next line for the next user interface response."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param nextLine String for the next user interface response."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public void nextLine(String nextLine) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.currentLine \u003d nextLine;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Reads the user input and returns the user input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return String user input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        currentLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return currentLine;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Prints the current user interface response/reply."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public String showLine() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        System.out.println(currentLine);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        String temp \u003d currentLine;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        currentLine \u003d null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Checks if there is any user interface response."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public boolean hasLineToShow() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return (currentLine !\u003d null);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Prints out any error messages."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param msg Error message that is printed."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public void showError(String msg) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\" + \"    \" + msg + \"\\n\" +"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Shows the welcome message of the user interface."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        String welcome \u003d \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"     Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"     What can I do for you today?\\n\" +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        System.out.println(welcome);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return welcome;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Shows the exit message of the user interface."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"     Bye. Hope to see you again soon!\\n\" +"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 81
    }
  },
  {
    "path": "src/main/java/task/Date.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class Date {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    protected int year;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    protected Month month;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    protected int day;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    protected String origin;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Constructor for Date object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param year int. The year."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param mth int, The month."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param day int, The day."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public Date(int year, int mth, int day) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.month \u003d new Month(mth);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.origin \u003d day + \"/\" + mth + \"/\" + year;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Alternative constructor for Date object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param date String input must have the format (dd/mm/yyyy);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public Date(String date) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        String[] dateComponents \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.day \u003d Integer.parseInt(dateComponents[0]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        assert day \u003e 0 \u0026\u0026 day \u003c\u003d 31 : \"Day must be within 0 - 31\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.month \u003d new Month(Integer.parseInt(dateComponents[1]));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.year \u003d Integer.parseInt(dateComponents[2]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.origin \u003d date;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Returns the String that corresponds to the date object. (Example:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * 18/08/2019 -\u003e 18th August 2019)."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        if (day % 10 \u003d\u003d 1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return this.day + \"st \" + this.month.toString() + \" \" + this.year;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (day % 10 \u003d\u003d 2) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return this.day + \"nd \" + this.month.toString() + \" \" + this.year;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (day % 10 \u003d\u003d 3) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return this.day + \"rd \" + this.month.toString() + \" \" + this.year;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return this.day + \"th \" + this.month.toString() + \" \" + this.year;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * String returns the original date format (dd/mm/yyyy)."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public String origin() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return this.origin;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 59
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    Date date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Constructor for Deadline objects."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param description String description of the deadline task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param date String of the deadline date. (Example: \"18/08/2019\")."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        super(description.trim());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.date \u003d new Date(date);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * toString() returns the String that is represented by this task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        String displayDate \u003d \"by: \" + this.date.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return \"[D][\" + super.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                + super.description + \" (\" + displayDate + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * toDataFormat() returns the String that is used to write the Storage file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public String toDataFormat() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return \"D | \" + super.getStatusIcon() + \" | \" + super.description + \" | \" + this.date.origin();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 34
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    Date date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    Time time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Constructor for an Event object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param description String description of the event."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param date String date of the event. (Example: \"18/08/2019\")."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param time String time of the event. (Example: \"1600\")."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public Event(String description, String date, String time) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        super(description.trim());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.date \u003d new Date(date);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.time \u003d new Time(time);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * toString() returns the String that is represented by this task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        String displayDate \u003d \"at: \" + this.date.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return \"[E][\" + super.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                + super.description + \" (\" + displayDate + \" \" + this.time.toString() + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * toDataFormat() returns the String that is used to write the Storage file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public String toDataFormat() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return \"E | \" + super.getStatusIcon() + \" | \" + super.description + \" | \" + this.date.origin() + \" | \" + this.time.origin();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 38
    }
  },
  {
    "path": "src/main/java/task/InsufficientTaskArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import java.lang.Exception;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class InsufficientTaskArgumentException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Constructor for this exception."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param msg String msg is passed when this exception is thrown."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public InsufficientTaskArgumentException(String msg) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 12
    }
  },
  {
    "path": "src/main/java/task/Month.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class Month {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    protected int monthNumber;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Constructor for Month objects."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param monthNumber int month number."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public Month(int monthNumber) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.monthNumber \u003d monthNumber;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        assert monthNumber \u003e 0 : \"Month must be positive.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        assert monthNumber \u003c\u003d 12 : \"Month number cannot be more than 12\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Returns the corresponding month name from the given month number."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return String month name."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        if (this.monthNumber \u003d\u003d 1) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return \"January\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (this.monthNumber \u003d\u003d 2) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return \"February\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (this.monthNumber \u003d\u003d 3) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return \"March\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (this.monthNumber \u003d\u003d 4) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return \"April\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (this.monthNumber \u003d\u003d 5) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return \"May\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (this.monthNumber \u003d\u003d 6) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return \"June\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (this.monthNumber \u003d\u003d 7) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return \"July\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (this.monthNumber \u003d\u003d 8) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return \"August\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (this.monthNumber \u003d\u003d 9) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return \"September\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (this.monthNumber \u003d\u003d 10) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return \"October\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (this.monthNumber \u003d\u003d 11) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return \"November\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else if (this.monthNumber \u003d\u003d 12) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return \"December\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 49
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    protected Boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Constructor for a general Task object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param description String description of the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Gets the status icon of the task. Returns \"+\" if the task is done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Else it returns \"-\"."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return String status icon."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return (isDone ? \"+\" : \"-\"); //return tick or X symbols"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Marks the given task as done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param task Task to be marked as done."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public static void markAsDone(Task task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        task.isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * toString() returns the string representation of this task for user interface to print."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * toDataFormat() returns the string representation of this task for data storage."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public String toDataFormat() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return \"T | \" + this.getStatusIcon() + \" | \" + this.description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public boolean hasDescription(String desc) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return this.description.contains(desc);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 52
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Empty constructor for TaskList objects. (Creates an entirely new TaskList)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Constructor for TaskList objects. (Takes in an ArrayList of tasks)."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param tasks ArrayList. Loads up the tasks present in tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Returns the Task present at index i."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param i int index."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return Task at the i position of the TaskList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return tasks.get(i);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Returns the number of tasks present in the TaskList."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return int."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Returns the number of tasks present in the TaskList."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return int."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public int length() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Removes the Task object at the i index of the TaskList and returns it."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param i int index."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return Task that is removed from the i index."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public Task removeTask(int i) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return tasks.remove(i);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Appends Task t to the back of the Tasklist"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param t Task to be appended."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return Task that was added."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public Task addTask(Task t) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Returns a String that shows the list of tasks in the TaskList."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            if (i \u003d\u003d tasks.size() - 1) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                result \u003d result + \"    \" + (i + 1) + \". \" + tasks.get(i).toString();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                result \u003d result + \"    \" + (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public ArrayList\u003cString\u003e findAllMatches(String desc) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            if (tasks.get(i).hasDescription(desc)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                result.add(\"    \" + (i + 1) + \". \" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 93
    }
  },
  {
    "path": "src/main/java/task/Time.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class Time {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    protected int time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Constructor for Time objects using integer."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param time int the time in 24hr-clock representation."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public Time(int time) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        assert time \u003e\u003d 0 : \"Time cannot be negative\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        assert time \u003c 2400 : \"Time cannot be greater or equal to 2400hrs\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Alternate constructor for Time objects using String."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param time String String representation of time in 24hr-clock representation."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public Time(String time) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        this.time \u003d Integer.parseInt(time);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Returns the String that represents the time."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return String. (Example: 1800 -\u003e 6pm, 0900 -\u003e 9am)."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        int minutes \u003d time % 100;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        if (time \u003e 1200) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return ((time - 1200) / 100) + minutes + \"pm\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            return (time / 100) + minutes + \"am\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Returns the original time that was passed into the constructor. (24hr-clock representation)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return int."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public int origin() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 44
    }
  },
  {
    "path": "src/main/java/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Constructor for ToDo objects."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @param description String description of the ToDo task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * toString() returns the String representation of this ToDo task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        return \"[T][\" + super.getStatusIcon() + \"] \" + super.description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 21
    }
  },
  {
    "path": "src/test/java/duketest/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package duketest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Checks if toString() method of Event object returns the correct String for ui to show."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public void toStringTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        assertEquals(new Event(\"Dance competition\", \"15/08/2019\", \"1600\").toString(),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"[E][-] Dance competition (at: 15th August 2019 4pm)\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Checks if toDataFormat() method of Event object returns the correct String for storage to store."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public void toDataFormatTest() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        assertEquals(new Event(\"Date at art museum\", \"16/08/2019\", \"1500\").toDataFormat(),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"E | - | Date at art museum | 16/08/2019 | 1500\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 24
    }
  },
  {
    "path": "src/test/java/duketest/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "package duketest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import main.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import main.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "import command.*;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Checks if Parser.parse executes the command deadline correctly."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public void parseTest1() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        ArrayList\u003cString\u003e args \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        args.add(\"CS2103 Project\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        args.add(\"12/08/2019\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        String res;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            res \u003d Parser.parse(\"deadline CS2103 Project /by 12/08/2019\").toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            res \u003d e.getMessage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        assertEquals(res,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                new AddCommand(\"deadline\", args).toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     * Checks if Parser.parse executes an unknown command correctly."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    public void parseTest2() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            res \u003d Parser.parse(\"unknownCommand\").toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "            res \u003d e.getMessage();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "        assertEquals(res,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "                \"Sorry! I don\u0027t know what this command does: unknownCommand\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 47
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    Previous file not found. Creating a new file"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "       [T][-] read book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "deadline CS2103 Project /by 12/08/2019"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "       [D][-] CS2103 Project (by: 12nd August 2019)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "event birthday partyy /at 15/08/2019 1800"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "       [E][-] birthday partyy (at: 15th August 2019 6pm)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    1. [T][-] read book"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    2. [D][-] CS2103 Project (by: 12nd August 2019)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    3. [E][-] birthday partyy (at: 15th August 2019 6pm)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "       [T][+] read book"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "       [E][+] birthday partyy (at: 15th August 2019 6pm)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    1. [T][+] read book"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    2. [D][-] CS2103 Project (by: 12nd August 2019)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    3. [E][+] birthday partyy (at: 15th August 2019 6pm)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "find CS"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    2. [D][-] CS2103 Project (by: 12nd August 2019)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "list"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    1. [T][+] read book"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    2. [D][-] CS2103 Project (by: 12nd August 2019)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    3. [E][+] birthday partyy (at: 15th August 2019 6pm)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "bye"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 63
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "deadline CS2103 Project /by 12/08/2019"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "event birthday partyy /at 15/08/2019 1800"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "find CS"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "javac  -cp ..\\src\\main\\java\\ -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YiJiee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YiJiee"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "YiJiee": 21
    }
  }
]
