[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "test {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nishcafe": 42,
      "-": 15
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "Duke is an offline application for managing various tasks. It is optimised for those "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "who prefer to work with a Command Line Interface (CLI) while still having the benefits of"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "a Graphical User Interface (GUI)."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "### Command Format"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "* `DES` is short for description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "* Words in `UPPER CASE` are the parameters to be supplied by the user"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "e.g. in `todo TASK DES`, `TASK DES` is the parameter,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "which can be used as `todo borrow book`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "* In the examples, words in the diamond brackets (\u003c\u003e) are user inputs, and Duke "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "responses are have a \u0027__________\u0027 preceding and succeeding it. "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "### Add a task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "Duke can track three types of tasks:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "* *Todos*: tasks without any date/time attached to it"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "* *Deadlines*: tasks that need to be done before a specific date/time"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "* *Events*: tasks that start at a specific time"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    | Task Type | Command |"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    | --------- | ------- |"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    | Todo | `todo TASK DES` |"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    | Deadline | `deadline TASK DES /by DATE TIME` |"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    | Event | `event TASK DES /at DATE TIME` |"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    \u003ctodo borrow book\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    __________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "           [T][✗] borrow book"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "         Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    __________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    \u003cdeadline CS2106 assignment /by 18/08/2019 2359\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    __________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "           [D][✗] return book (by: 18/08/2019 2359hrs)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "         Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "### List tasks"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "To list all the tasks in Duke:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    list"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "### Complete a task"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "The default status of a task added on Duke is *incomplete*: [✘]"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "To mark a task as done:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    done INDEX"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "This would subsequently update the status of the task to *completed*: [✓]."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    \u003clist\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    __________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        1. [T][✘] read book"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        2. [D][✘] return book (by: 18/07/2019 1800hrs)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    __________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    \u003cdone 2\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    __________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "           [✓] return book"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    __________"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    \u003clist\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    ___________"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        1. [T][✓] read book"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        2. [D][✘] return book (by: 18/07/2019 1800hrs)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "### Delete a task"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "To delete a task in Duke:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    delete INDEX"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    \u003clist\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    __________"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "         1.[T][✓] read book"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "         2.[D][✓] return book (by: 6/06/2019 1500hrs)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "         3.[E][✗] project meeting (at: 9/12/2020 1330hrs)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "         4.[T][✓] join sports club"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "         5.[T][✗] borrow book"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    __________"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    \u003cdelete 3\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    __________"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "           [E][✗] project meeting (at: 9/12/2020 1330hrs)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "### Save a task"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "Duke saves tasks in a hard disk automatically whenever the task list changes."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "It loads the data from the hard disk when it starts up."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "### Find a task"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "To look for a task by keyword in Duke:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    find KEYWORD"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    \u003cfind book\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    __________"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "         1.[T][✓] read book"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "         2.[D][✓] return book (by: 18/09/2018 1735hrs)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "### Edit a task"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "The editable attributes of a task are:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "  1. `des` : the description of a task"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "  2. `date` : the date of `event` and `deadline` tasks "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    edit INDEX/ATTRIBUTE/NEW ATTRIBUTE"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nishcafe"
        },
        "content": " Examples:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    \u003clist\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    __________"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "             1.[T][✓] read book"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "             2.[D][✓] return book (by: 6/06/2019 1500hrs)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "             3.[E][✗] project meeting (at: 9/12/2020 1330hrs)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "             4.[T][✓] join sports club"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "             5.[T][✗] borrow book"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    __________"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    \u003cedit 2/date/18/09/2019 1800\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    __________"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    Success! I\u0027ve edited this task from this:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    [D][✓] return book (by: 6/06/2019 1500hrs)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    to this:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    [D][✓] return book (by: 18/09/2019 1800hrs)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     __________"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     \u003cedit 4/des/join arts club\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     __________"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     Success! I\u0027ve edited this task from this:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     [T][✓] join sports club"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     to this:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     [T][✓] join arts club"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "### Help"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "To view a help page with a list of all commands:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    help"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "### Exit Duke"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "To exit Duke and close the programme:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    bye"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nishcafe": 144,
      "-": 14
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import tool.Parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import tool.Storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import tool.TaskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import tool.Ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private static Storage storage \u003d new Storage(\"./duke.txt\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        System.out.println(\"testing\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        //The container for the context of the chat to scroll."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        //Adding functionality to handle user input"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        });"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        });"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "//"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        String userText \u003d userInput.getText();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        String dukeText \u003d getResponse(userInput.getText());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                DialogBox.getUserDialog(userText, user),"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, duke)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        );"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        TaskList commands \u003d new TaskList(storage.load(new ArrayList\u003cTask\u003e())); //TODO"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        Parser p \u003d new Parser(commands, storage, ui);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        String xx \u003d p.parse(input);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        storage.close(commands);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        assert xx.isEmpty() : \"Response cannot be empty\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return xx;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 135,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": " * A public class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 11
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "//@Override"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 31
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import tool.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                DialogBox.getDukeDialog(greeting, dukeImage)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        );"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 59
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import tool.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected DateTime by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Constructor for Deadline Task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param description: Task description"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param by: DateTime object for Deadline Task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public Deadline(String description, DateTime by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Edits the specified attribute of task object with given update."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param attribute: Attribute to be edited: done, des, date, time"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param update: New attribute: true/false, new des, date"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public void edit(String attribute, String update) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        switch (attribute) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                assert update.equals(\"true\") || update.equals(\"false\") : \"Must provide true or false only\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                this.isDone \u003d update.equals(\"true\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            case \"des\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                this.description \u003d update;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            case \"date\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                this.by \u003d new DateTime(update);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                System.out.println(\"Attribute does not exist\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Formats the string to how it should be saved in the .txt file"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @return String to save in the .txt file"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String storageString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"D/\" + status + \"/\" + description + \"/\" + this.by;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nishcafe": 58
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import tool.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected DateTime at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Constructor for Event task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param description: Task description"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param at: DateTime object for Event task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public Event(String description, DateTime at) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Edits the specified attribute of task object with given update."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param attribute: Attribute to be edited: done, des, date"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param update: New attribute: true/false, new des, date"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public void edit(String attribute, String update) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        switch (attribute) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                assert update.equals(\"true\") || update.equals(\"false\") : \"Must provide true or false only\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                this.isDone \u003d update.equals(\"true\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            case \"des\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                this.description \u003d update;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            case \"date\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                this.at \u003d new DateTime(update);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                System.out.println(\"Attribute does not exist\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Formats the string to how it should be saved in the .txt file"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @return String to save in the .txt file"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String storageString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"E/\" + status + \"/\" + description + \"/\" + this.at;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 55
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected int status;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Constructor for Task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.status \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Changes the status of a task from not done to done"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.status \u003d 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Edits the specified attribute of task object with given update."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param attribute: done, des"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param update: true/false, new des"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public void edit(String attribute, String update) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        if (attribute.equals(\"done\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            assert update.equals(\"true\") || update.equals(\"false\") : \"Must provide true or false only\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            this.isDone \u003d update.equals(\"true\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            this.status \u003d update.equals(\"true\") ? 1 : 0;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        } else if (attribute.equals(\"des\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            this.description \u003d update;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            System.out.println(\"Attribute does not exist\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Formats the string to how it should be saved in the .txt file"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @return String to save in the .txt file"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String storageString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"task.Task|\" + status + \"|\" + description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 60
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Constructor for Todo task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Formats the string to how it should be saved in the .txt file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @return String to save in the .txt file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String storageString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"T/\" + status + \"/\" + description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 26
    }
  },
  {
    "path": "src/main/java/tool/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "package tool;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected int day;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected String month;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected int year;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected int time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    String[] months \u003d {\"January\", \"February\", \"March\", \"April\", \"May\", \"June\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"};"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Constructor for DateTime object for Deadline and Event tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param raw: Raw user input string"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public DateTime(String raw) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        String[] rawArr \u003d raw.split(\"/\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        if (rawArr.length \u003c 2) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String[] rawTwo \u003d raw.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            this.day \u003d Integer.parseInt(rawTwo[0]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            this.month \u003d rawTwo[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            this.year \u003d Integer.parseInt(rawTwo[2]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            this.time \u003d Integer.parseInt(rawTwo[3].split(\"hrs\")[0]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            this.day \u003d Integer.parseInt(rawArr[0]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            this.month \u003d months[Integer.parseInt(rawArr[1]) - 1];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String[] splitt \u003d rawArr[2].split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            this.year \u003d Integer.parseInt(splitt[0]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            this.time \u003d Integer.parseInt(splitt[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return this.day + \" \" + this.month + \" \" + this.year + \" \" + this.time + \"hrs\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 40
    }
  },
  {
    "path": "src/main/java/tool/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "package tool;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 7
    }
  },
  {
    "path": "src/main/java/tool/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "package tool;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private TaskList commands;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public Parser(TaskList commands, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.commands \u003d commands;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Parses the user\u0027s input to make sense of all the commands, and hands it over"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * to tool.TaskList"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String parse(String command) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            assert command.isEmpty() : \"Input cannot be empty\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String[] inputArr \u003d command.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String userCommand \u003d inputArr[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String dukeText;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                switch (userCommand) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    case \"bye\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        this.storage.close(this.commands);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        dukeText \u003d this.ui.bye();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        dukeText \u003d this.ui.list(this.commands);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        dukeText \u003d parseDone(inputArr);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        dukeText \u003d parseTask(command, \"d\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        dukeText \u003d parseTask(command, \"e\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        dukeText \u003d parseTask(command, \"t\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        dukeText \u003d parseDelete(inputArr);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    case \"find\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        dukeText \u003d parseFind(inputArr);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    case \"edit\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        dukeText \u003d parseEdit(command);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                dukeText \u003d e.getMessage();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            return dukeText;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Parses the task command"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param type"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @return String output for duke"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private String parseTask(String command, String type) throws DukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String taskString \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String delimiter \u003d \"\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            Task tt \u003d null;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            if (type.equals(\"e\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                delimiter \u003d \" /at \";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            } else if (type.equals(\"d\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                delimiter \u003d \" /by \";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                tt \u003d new Todo(taskString);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                String[] taskArr \u003d taskString.split(delimiter);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                String des \u003d taskArr[0];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                String dateTime \u003d taskArr[1];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                if (type.equals(\"e\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    tt \u003d new Event(des, new DateTime(dateTime));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                } else if (type.equals(\"d\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    tt \u003d new Deadline(des, new DateTime(dateTime));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                this.commands.add(tt);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                storage.save(tt);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                return this.ui.addTask(tt, this.commands.size());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                String messageError \u003d type.equals(\"d\") ? \"OOPS!!! The format for deadline is wrong. Please follow: \u003cdescription\u003e /by \u003ctime\u003e\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                                                       : type.equals(\"e\") ? \"OOPS!!! The format for event is wrong. Please follow: \u003cdescription\u003e /at \u003ctime\u003e\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                                                                          : \"OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                throw new DukeException(messageError);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            throw new DukeException(\"OOPS!! Description for the task cannot be empty.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Parses the delete command"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param inputArr"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @return String output for duke"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private String parseDelete(String[] inputArr) throws DukeException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            int i \u003d Integer.parseInt(inputArr[1]) - 1;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            assert i \u003c\u003d commands.size() : \"Index for delete is out of bounds\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                Task tt \u003d this.commands.delete(i);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                storage.delete(i + 1);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                return this.ui.delete(tt, this.commands.size());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                throw new DukeException(\"OOPS!!! Index for delete does not exist in the list.\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            throw new DukeException(\"OOPS!!! Index for delete cannot be empty.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Parses find command"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param inputArr"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @return String output for duke"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private String parseFind(String[] inputArr) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        assert inputArr.length \u003c 2 : \"Missing word to find\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        String word \u003d inputArr[1];"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return this.ui.find() + \"\\n\" + this.commands.find(word);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Parses done command"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param inputArr"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @return String output for duke"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private String parseDone(String[] inputArr) throws DukeException {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            int index \u003d Integer.parseInt(inputArr[1]) - 1;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                Task doneTask \u003d this.commands.done(index);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                this.storage.done(doneTask, index + 1);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                return this.ui.done(doneTask);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                throw new DukeException(\"OOPS!!! Index for done does not exist in the list.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            throw new DukeException(\"OOPS!!! Index for done cannot be empty.\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Parses edit command"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @return String output for duke"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private String parseEdit(String command) throws DukeException {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        String input \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String[] splitInput \u003d input.split(\"/\", 3);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            int i \u003d Integer.parseInt(splitInput[0]);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            Task toEdit \u003d this.commands.getTask(i - 1);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String oldTask \u003d toEdit.toString();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String attribute \u003d splitInput[1];"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String newDes \u003d splitInput[2];"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            System.out.println(\"newDes: \" + newDes);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            toEdit.edit(attribute, newDes);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            this.storage.done(toEdit, i);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            return this.ui.edit(oldTask, toEdit);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            throw new DukeException(\"Format for edit command is wrong. Try: edit index/attribute/updated info instead.\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 192
    }
  },
  {
    "path": "src/main/java/tool/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "package tool;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.nio.file.StandardCopyOption;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected FileWriter fw;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Constructor for storage object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param filePath"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        } catch(IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            System.out.println(\"Error occurred creating new storage object.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Loads tasks from the .txt file"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param commands"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @return the updated array list of tasks"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public ArrayList\u003cTask\u003e load(ArrayList\u003cTask\u003e commands) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            FileReader fr \u003d new FileReader(this.filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String x;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            while((x \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                if (counter \u003d\u003d 1) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                String[] data \u003d x.split(\"/\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                if (data[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    Todo t \u003d new Todo(data[2]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    commands.add(t);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    System.out.println(counter + \". \" + t);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                } else if (data[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    Deadline d \u003d new Deadline(data[2], new DateTime(data[3]));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        d.markAsDone();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    commands.add(d);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    System.out.println(counter + \". \" + d);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                } else if (data[0].equals(\"E\")){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    Event e \u003d new Event(data[2], new DateTime(data[3]));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        e.markAsDone();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    commands.add(e);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    System.out.println(counter + \". \" + e);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            System.out.println(\"Error occurred loading tasks from file\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return commands;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Saves the latest task in the .txt file"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param Task t"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     protected void save(Task t) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            this.fw.append(t.storageString() + System.lineSeparator());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            System.out.println(\"Error occurred saving task to file.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Deletes task from hard drive specified at index i"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param i"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected void delete(int i) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            FileReader fr \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            FileWriter ff \u003d new FileWriter(\"./temp.txt\", true);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            int j \u003d 1;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String x;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            while ((x \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                if (i !\u003d j) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    ff.write(x + System.lineSeparator());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    ff.flush();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                j++;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            ff.close();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            Files.copy(Paths.get(\"./temp.txt\"), Paths.get(filePath), StandardCopyOption.REPLACE_EXISTING);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            Files.delete(Paths.get(\"./temp.txt\"));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "//            e.printStackTrace();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            System.out.println(\"Error occurred deleting task in file\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Changes the status of task from not done to done"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param t"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected void done(Task t, int index) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            FileReader fr \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            FileWriter ff \u003d new FileWriter(\"./temp.txt\", true);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String x;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            int i \u003d 1;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            while ((x \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                if (i \u003d\u003d index) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    ff.write(t.storageString() + System.lineSeparator());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    ff.write(x + System.lineSeparator());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            ff.close();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            Files.copy(Paths.get(\"./temp.txt\"), Paths.get(\"./duke.txt\"), StandardCopyOption.REPLACE_EXISTING);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            Files.delete(Paths.get(\"./temp.txt\"));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            System.out.println(\"Error occurred updating status of task.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Closes file reader \u0026 saves all changes to task list in hard drive"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public void close(TaskList tasks) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            FileReader fr \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            FileWriter ff \u003d new FileWriter(\"./temp.txt\", true);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String x;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            for (Task t : tasks.getList()) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    ff.write(t.storageString() + System.lineSeparator());"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    ff.flush();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            ff.close();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            Files.copy(Paths.get(\"./temp.txt\"), Paths.get(filePath), StandardCopyOption.REPLACE_EXISTING);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            Files.delete(Paths.get(\"./temp.txt\"));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            System.out.println(\"Error occurred saving tasks to text file.\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 174
    }
  },
  {
    "path": "src/main/java/tool/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "package tool;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    private ArrayList\u003cTask\u003e commands;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Constructor for TaskList object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param commands"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e commands) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.commands \u003d commands;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected int size() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return this.commands.size();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected Task getTask(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return this.commands.get(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return this.commands;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Marks the task specifies at index as done"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @return the task that has been marked as done"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected Task done(int index) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        Task doneTask \u003d this.commands.get(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        doneTask.markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return doneTask;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected void add(Task t) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.commands.add(t);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected Task delete(int index) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return this.commands.remove(index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Finds tasks in the task list that contain the specified word"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param word"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @return A string listing out all the tasks that contain the word"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected String find(String word) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        String res \u003d \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        for (Task ttt : this.commands) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            if (ttt.toString().contains(word)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                res +\u003d count + \". \" + ttt + \"\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 65
    }
  },
  {
    "path": "src/main/java/tool/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "package tool;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Greeting message for Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected String hi() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Farewell message for Duke"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected String bye() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Handles the UI for \"list\" command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected String list(TaskList tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        String str \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        for (Task t : tasks.getList()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            str \u003d str + count + \". \" + t + \"\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Handles the UI for \"done\" command"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param t"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected String done(Task t) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n  \" + t;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Handles the UI for \"todo\", \"deadline\" and \"event\" tasks"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param t"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param size"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected String addTask(Task t, int size) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n  \" + t"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                + \"\\nNow you have \" + size + \" tasks in the list.\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Handles the UI for \"delete\" command"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param t"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param size"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected String delete(Task t, int size) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n  \" + t +"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                \"\\nNow you have \" + size + \" tasks in the list.\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Handles the UI for \"find\" command"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected String find() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * Handles UI for \"edit\" command"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param prevTask"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @param newTask"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected String edit(String prevTask, Task newTask) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        if (prevTask.equals(newTask.toString())) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            return \"OOPS!! There\u0027s nothing to change.\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            return \"Success! I\u0027ve edited this task from this:\\n\" + prevTask + \"\\nto this:\\n\" + newTask;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 88
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 19
    }
  },
  {
    "path": "src/test/java/DateTimeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import tool.DateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class DateTimeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public void testDateTime() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        DateTime dt \u003d new DateTime(\"18/10/1999 1800\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        String res \u003d dt.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        assertEquals(\"18 October 1999 1800hrs\", res);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nishcafe": 15
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import tool.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public void testDoneStorageString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        DateTime dt \u003d new DateTime(\"18/10/1999 1800\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        Event e \u003d new Event(\"read book\", dt);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        e.markAsDone();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        String res \u003d e.storageString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        assertEquals(\"E/1/read book/18 October 1999 1800hrs\", res);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 17
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public void testStorageString() throws Throwable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        Todo t \u003d new Todo(\"read book\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        String res \u003d t.storageString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        assertEquals(\"T/0/read book\", res);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 15
    }
  }
]
