[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "compileJava {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "    options.encoding \u003d \"UTF-8\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 27,
      "-": 14
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "D|0| return book |Mon, 2 Dec 2019, 06:00 PM"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": "T|1|make my bed"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "D|0|Quiz 1 | tomorrow"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "T|0|Make bed"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "T|0|make bed"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "T|0|read book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "D|0|return my stuff |tomorrow"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "D|0|cskam |tomorrow"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "D|0|csasa |tomrrow"
      }
    ],
    "authorContributionMap": {
      "febee99": 9
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a DialogBox."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param l  The label inside the dialog box."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param iv The image profile specified."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Constructs a DialogBox that echoes the user input."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param l  The label containing the user input."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param iv The image profile of a user."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The DialogBox created for the user."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Constructs a DialogBox that contains Duke\u0027s response."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param l  The label containing Duke\u0027s response."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param iv The image profile of Duke."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The DialogBox created for Duke."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "febee99"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "febee99"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 67
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialise new duke.Duke session."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "        storage \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "//    public static void main(String[] args) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "//        new Duke().run();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Starts the session and parses user input."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "febee99"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "febee99"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "febee99"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "febee99"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "febee99"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "febee99"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "febee99"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "febee99"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "febee99"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "febee99"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "febee99"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "febee99"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "febee99"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "febee99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Starts up the chat-box application."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param stage The stage to set the scene on."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "febee99"
        },
        "content": "            //Step 1. Setting up required components"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "febee99"
        },
        "content": "            //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "febee99"
        },
        "content": "            scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "febee99"
        },
        "content": "            dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "febee99"
        },
        "content": "            scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "febee99"
        },
        "content": "            userInput \u003d new TextField();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "febee99"
        },
        "content": "            sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "febee99"
        },
        "content": "            AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "febee99"
        },
        "content": "            mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "febee99"
        },
        "content": "            scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "febee99"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "febee99"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "febee99"
        },
        "content": "            //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "febee99"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "febee99"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "febee99"
        },
        "content": "            stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "febee99"
        },
        "content": "            stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "febee99"
        },
        "content": "            mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "febee99"
        },
        "content": "            scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "febee99"
        },
        "content": "            scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "febee99"
        },
        "content": "            scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "febee99"
        },
        "content": "            scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "febee99"
        },
        "content": "            scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "febee99"
        },
        "content": "            // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "febee99"
        },
        "content": "            dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "febee99"
        },
        "content": "            userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "febee99"
        },
        "content": "            sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "febee99"
        },
        "content": "            AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "febee99"
        },
        "content": "            AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "febee99"
        },
        "content": "            AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "febee99"
        },
        "content": "            AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "febee99"
        },
        "content": "            AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "febee99"
        },
        "content": "            //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "febee99"
        },
        "content": "            sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "febee99"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "febee99"
        },
        "content": "            });"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "febee99"
        },
        "content": "            userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "febee99"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "febee99"
        },
        "content": "            });"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "febee99"
        },
        "content": "            //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "febee99"
        },
        "content": "            dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "febee99"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "febee99"
        },
        "content": "        Application.launch(args);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "febee99"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "febee99"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "febee99"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "febee99"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "febee99"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "febee99"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "febee99"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "febee99"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "febee99"
        },
        "content": "        );"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "febee99"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Parses the user input and returns a response string by Duke."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param input The user input keyed in."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The response string generated."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "febee99"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "febee99"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "febee99"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 192,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises an AddCommand."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param type        The type of AddCommand"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param description The description of the command"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @throws DukeException In the event of empty descriptions/invalid commands/ invalid command formats."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public AddCommand(String type, String[] description) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "            String[] details;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "            this.description \u003d description[1].trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "            this.type \u003d type;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "                task \u003d new ToDo(parseDescription());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "                task \u003d new Deadline(parseDescription(\"/by\"), parseDate());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "                task \u003d new Event(parseDescription(\"/at\"), parseDate());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "            throw new DukeException(\"The description of a \" + type + \" cannot be empty\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Executes the AddCommand, adds the task to the LinkedList and saves it to the file."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param tasks   The TaskList containing all existing tasks."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param ui      The Ui for printing purposes."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param storage The Storage for saving tasks to file."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The response string."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "febee99"
        },
        "content": "        tasks.allTasks.add(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "febee99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Got it. I\u0027ve added this task:\\n\" + task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "febee99"
        },
        "content": "        if (tasks.allTasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "febee99"
        },
        "content": "            sb.append(\"\\nNow you have \")"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "febee99"
        },
        "content": "              .append(tasks.allTasks.size())"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "febee99"
        },
        "content": "                .append(\" task in the list.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "febee99"
        },
        "content": "            sb.append(\"\\nNow you have \")"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "febee99"
        },
        "content": "              .append(tasks.allTasks.size())"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "febee99"
        },
        "content": "                .append(\" tasks in the list.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "febee99"
        },
        "content": "        storage.appendTaskToFile(task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return (sb.toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Checks if it is a bye command."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return A boolean: true if it is a bye command."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Parses a string and reformats it as a date."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The string representation of the new date object."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String parseDate() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "febee99"
        },
        "content": "            SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\", java.util.Locale.ENGLISH);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "febee99"
        },
        "content": "            Date myDate \u003d sdf.parse(time.replaceAll(\"-\", \"/\"));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "febee99"
        },
        "content": "            sdf.applyPattern(\"EEE, d MMM yyyy, hh:mm a\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "febee99"
        },
        "content": "            return sdf.format(myDate);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "febee99"
        },
        "content": "            return time.trim();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Parses the command description for to-dos and checks if it is empty/null."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The parsed description only if it is not empty/null."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String parseDescription() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "febee99"
        },
        "content": "        if (description.length() \u003c 1) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "febee99"
        },
        "content": "            throw new ArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "febee99"
        },
        "content": "            return description;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Parses the command description with delimiters for events and deadlines and checks if it is in"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * the correct format."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param delimiter The delimiter that splits the description."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The parsed description."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @throws DukeException In the event that the command is in the wrong format."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String parseDescription(String delimiter) throws DukeException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "febee99"
        },
        "content": "        String[] details \u003d description.split(delimiter);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "febee99"
        },
        "content": "        if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "febee99"
        },
        "content": "            if (details[0].length() !\u003d 0) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "febee99"
        },
        "content": "                throw new DukeException(\"Incorrect format. \\nPlease try again with the format below: \\n\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "febee99"
        },
        "content": "                        + type + \" ($task_name) \" + delimiter + \" ($date/day)\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "febee99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.time \u003d details[1];"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return details[0];"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 136
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param tasks   The TaskList containing all existing tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param ui      The Ui for printing purposes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param storage The Storage for saving tasks to file."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The response string."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Checks if it is a bye command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return A boolean: true if it is a bye command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 26
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a DeleteCommand."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param index The index of the task to be deleted."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Executes the Delete Command and removes the task from the Linked List and file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param tasks   The TaskList containing all existing tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param ui      The Ui for printing purposes."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param storage The Storage for saving tasks to file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The response string."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Noted. I\u0027ve removed this task:\\n\" + tasks.allTasks.get(index));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "        storage.deleteTaskFromFile(tasks.allTasks.get(index));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "        tasks.allTasks.remove(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "        if (tasks.allTasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "            sb.append(\"\\nNow you have \")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "              .append(tasks.allTasks.size())"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "                .append(\" task in the list.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "            sb.append(\"\\nNow you have \")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "              .append(tasks.allTasks.size())"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "                .append(\" tasks in the list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return (sb.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Checks if it is a bye command."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return A boolean: true if it is a bye command."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 52
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a DoneCommand."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param index The index of the task to be marked as done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Executes the Done Command and marks the task as done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param tasks   The TaskList containing all existing tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param ui      The Ui for printing purposes."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param storage The Storage for saving tasks to file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The response string."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "        // Delete from file, mark as done, reinsert into file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "        storage.deleteTaskFromFile(tasks.allTasks.get(index));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "        tasks.allTasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "        storage.appendTaskToFile(tasks.allTasks.get(index));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return (\"Nice! I\u0027ve marked this task as done:\\n\" + tasks.allTasks.get(index));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Checks if it is a bye command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return A boolean: true if it is a bye command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 44
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises an ExitCommand."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Executes the Exit Command and kills the duke session."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param tasks   The TaskList containing all existing tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param ui      The Ui for printing purposes."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param storage The Storage for saving tasks to file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The response string."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return (\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Checks if it is a bye command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return A boolean: true if it is a bye command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 36
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a FindCommand."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param keyword The keyword to find in tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.keyword \u003d keyword.toLowerCase();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Executes the Find Command and lists all existing tasks in the TaskList that contains the keyword."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param tasks   The TaskList containing all existing tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param ui      The Ui for printing purposes."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param storage The Storage for saving tasks to file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The response string."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "        // Print all existing items in the list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "        for (Task x : tasks.allTasks) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "            if (x.toString().toLowerCase().contains(keyword)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "                sb.append((tasks.allTasks.indexOf(x) + 1) + \". \" + x);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Checks if it is a bye command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return A boolean: true if it is a bye command."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 49
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a ListCommand."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Executes the List Command and lists all existing tasks in the TaskList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param tasks   The TaskList containing all existing tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param ui      The Ui for printing purposes."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param storage The Storage for saving tasks to file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The response string."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "        // Print all existing items in the list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "        tasks.allTasks.forEach(x -\u003e sb.append((tasks.allTasks.indexOf(x) + 1) + \". \" + x + \"\\n\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Checks if it is a bye command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return A boolean: true if it is a bye command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 39
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a DukeException."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param message The error message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "        super(\"☹ OOPS!!! \" + message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 14
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Parses any user inputs and determines the type of command that was entered."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param fullCommand The command input by user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The type of command entered"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @throws DukeException In the event that a command has an incorrect format/ empty description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "        //Parse the string to check which command it is referring to"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "        String[] details \u003d fullCommand.trim().split(\"\\\\s+\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "            switch (details[0]) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "                return new FindCommand(details[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "                return new DoneCommand(Integer.parseInt(details[1]) - 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(details[1]) - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "                return new AddCommand(details[0], fullCommand.split(details[0]));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-( \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "            // If the command misses a description entirely"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "            switch (details[0]) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "                throw new DukeException(\"Incorrect format. Missing a task index. \\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "                        + \"Please try again with the following format: \" + details[0] + \" 3\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": "                throw new DukeException(\"Incorrect format. Missing a keyword to find. \\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "febee99"
        },
        "content": "                        + \"Please try again with the following format: \" + details[0] + \" book\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "febee99"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "febee99"
        },
        "content": "                throw new DukeException(\"Incorrect format. Please try again.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "febee99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "febee99"
        },
        "content": "            // If the delete/done commands are followed by strings instead of a number index"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "febee99"
        },
        "content": "            throw new DukeException(\"Incorrect format. \\n\" + details[0]"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    + \" should be followed by a number index not a string. \\ne.g. \" + details[0] + \" 3\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 63
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a Storage session."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param filepath The file to store tasks to."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Reads the input file line by line to add tasks into the TaskList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The LinkedList containing all loaded tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @throws DukeException In the event that the file cannot be read properly."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public LinkedList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "        LinkedList\u003cTask\u003e allTasks \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "            File f \u003d new File(filepath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "            if (!f.exists()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(f));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "            String currLine;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "            while ((currLine \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "                String[] formattedText \u003d currLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "                Task t;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "                switch (formattedText[0]) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    t \u003d new ToDo(formattedText[2]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    t \u003d new Deadline(formattedText[2], formattedText[3]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "febee99"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    t \u003d new Event(formattedText[2], formattedText[3]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "febee99"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    t \u003d new Task(\"\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "febee99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "febee99"
        },
        "content": "                if (formattedText[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "febee99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "febee99"
        },
        "content": "                allTasks.add(t);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "febee99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "febee99"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return allTasks;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Append a new task to the end of the file."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param t The task to be added."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void appendTaskToFile(Task t) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "febee99"
        },
        "content": "            BufferedWriter output \u003d new BufferedWriter(new FileWriter(filepath, true));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "febee99"
        },
        "content": "            output.append(t.toStore()).append(\"\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "febee99"
        },
        "content": "            output.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "febee99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Deletes a task from the file."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param t The task to be deleted."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void deleteTaskFromFile(Task t) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "febee99"
        },
        "content": "        File inputFile \u003d new File(filepath);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "febee99"
        },
        "content": "        File tempFile \u003d new File(\"data/temp.txt\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "febee99"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(inputFile));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "febee99"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(tempFile));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "febee99"
        },
        "content": "            String lineToRemove \u003d t.toStore();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "febee99"
        },
        "content": "            String currentLine;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "febee99"
        },
        "content": "            while ((currentLine \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "febee99"
        },
        "content": "                // trim newline when comparing with lineToRemove"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "febee99"
        },
        "content": "                String trimmedLine \u003d currentLine.trim();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "febee99"
        },
        "content": "                if (trimmedLine.equals(lineToRemove)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "febee99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "febee99"
        },
        "content": "                writer.write(currentLine + \"\\n\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "febee99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "febee99"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "febee99"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "febee99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "febee99"
        },
        "content": "        tempFile.renameTo(inputFile);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 119
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private final String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a Deadline task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param description The deadline description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param by          The time at which the deadline is up."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * The string representation of a deadline for printing."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The deadline string for printing."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * The string representation of a deadline for saving to file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The deadline string for storage."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String toStore() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return \"D\" + super.toStore() + \"|\" + by;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 37
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private final String range;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises an event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param description The event description"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param range       The time period during which the event occurs"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public Event(String description, String range) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.range \u003d range;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Returns out the string representation of an event for printing."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The event string for printing."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + range + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Returns the string representation of an event for saving to file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The event string for storage."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String toStore() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return \"E\" + super.toStore() + \"|\" + range;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 37
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a Task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param description The task description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Gets the status icon of a task by checking if it is done or not."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The string representation of the icon."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * The string representation of a task for printing."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The task string for printing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * The string representation of a task for saving to file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The task string for storage."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String toStore() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return isDone ? \"|1|\" + this.description : \"|0|\" + this.description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 52
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public final LinkedList\u003cTask\u003e allTasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a TaskList with allTasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param allTasks The LinkedList containing all existing tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public TaskList(LinkedList\u003cTask\u003e allTasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.allTasks \u003d allTasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises an empty TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.allTasks \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 24
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a to-do task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param description The description of the to-do task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * The string representation of a to-do for printing."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The to-do string for printing."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * The string representation of a to-do for saving to file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The to-do string for storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String toStore() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return \"T\" + super.toStore();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 33
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Initialises a Ui."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Prints out the logo and welcome message."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.showLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "        System.out.println(\"Hello! I\u0027m duke.Duke\\nWhat can I do for you?\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "        this.showLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Prints out a horizontal line."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": "        String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Prints out a loading error message."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "        System.err.println(\"Loading error...\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Prints out the given error message."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param message The passed input message"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "        System.err.println(message);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Reads the command input by the user."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @return The command input by the user for parsing."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "febee99"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "febee99"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "febee99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * Prints out the given message."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "febee99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "febee99"
        },
        "content": "     * @param msg The passed output message"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "febee99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void printMessage(String msg) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "febee99"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 71
    }
  },
  {
    "path": "src/test/java/duke/command/AddCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "    // Test to-do Formats"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void parseDescription_normalToDo_parsedCorrectly() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "            assertEquals(\"Make the bed\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    ((AddCommand) Parser.parse(\"todo Make the bed\")).parseDescription());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void parseDescription_emptyToDo_exceptionThrown() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "febee99"
        },
        "content": "            ((AddCommand) Parser.parse(\"todo\")).parseDescription();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "febee99"
        },
        "content": "            String expected \u003d \"☹ OOPS!!! The description of a todo cannot be empty\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "febee99"
        },
        "content": "            assertEquals(expected, e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "febee99"
        },
        "content": "    // Test Deadline Formats"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void parseDescription_emptyDeadline_exceptionThrown() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "febee99"
        },
        "content": "            ((AddCommand) Parser.parse(\"deadline\")).parseDescription(\"/by\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "febee99"
        },
        "content": "            String expected \u003d \"☹ OOPS!!! The description of a deadline cannot be empty\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "febee99"
        },
        "content": "            assertEquals(expected, e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "febee99"
        },
        "content": "    // Test Event Formats"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void parseDescription_normalEvent_parsedCorrectly() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "febee99"
        },
        "content": "            assertEquals(\"Make the bed \","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    ((AddCommand) Parser.parse(\"event Make the bed /at 2/2/2019\")).parseDescription(\"/at\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "febee99"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void parseDescription_emptyEvent_exceptionThrown() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "febee99"
        },
        "content": "            ((AddCommand) Parser.parse(\"event\")).parseDescription(\"/at\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "febee99"
        },
        "content": "            String expected \u003d \"☹ OOPS!!! The description of a event cannot be empty\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "febee99"
        },
        "content": "            assertEquals(expected, e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void parseDescription_incorrectEvent_exceptionThrown() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "febee99"
        },
        "content": "            ((AddCommand) Parser.parse(\"event Make the bed\")).parseDescription(\"/at\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "febee99"
        },
        "content": "            String expected \u003d \"☹ OOPS!!! Incorrect format. \\nPlease try again with the format below: \\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    + \"event ($task_name) /at ($date/day)\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "febee99"
        },
        "content": "            assertEquals(expected, e.getMessage());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void parseDescription_incompleteEvent_exceptionThrown() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "febee99"
        },
        "content": "            ((AddCommand) Parser.parse(\"event Make the bed /at\")).parseDescription(\"/at\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "febee99"
        },
        "content": "            String expected \u003d \"☹ OOPS!!! Incorrect format. \\nPlease try again with the format below: \\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    + \"event ($task_name) /at ($date/day)\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "febee99"
        },
        "content": "            assertEquals(expected, e.getMessage());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "febee99"
        },
        "content": "    // Test Parsing of Dates for Deadlines and Events"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void parseDate_AcceptedDateFormat_parsedCorrectly() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "febee99"
        },
        "content": "            assertEquals(\"Sat, 2 Feb 2019, 08:00 PM\","
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    ((AddCommand) Parser.parse(\"deadline Make the bed /by 2/2/2019 2000\")).parseDate());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "febee99"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void parseDate_StringDateFormat_parsedCorrectly() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "febee99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "febee99"
        },
        "content": "            assertEquals(\"2/2/2019 8pm\","
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "febee99"
        },
        "content": "                    ((AddCommand) Parser.parse(\"deadline Make the bed /by 2/2/2019 8pm\")).parseDate());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "febee99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "febee99"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "febee99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 108
    }
  },
  {
    "path": "src/test/java/duke/tasks/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void toString_normalDeadline_convertedCorrectly() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "        assertEquals(\"[D][✘] Quiz 1 (by: tomorrow)\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "                new Deadline(\"Quiz 1\", \"tomorrow\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void toStore_normalDeadline_convertedCorrectly() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "        assertEquals(\"D|0|Quiz 1|tomorrow\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": "                new Deadline(\"Quiz 1\", \"tomorrow\").toStore());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 22
    }
  },
  {
    "path": "src/test/java/duke/tasks/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "febee99"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "febee99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "febee99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "febee99"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void toString_normalDeadline_convertedCorrectly() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "febee99"
        },
        "content": "        assertEquals(\"[T][✘] Quiz 1\", new ToDo(\"Quiz 1\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "febee99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "febee99"
        },
        "content": "    public void toStore_normalDeadline_convertedCorrectly() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "febee99"
        },
        "content": "        assertEquals(\"T|0|Quiz 1\", new ToDo(\"Quiz 1\").toStore());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "febee99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "febee99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "febee99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "febee99": 20
    }
  }
]
