[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    private String byWhen;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public Deadline(String name, String byWhen) throws EmptyTaskDukeException, InvalidTaskDukeException  {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        if (name \u003d\u003d null) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "            throw new EmptyTaskDukeException(\"deadline\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        if (byWhen \u003d\u003d null) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "            throw new InvalidTaskDukeException(\"deadline\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        // to add the colon"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        String arr[] \u003d byWhen.split(\" \", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        this.byWhen \u003d arr[0] + \": \" + arr[1];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder(\"[D]\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        stringBuilder.append(super.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        stringBuilder.append(\" (\" + byWhen + \")\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeunhoe": 24
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    private static String input;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    private static boolean running;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    private static List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        setupResources();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        while (running) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                readInput();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                processInput();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                handleException(e);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public static void setupResources() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        running \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        running \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                        \"     Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                        \"     What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                        \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public static void readInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public static void processInput() throws InvalidInputDukeException, EmptyTaskDukeException, InvalidTaskDukeException{"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        Scanner scanner \u003d new Scanner(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        if (scanner.hasNext()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "            String toProcess \u003d scanner.next();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "            switch (toProcess) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                    printList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                    sayGoodbye();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                    markAsDone(scanner.nextInt());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                    removeTaskFromList(scanner.nextInt());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                    addTaskToList();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                    throw new InvalidInputDukeException();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "            throw new InvalidInputDukeException();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public static void addTaskToList() throws EmptyTaskDukeException, InvalidTaskDukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        Task taskToAdd \u003d null;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        String checkType[] \u003d Arrays.copyOf(input.split(\" \", 2), 2);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        String typeOfTask \u003d checkType[0];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        String theTask \u003d checkType[1];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        // switch statement for todo, deadline, task"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        switch(typeOfTask) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                taskToAdd \u003d new ToDo(theTask);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                list.add(taskToAdd);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                String taskByWhen[];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                // hardcode exception first"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                if (theTask \u003d\u003d null) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                    taskByWhen \u003d new String[] {null, null};"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                    taskByWhen \u003d Arrays.copyOf(theTask.split(\" /\", 2), 2);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                String deadlineTask \u003d taskByWhen[0];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                String byWhen \u003d taskByWhen[1];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                taskToAdd \u003d new Deadline(deadlineTask, byWhen);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                list.add(taskToAdd);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                String taskAtTime[];"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                if (theTask \u003d\u003d null) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                    taskAtTime \u003d new String[] {null, null};"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                    taskAtTime \u003d Arrays.copyOf(theTask.split(\" /\", 2), 2);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                String eventTask \u003d taskAtTime[0];"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                String atTime \u003d taskAtTime[1];"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                taskToAdd \u003d new Event(eventTask, atTime);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                list.add(taskToAdd);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        System.out.println(\"       \" + taskToAdd);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        System.out.println(String.format(\"     Now you have %d tasks in the list.\", list.size()));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public static void removeTaskFromList(int positionInList) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        Task removedTask \u003d list.remove(positionInList - 1);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                \"     Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        System.out.println(removedTask);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        System.out.println(String.format(\"     Now you have %d tasks in the list.\", list.size()));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public static void printList() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "            System.out.println(String.format(\"     %d. %s\", i+1, list.get(i)));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public static void markAsDone(int positionInList) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        Task taskToMark \u003d list.get(positionInList - 1);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        taskToMark.done();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        System.out.println(String.format(\"     %s\", taskToMark));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public static void handleException(Exception e) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        if (e instanceof InvalidInputDukeException) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                    \"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                    \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        } else if (e instanceof EmptyTaskDukeException) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "            System.out.println(String.format(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                    \"     ☹ OOPS!!! The description of a %s cannot be empty.\\n\" +"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                    \"    ____________________________________________________________\", e.getMessage()));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        } else if (e instanceof InvalidTaskDukeException) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "            System.out.println(String.format(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                    \"     ☹ OOPS!!! Invalid input! Make sure your %s has a description and /at or /by.\\n\" +"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                    \"    ____________________________________________________________\", e.getMessage()));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "            System.out.println(e.getMessage()); // for undeclared exceptions"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public static void sayGoodbye() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                        \"     Bye. Hope to see you again soon!\\n\" +"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "                        \"    ____________________________________________________________\""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        );"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        running \u003d false;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeunhoe": 178,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public DukeException () {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeunhoe": 9
    }
  },
  {
    "path": "src/main/java/EmptyTaskDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "public class EmptyTaskDukeException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public EmptyTaskDukeException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public EmptyTaskDukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeunhoe": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    private String atTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public Event(String name, String atTime) throws EmptyTaskDukeException, InvalidTaskDukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        if (name \u003d\u003d null) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "            throw new EmptyTaskDukeException(\"event\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        if (atTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "            throw new InvalidTaskDukeException(\"event\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        // to add the colon"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        String arr[] \u003d atTime.split(\" \", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        this.atTime \u003d arr[0] + \": \" + arr[1];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder(\"[E]\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        stringBuilder.append(super.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        stringBuilder.append(\" (\" + atTime + \")\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeunhoe": 24
    }
  },
  {
    "path": "src/main/java/InvalidInputDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "public class InvalidInputDukeException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public InvalidInputDukeException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeunhoe": 5
    }
  },
  {
    "path": "src/main/java/InvalidTaskDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "public class InvalidTaskDukeException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public InvalidTaskDukeException (String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeunhoe": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public Task(String name){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        StringBuilder toPrint \u003d new StringBuilder();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "            toPrint.append(\"[✓] \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "            toPrint.append(\"[✗] \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        toPrint.append(name);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        return toPrint.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jeunhoe": 26
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public ToDo(String name) throws EmptyTaskDukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        if (name \u003d\u003d null) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "            throw new EmptyTaskDukeException(\"todo\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeunhoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeunhoe": 13
    }
  }
]
