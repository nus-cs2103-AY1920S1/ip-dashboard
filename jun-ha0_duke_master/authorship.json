[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "//Publishes an executable jar to ./build/libs/"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "run {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "application {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jun-ha0": 28,
      "Jeffry Lum": 15
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 84
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 1
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jun-ha0": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    private UserInterface ui;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    private Duke() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        ui \u003d new UserInterface();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        boolean isTerminated \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        while (!isTerminated) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                String inputLine \u003d ui.readLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                String command \u003d getCommandFrom(inputLine);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                    case \"bye\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        isTerminated \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        ui.exitProgram();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        ui.showTaskList(taskList.getTaskNames());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        task \u003d taskList.markDone(getIndexFrom(inputLine));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        ui.showMarkDone(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        task \u003d createTodoFrom(inputLine);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        taskList.addTask(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        ui.showAddition(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        ui.showTaskSize(taskList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        task \u003d createDeadlineFrom(inputLine);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        taskList.addTask(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        ui.showAddition(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        ui.showTaskSize(taskList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        task \u003d createEventFrom(inputLine);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        taskList.addTask(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        ui.showAddition(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        ui.showTaskSize(taskList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        task \u003d taskList.delete(getIndexFrom(inputLine));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        ui.showDeletion(task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        ui.showTaskSize(taskList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                        throw new DukeException(ui.MESSAGE_INVALID_COMMAND_FORMAT);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                ui.showExceptionMessage(e.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    private String getCommandFrom(String inputLine) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        return inputLine.strip().split(\" \")[0];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    private int getIndexFrom(String inputLine) throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            int index \u003d Integer.parseInt(inputLine.strip().split(\" \")[1]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            if (index \u003c\u003d 0 || index \u003e taskList.size()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                throw new DukeException(ui.MESSAGE_INVALID_TASK_INDEX);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            return index;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            throw new DukeException(ui.MESSAGE_INVALID_TASK_INDEX);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    private Todo createTodoFrom(String inputLine) throws DukeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        String todoDescription \u003d inputLine.substring(\"todo\".length()).strip();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        if (todoDescription.isEmpty()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            throw new DukeException(ui.MESSAGE_INVALID_TODO_FORMAT);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        return new Todo(todoDescription);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    private Deadline createDeadlineFrom(String inputLine) throws DukeException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            String[] deadlinePart \u003d inputLine.substring(\"deadline\".length()).split(\"/by\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            String deadlineDescription \u003d deadlinePart[0].strip();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            if (deadlineDescription.isEmpty()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                throw new DukeException(ui.MESSAGE_INVALID_DEADLINE_FORMAT);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            return new Deadline(deadlineDescription, deadlinePart[1].strip());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            throw new DukeException(ui.MESSAGE_INVALID_DEADLINE_FORMAT);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    private Event createEventFrom(String inputLine) throws DukeException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            String[] eventPart \u003d inputLine.substring(\"event\".length()).split(\"/at\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            String eventDescription \u003d eventPart[0].strip();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            if (eventDescription.isEmpty()) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "                throw new DukeException(ui.MESSAGE_INVALID_EVENT_FORMAT);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            return new Event(eventDescription, eventPart[1].strip());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            throw new DukeException(ui.MESSAGE_INVALID_EVENT_FORMAT);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    public static void main (String[] args){"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jun-ha0": 115,
      "Jeffry Lum": 1,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jun-ha0": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jun-ha0": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public void setDone(boolean status) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        this.isDone \u003d status;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        return (isDone ? \"[\\u2713] \" : \"[\\u2718] \") + this.taskName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jun-ha0": 18
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public Task addTask(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public Task markDone(int index) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        Task task \u003d this.tasks.get(index - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        task.setDone(true);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public Task delete(int index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        Task task \u003d this.tasks.get(index - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        this.tasks.remove(index - 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public List\u003cString\u003e getTaskNames() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        List\u003cString\u003e taskNames \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            taskNames.add( (i + 1) + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        return taskNames;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jun-ha0": 43
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jun-ha0": 10
    }
  },
  {
    "path": "src/main/java/UserInterface.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "public class UserInterface {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    private static final Scanner SCANNER \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    private static final String LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    private static final String LINE_PREFIX \u003d \"     \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    private static final String MESSAGE_WELCOME \u003d \"Hello! I\u0027m Duke\\n\" + LINE_PREFIX + \"What can I do for you?\\n\" + LINE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    private static final String MESSAGE_ADDED \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    private static final String MESSAGE_DELETED \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    private static final String MESSAGE_MARK_DONE \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    private static final String MESSAGE_SHOW_TASK_LIST \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    private static final String MESSAGE_SHOW_TASK_SIZE \u003d \"Now you have %1$s tasks in the list.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public final String MESSAGE_INVALID_TODO_FORMAT \u003d \"The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public final String MESSAGE_INVALID_DEADLINE_FORMAT \u003d"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            \"The description of a deadline must have /by and cannot be empty. E.g. deadline return book /by Sunday\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public final String MESSAGE_INVALID_EVENT_FORMAT \u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            \"The description of a event must have /at and cannot be empty. E.g. event project meeting /at Mon 2-4pm\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public final String MESSAGE_INVALID_TASK_INDEX \u003d \"Invalid task number. Task numbers are 1-based.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    private static final String MESSAGE_BYE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    private static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public String readLine() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        String nextLine \u003d SCANNER.nextLine().strip();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        System.out.println(nextLine);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        return nextLine;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public void showToUser(String line) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        System.out.println(LINE_PREFIX + line);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        showToUser(LINE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        showToUser(MESSAGE_WELCOME);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public void exitProgram() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        showToUser(MESSAGE_BYE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public void showAddition(Task task) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        showToUser(MESSAGE_ADDED);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        showToUser(\" \" + task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public void showDeletion(Task task) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        showToUser(MESSAGE_DELETED);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        showToUser(\" \" + task);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public void showTaskList(List\u003cString\u003e taskNames) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        showToUser(MESSAGE_SHOW_TASK_LIST);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        for (String taskName : taskNames) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "            showToUser(taskName);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public void showMarkDone(Task task) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        showToUser(MESSAGE_MARK_DONE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        showToUser(\" \" + task);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public void showTaskSize(TaskList taskList) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        showToUser(String.format(MESSAGE_SHOW_TASK_SIZE, taskList.size()));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    public void showExceptionMessage(String message) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "        showToUser(\"☹ OOPS!!! \" + message);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jun-ha0": 79
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jun-ha0": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "javac  -cp ..\\src\\main\\java\\ -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jun-ha0"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "jun-ha0": 21
    }
  }
]
