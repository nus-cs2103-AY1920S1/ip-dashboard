[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    //Deadlines can have (notes)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String notesInBrackets;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Deadline() {}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Deadline(String descr, boolean completed, int id) throws IncorrectTaskFormatException{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.completed \u003d completed;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.id \u003d id;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.taskType \u003d TaskType.D;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        setupDetails(descr);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private void setupDetails(String input) throws IncorrectTaskFormatException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String[] tmp \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //inputs should only have \u003c\u003d1 \u0027/\u0027 characters"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.description \u003d tmp[0];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (tmp.length \u003c 2) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new IncorrectTaskFormatException(\"by\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Scanner tmp2 \u003d new Scanner(tmp[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String term \u003d tmp2.next();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String date \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (tmp2.hasNext()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            date \u003d tmp2.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        tmp2.close();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (date.equals(\"\"))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new IncorrectTaskFormatException(\"by\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.notesInBrackets \u003d String.format(\"%s:%s\", term, date);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.description \u003d String.format(\"%s(%s)\", this.description, this.notesInBrackets);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static Deadline create(String descr) throws EmptyDescriptionException, IncorrectTaskFormatException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (descr.equals(\"\"))"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new EmptyDescriptionException(\"a deadline\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task.totalNumOfTasks++;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Deadline newTask \u003d new Deadline(descr, false, Task.totalNumOfTasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task.taskList.add(newTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 49
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private static String divider \u003d \"    \" + \"-\".repeat(61);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private static void listData() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String[] taskStrings \u003d new String[Task.totalNumOfTasks + 1];"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        taskStrings[0] \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        int listIndex \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        for (Task t : Task.taskList) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            listIndex++;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //int id \u003d t.getId();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //ASSUMPTION: ok fine need to at least print new id, if i dont wanna change the init id"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            taskStrings[listIndex] \u003d String.format(\"%d.%s\", listIndex, t.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        dukeRespond(taskStrings);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private static void addData(String input) throws InvalidKeywordException,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            EmptyDescriptionException, IncorrectTaskFormatException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (input.equals(\"\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            dukeRespond(\"Did you want to say something? Cus you didn\u0027t type anything haha\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //get task keyword"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Scanner tmp \u003d new Scanner(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String kw \u003d tmp.next();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String descr \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (tmp.hasNext()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            descr \u003d tmp.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        tmp.close();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        switch (kw.toLowerCase()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                newTask \u003d Deadline.create(descr);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                newTask \u003d Event.create(descr);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                newTask \u003d Todo.create(descr);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                //dukeRespond(\"Accidentally pressed enter?\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                //        \"nvm you can continue with your next cmd! :D\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                //return;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                throw new InvalidKeywordException(\"\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        dukeRespond(\"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                \"  \" + newTask.toString(),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                String.format(\"Now you have %d tasks in the list\", Task.totalNumOfTasks));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private static void markDone(String cmd) throws InvalidIDException, NoIDGivenException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String[] tmp \u003d cmd.split(\" \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (tmp.length \u003c 2)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new NoIDGivenException(\"done\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        int id;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            id \u003d Integer.parseInt(tmp[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new InvalidIDException(tmp[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (id \u003e Task.totalNumOfTasks || id \u003c 1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new InvalidIDException(\"\"+id);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task task \u003d Task.taskList.get(id - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        task.setCompleted();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        dukeRespond(\"Nice! I\u0027ve marked this task as done:\","
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                \"  \" + task.toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private static void deleteTask(String cmd) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String[] tmp \u003d cmd.split(\" \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (tmp.length \u003c 2)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new NoIDGivenException(\"delete\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        int id;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            id \u003d Integer.parseInt(tmp[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new InvalidIDException(tmp[1]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (id \u003e Task.totalNumOfTasks || id \u003c 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new InvalidIDException(\"\"+id);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task task \u003d Task.taskList.remove(id - 1);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task.totalNumOfTasks--;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        dukeRespond(\"Noted. I\u0027ve removed this task:\","
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                \"  \" + task.toString(),"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                String.format(\"Now you have %d tasks in the list.\", Task.totalNumOfTasks));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static void dukeRespond(String... inputs) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        System.out.println(divider);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        for (String str : inputs) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            System.out.println(\"     \" + str);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        System.out.println(divider);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        dukeRespond(\"Hello! I\u0027m Duke\", \"What can I do for you?\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //start listening for user input"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String userCmd \u003d sc.nextLine();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        while (!userCmd.equalsIgnoreCase(\"bye\") \u0026\u0026"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            !userCmd.equalsIgnoreCase(\"exit\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                //if (userCmd.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                //    listData();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                //} else{"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                    switch (userCmd.split(\" \")[0].toLowerCase()) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                        case \"list\":"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                            listData();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                        case \"done\":"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                            markDone(userCmd);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                        case \"delete\":"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                            deleteTask(userCmd);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                            addData(userCmd);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                //}"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                dukeRespond(e.toString());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            userCmd \u003d sc.nextLine();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        dukeRespond(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //clear resources"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 148,
      "-": 10
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class EmptyDescriptionException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public EmptyDescriptionException(String msg) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.type \u003d msg;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return String.format(\"\\u2639 OOPS!!! The description of %s cannot be empty.\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                this.type);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    //Deadlines can have (notes)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String notesInBrackets;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Event() {}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Event(String descr, boolean completed, int id) throws IncorrectTaskFormatException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.completed \u003d completed;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.id \u003d id;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.taskType \u003d TaskType.E;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        setupDetails(descr);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private void setupDetails(String input) throws IncorrectTaskFormatException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String[] tmp \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //inputs should only have \u003c\u003d1 \u0027/\u0027 characters"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (tmp.length \u003c 2)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new IncorrectTaskFormatException(\"at\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.description \u003d tmp[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Scanner tmp2 \u003d new Scanner(tmp[1]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String term \u003d tmp2.next();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String datetime \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (tmp2.hasNext())"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            datetime \u003d tmp2.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        tmp2.close();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (datetime.equals(\"\"))"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new IncorrectTaskFormatException(\"at\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.notesInBrackets \u003d String.format(\"%s:%s\", term, datetime);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.description \u003d String.format(\"%s(%s)\", this.description, this.notesInBrackets);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static Event create(String descr) throws EmptyDescriptionException, IncorrectTaskFormatException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (descr.equals(\"\"))"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new EmptyDescriptionException(\"an event\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task.totalNumOfTasks++;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Event newTask \u003d new Event(descr, false, Task.totalNumOfTasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task.taskList.add(newTask);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 47
    }
  },
  {
    "path": "src/main/java/IncorrectTaskFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class IncorrectTaskFormatException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String keyword2;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public IncorrectTaskFormatException(String msg) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.keyword2 \u003d msg;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return String.format(\"\\u2639 Aish try again with the correct format: \u003cdescr\u003e /%s \u003cdateinfo\u003e\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                this.keyword2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 13
    }
  },
  {
    "path": "src/main/java/InvalidIDException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class InvalidIDException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String id;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public InvalidIDException(String msg) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.id \u003d msg;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return String.format(\"\\u2639 AIGOO!! %s is an invalid ID!\", this.id);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 12
    }
  },
  {
    "path": "src/main/java/InvalidKeywordException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class InvalidKeywordException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public InvalidKeywordException(String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return \"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 10
    }
  },
  {
    "path": "src/main/java/NoIDGivenException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class NoIDGivenException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String cmd;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public NoIDGivenException(String msg) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.cmd \u003d msg;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return String.format(\"Please give a ID with your %s command\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                this.cmd);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static String tick \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static String cross \u003d \"\\u2717\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static int totalNumOfTasks \u003d 0;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    protected boolean completed;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    protected int id;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    protected TaskType taskType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    //constructors"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Task() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.description \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.completed \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.id \u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.taskType \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Task(String description, boolean completed, int id) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.completed \u003d completed;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    //methods"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static Optional\u003cTask\u003e createTask(String description, boolean completed) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            return Optional.empty();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            totalNumOfTasks++;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            Task newTask \u003d new Task(description, false, totalNumOfTasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            return Optional.of(newTask);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    //getter mtds"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public int getId() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return this.id;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public boolean isCompleted() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return this.completed;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    //setter mtds"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void setCompleted() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.completed \u003d true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String checked;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (this.completed) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            checked \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            checked \u003d \"\\u2717\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return String.format(\"[%s][%s]%s\", this.taskType, checked, this.description);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 70
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    T, D, E;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 3
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Todo() {}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Todo(String descr, boolean completed, int id) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.description \u003d descr;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.completed \u003d completed;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.id \u003d id;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.taskType \u003d TaskType.T;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static Todo create(String descr) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (descr.equals(\"\"))"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new EmptyDescriptionException(\"a todo\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task.totalNumOfTasks++;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Todo newTask \u003d new Todo(descr, false, Task.totalNumOfTasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task.taskList.add(newTask);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 20
    }
  }
]
