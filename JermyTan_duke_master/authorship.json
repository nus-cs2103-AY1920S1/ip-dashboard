[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    id \"com.github.johnrengelman.shadow\" version \"5.1.0\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    id \"org.openjfx.javafxplugin\" version \"0.0.7\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    archiveBaseName \u003d \"jermi\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    archiveVersion \u003d \"2.0\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "group \u0027jermi\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    modules \u003d [\"javafx.controls\", \"javafx.fxml\"]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 14,
      "JermyTan": 33
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.DIALOG_BOX_FXML_PATH;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Dialog to be displayed. */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Image to be displayed. */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Private constructor for class."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Contains the dialog and image to be displayed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param text Dialog to be displayed."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param image Image to be displayed."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private DialogBox(String text, Image image) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(DIALOG_BOX_FXML_PATH));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.dialog.setText(text);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.displayPicture.setImage(image);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Flips the dialog box such that the displayed image is on the left and text on the right."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns a {@link DialogBox} containing the user\u0027s image and the dialog to be displayed."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param text Dialog to be displayed."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param image User\u0027s image to be displayed."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Dialog box containing the user\u0027s image and the dialog to be displayed."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image image) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return new DialogBox(text, image);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns a {@link DialogBox} containing Jermi\u0027s image and the dialog to be displayed."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param text Dialog to be displayed."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param image Jermi\u0027s image to be displayed."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Dialog box containing Jermi\u0027s image and the dialog to be displayed."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static DialogBox getJermiDialog(String text, Image image) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        DialogBox dialogBox \u003d new DialogBox(text, image);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        dialogBox.flip();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return dialogBox;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 84
    }
  },
  {
    "path": "src/main/java/Gui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.MAIN_WINDOW_FXML_PATH;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Jermi;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class Gui extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Starts the Jermi application."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param stage Stage."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Gui.class.getResource(MAIN_WINDOW_FXML_PATH));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setup(new Jermi());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 34
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        Application.launch(Gui.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 10
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.DATA_PATH;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.JERMI_IMAGE_PATH;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.SHOULD_EXIT_INDEX;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.USER_IMAGE_PATH;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Jermi;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Scroll pane. */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Dialog container. */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** User input. */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Send button. */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Jermi. */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private Jermi jermi;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Indicator for if the program should close. */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private boolean[] shouldExit \u003d {false};"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Display image of user. */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(USER_IMAGE_PATH));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Display image of Jermi. */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private Image jermiImage \u003d new Image(this.getClass().getResourceAsStream(JERMI_IMAGE_PATH));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Allows the scroll pane to scroll down automatically when the dialog container stretches beyond"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * the confines of the scroll pane."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.scrollPane.vvalueProperty().bind(this.dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Stores {@link Jermi} reference, initialises the storage and displays the welcome message."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param jermi Jermi reference."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void setup(Jermi jermi) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.jermi \u003d jermi;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                DialogBox.getJermiDialog(this.jermi.initialiseStorage(DATA_PATH), this.jermiImage));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Jermi\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Closes application if exit command is given."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        String input \u003d this.userInput.getText();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        String response \u003d this.jermi.getResponse(input, this.shouldExit);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                DialogBox.getUserDialog(input, this.userImage),"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                DialogBox.getJermiDialog(response, this.jermiImage)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        if (this.shouldExit[SHOULD_EXIT_INDEX]) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 80
    }
  },
  {
    "path": "src/main/java/jermi/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_ADD_ACTIVITY_DATE_TIME_DELIMITER;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_ADD_ACTIVITY_DATE_TIME_SPLIT_LIMIT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_ADD_ACTIVITY_INDEX;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_ADD_MESSAGE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_ADD_DATE_TIME_INDEX;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_NUMBER_OF_TASKS;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_PLURAL_NOUN;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_ADD_PREPOSITION_DATE_TIME_DELIMITER;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_ADD_PREPOSITION_DATE_TIME_INDEX;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_ADD_PREPOSITION_DATE_TIME_SPLIT_LIMIT;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_SINGULAR_NOUN;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_TASK_FORMAT;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Formatter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.TaskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.task.Deadline;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.task.Event;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.task.Task;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.task.ToDo;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.misc.TaskType;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A representation of the command for adding a task to the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Task type of the task to be added. */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private TaskType taskType;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Description of the task to be added. */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param taskType Task type of the task to be added."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param description Description of the task to be added."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public AddCommand(TaskType taskType, String description) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Creates the task according to the task type and the description of the task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Created task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private Task createTask() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        switch (this.taskType) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case TO_DO:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            task \u003d new ToDo(this.description);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            String[] activityAndDateTime \u003d this.description.split(COMMAND_ADD_ACTIVITY_DATE_TIME_DELIMITER,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    COMMAND_ADD_ACTIVITY_DATE_TIME_SPLIT_LIMIT);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            String activity \u003d activityAndDateTime[COMMAND_ADD_ACTIVITY_INDEX].trim();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            String dateTime \u003d activityAndDateTime[COMMAND_ADD_PREPOSITION_DATE_TIME_INDEX]"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    .split(COMMAND_ADD_PREPOSITION_DATE_TIME_DELIMITER,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                            COMMAND_ADD_PREPOSITION_DATE_TIME_SPLIT_LIMIT)[COMMAND_ADD_DATE_TIME_INDEX];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            switch (this.taskType) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                task \u003d new Deadline(activity, dateTime);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                task \u003d new Event(activity, dateTime);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                assert task !\u003d null : \"task cannot be null\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            assert task !\u003d null : \"task cannot be null\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param formatter Formatter."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param storage Storage."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Output response."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException JermiException."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String execute(TaskList taskList, Formatter formatter, Storage storage) throws JermiException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        Task task \u003d this.createTask();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        int numOfTasks \u003d taskList.getSize();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        storage.taskListToFile();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assert numOfTasks \u003e\u003d 0 : \"numOfTasks should be \u003e\u003d 0\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return formatter.echo(COMMAND_ADD_MESSAGE,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                String.format(COMMAND_TASK_FORMAT, task), String.format(COMMAND_NUMBER_OF_TASKS, numOfTasks,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                        numOfTasks \u003d\u003d 1 ? COMMAND_SINGULAR_NOUN : COMMAND_PLURAL_NOUN));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Indicates if the program should exit."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return {@code false}."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public boolean shouldExit() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        if (this \u003d\u003d obj) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } else if (!(obj instanceof AddCommand)) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            AddCommand other \u003d (AddCommand) obj;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            return this.taskType \u003d\u003d other.taskType \u0026\u0026 this.description.equals(other.description);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return Objects.hash(this.taskType, this.description);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 133
    }
  },
  {
    "path": "src/main/java/jermi/command/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_CLEAR_MESSAGE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.PARSER_CLEAR;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Formatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A representation of the command for deleting all the tasks from the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param formatter Formatter."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param storage Storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Output response."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException JermiException."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String execute(TaskList taskList, Formatter formatter, Storage storage) throws JermiException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        taskList.clear();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        storage.taskListToFile();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return formatter.echo(COMMAND_CLEAR_MESSAGE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Indicates if the program should exit."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return {@code false}."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public boolean shouldExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return obj instanceof ClearCommand;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return Objects.hashCode(PARSER_CLEAR);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 52
    }
  },
  {
    "path": "src/main/java/jermi/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Formatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * Base class for command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param formatter Formatter."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param storage Storage."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Output response."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException JermiException."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public abstract String execute(TaskList taskList, Formatter formatter, Storage storage) throws JermiException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Indicates if the program should exit."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return {@code true} if should exit, else {@code false}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public abstract boolean shouldExit();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 29
    }
  },
  {
    "path": "src/main/java/jermi/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_DELETE_MESSAGE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_NUMBER_OF_TASKS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_PLURAL_NOUN;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_SINGULAR_NOUN;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_TASK_FORMAT;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Formatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A representation of the command for deleting a task from the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class DeleteCommand extends MutateTaskCommand {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param index Index of the task to be deleted."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException {@link InvalidIndexException}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public DeleteCommand(String index) throws JermiException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param formatter Formatter."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param storage Storage."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Output response."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException JermiException."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String execute(TaskList taskList, Formatter formatter, Storage storage) throws JermiException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        final Task task \u003d taskList.getTask(this.index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        taskList.remove(this.index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        int numOfTasks \u003d taskList.getSize();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        storage.taskListToFile();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assert numOfTasks \u003e\u003d 0 : \"numOfTasks should be \u003e\u003d 0\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return formatter.echo(COMMAND_DELETE_MESSAGE,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                String.format(COMMAND_TASK_FORMAT, task),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                String.format(COMMAND_NUMBER_OF_TASKS, numOfTasks,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                        numOfTasks \u003d\u003d 1 ? COMMAND_SINGULAR_NOUN : COMMAND_PLURAL_NOUN));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        if (this \u003d\u003d obj) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } else if (!(obj instanceof DeleteCommand)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            DeleteCommand other \u003d (DeleteCommand) obj;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            return this.index \u003d\u003d other.index;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return Objects.hash(this.index);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 70
    }
  },
  {
    "path": "src/main/java/jermi/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_DONE_MESSAGE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_TASK_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Formatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A representation of the command for marking a task as completed in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class DoneCommand extends MutateTaskCommand {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param index Index of the task to be marked as done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException {@link InvalidIndexException}."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public DoneCommand(String index) throws JermiException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param formatter Formatter."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param storage Storage."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Output response."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException JermiException."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String execute(TaskList taskList, Formatter formatter, Storage storage) throws JermiException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        Task task \u003d taskList.getTask(this.index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        storage.taskListToFile();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return formatter.echo(COMMAND_DONE_MESSAGE, String.format(COMMAND_TASK_FORMAT, task));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        if (this \u003d\u003d obj) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } else if (!(obj instanceof DoneCommand)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            DoneCommand other \u003d (DoneCommand) obj;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            return this.index \u003d\u003d other.index;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return Objects.hash(this.index);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 62
    }
  },
  {
    "path": "src/main/java/jermi/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.PARSER_EXIT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Formatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A representation of the command to exit the program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param formatter Formatter."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param storage Storage."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Output response."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException JermiException."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String execute(TaskList taskList, Formatter formatter, Storage storage) throws JermiException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return formatter.exit();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Indicates if the program should exit."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return {@code true}."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public boolean shouldExit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return obj instanceof ExitCommand;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return Objects.hashCode(PARSER_EXIT);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 56
    }
  },
  {
    "path": "src/main/java/jermi/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_FIND_KEYWORDS_DELIMITER;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_FIND_MESSAGE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_TASK_FORMAT_WITH_INDEX;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.DUMMY_ARRAY_SIZE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.INSERT_MESSAGE_INDEX;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.TASK_LIST_START_INDEX;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Formatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A representation of the command for finding the tasks containing the keyword."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Keyword used for finding. */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private String[] keywords;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param keywords Keywords used for finding."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public FindCommand(String keywords) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.keywords \u003d keywords.split(COMMAND_FIND_KEYWORDS_DELIMITER);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param formatter Formatter."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param storage Storage."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Output response."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException JermiException."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String execute(TaskList taskList, Formatter formatter, Storage storage) throws JermiException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        List\u003cString\u003e tasksInString \u003d taskList.find(this.keywords);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        List\u003cString\u003e formattedTasksInString \u003d IntStream.rangeClosed(TASK_LIST_START_INDEX, tasksInString.size())"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                .mapToObj(index -\u003e String.format(COMMAND_TASK_FORMAT_WITH_INDEX,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                        index, tasksInString.get(index - TASK_LIST_START_INDEX)))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        formattedTasksInString.add(INSERT_MESSAGE_INDEX, COMMAND_FIND_MESSAGE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return formatter.echo(formattedTasksInString.toArray(new String[DUMMY_ARRAY_SIZE]));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Indicates if the program should exit."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return {@code false}."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public boolean shouldExit() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        if (this \u003d\u003d obj) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } else if (!(obj instanceof FindCommand)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            FindCommand other \u003d (FindCommand) obj;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            return Arrays.equals(this.keywords, other.keywords);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return Objects.hash(this.keywords);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 85
    }
  },
  {
    "path": "src/main/java/jermi/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_LIST_MESSAGE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.COMMAND_TASK_FORMAT_WITH_INDEX;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.DUMMY_ARRAY_SIZE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.INSERT_MESSAGE_INDEX;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.PARSER_LIST;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.TASK_LIST_START_INDEX;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Formatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A representation of the command to list all tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param formatter Formatter."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param storage Storage."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Output response."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException JermiException."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String execute(TaskList taskList, Formatter formatter, Storage storage) throws JermiException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        List\u003cString\u003e formattedTasksInString \u003d IntStream.rangeClosed(TASK_LIST_START_INDEX, taskList.getSize())"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                .mapToObj(index -\u003e String.format(COMMAND_TASK_FORMAT_WITH_INDEX, index, taskList.getTask(index)))"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        formattedTasksInString.add(INSERT_MESSAGE_INDEX, COMMAND_LIST_MESSAGE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return formatter.echo(formattedTasksInString.toArray(new String[DUMMY_ARRAY_SIZE]));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Indicates if the program should exit."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return {@code false}."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public boolean shouldExit() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return obj instanceof ListCommand;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return Objects.hashCode(PARSER_LIST);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 69
    }
  },
  {
    "path": "src/main/java/jermi/command/MutateTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A representation of the command that mutates the state of the task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "abstract class MutateTaskCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Index of the task to be mutated. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param index Index of the task to be mutated."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException {@link InvalidIndexException}."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    MutateTaskCommand(String index) throws JermiException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            this.index \u003d Integer.parseInt(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Indicates if the program should exit."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return {@code false}."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public boolean shouldExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 38
    }
  },
  {
    "path": "src/main/java/jermi/component/ExceptionHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A class that deals with handling exceptions."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class ExceptionHandler {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Formatter. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    Formatter formatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param formatter Formatter."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public ExceptionHandler(Formatter formatter) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.formatter \u003d formatter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Handles checked exceptions."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param e JermiException."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Error message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String handleCheckedExceptions(JermiException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return this.formatter.echo(e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Handles unchecked exceptions."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param e Exception."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Error message."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String handleUncheckedExceptions(Exception e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return e.toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 39
    }
  },
  {
    "path": "src/main/java/jermi/component/Formatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.FORMATTER_BORDER;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.FORMATTER_COMMAND_DETAILS_DELIMITER;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.FORMATTER_COMMAND_DETAILS_SPLIT_LIMIT;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.FORMATTER_COMMAND_INDEX;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.FORMATTER_DEFAULT_DETAILS;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.FORMATTER_DETAILS_INDEX;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.FORMATTER_EXIT_MESSAGE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.FORMATTER_MESSAGE_FORMAT;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.FORMATTER_WELCOME_MESSAGE_LINE_1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.FORMATTER_WELCOME_MESSAGE_LINE_2;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A class that deals with formatting I/O strings."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class Formatter {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Formats a message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param message Message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Formatted message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private String formatMessage(String message) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return String.format(FORMATTER_MESSAGE_FORMAT, message);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns formatted messages."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Takes in an arbitrary number of messages to be formatted."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param messages Message."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Formatted messages."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String echo(String... messages) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        StringBuilder toEcho \u003d new StringBuilder(FORMATTER_BORDER);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        for (String message : messages) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            toEcho.append(this.formatMessage(message));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        toEcho.append(FORMATTER_BORDER);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        System.out.println(toEcho);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return toEcho.toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns welcome message."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Welcome message."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return this.echo(FORMATTER_WELCOME_MESSAGE_LINE_1, FORMATTER_WELCOME_MESSAGE_LINE_2);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns exit message."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Exit message."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String exit() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return this.echo(FORMATTER_EXIT_MESSAGE);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Reads the entire user input and returns the input command."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Input command."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String readCommand(String input) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return input.split(FORMATTER_COMMAND_DETAILS_DELIMITER,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                FORMATTER_COMMAND_DETAILS_SPLIT_LIMIT)[FORMATTER_COMMAND_INDEX];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Reads the entire user input and returns the input details."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Input details."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String readDetails(String input) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            return input.split(FORMATTER_COMMAND_DETAILS_DELIMITER,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    FORMATTER_COMMAND_DETAILS_SPLIT_LIMIT)[FORMATTER_DETAILS_INDEX];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            return FORMATTER_DEFAULT_DETAILS;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 89
    }
  },
  {
    "path": "src/main/java/jermi/component/Jermi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.SHOULD_EXIT_INDEX;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * The Jermi program implements an application that keeps track of the user\u0027s tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * @author Jermy"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * @version v2.0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * @since 2019-08-25"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class Jermi {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Formatter object reference. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private Formatter formatter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Parser object reference. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** TaskList object reference. */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Storage object reference. */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** ExceptionHandler object reference. */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private ExceptionHandler exceptionHandler;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Private constructor for class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Initialises {@link Formatter}, {@link Parser}, {@link TaskList} and {@link ExceptionHandler}."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public Jermi() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.formatter \u003d new Formatter();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.exceptionHandler \u003d new ExceptionHandler(this.formatter);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Initialises {@link Storage}."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param pathname Pathname of storage file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Welcome message if Storage has been successfully initialised, else error message."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String initialiseStorage(String pathname) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            this.storage \u003d new Storage(pathname, this.taskList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            return this.formatter.greet();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } catch (JermiException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            return this.exceptionHandler.handleCheckedExceptions(e);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            return this.exceptionHandler.handleUncheckedExceptions(e);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Outputs the response of Jermi."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Response of Jermi."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String getResponse(String input, boolean[] shouldExit) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            String inputCommand \u003d this.formatter.readCommand(input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            String inputDetails \u003d this.formatter.readDetails(input);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            Command command \u003d this.parser.parse(inputCommand, inputDetails);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            shouldExit[SHOULD_EXIT_INDEX] \u003d command.shouldExit();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            return command.execute(this.taskList, this.formatter, this.storage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } catch (JermiException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            return this.exceptionHandler.handleCheckedExceptions(e);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            return this.exceptionHandler.handleUncheckedExceptions(e);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 74
    }
  },
  {
    "path": "src/main/java/jermi/component/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.PARSER_CLEAR;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.PARSER_DEADLINE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.PARSER_DELETE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.PARSER_DONE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.PARSER_EVENT;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.PARSER_EXIT;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.PARSER_FIND;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.PARSER_LIST;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.PARSER_TODO;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.AddCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.ClearCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.Command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.DeleteCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.DoneCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.ExitCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.FindCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.ListCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.misc.TaskType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A class that deals with making sense of the user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Parses and returns the {@link Command} associated with the user input."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param inputCommand User input command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param inputDetails User input details."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Associated command."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException All checked exceptions in the Jermi program."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public Command parse(String inputCommand, String inputDetails) throws JermiException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        Command command \u003d null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        switch (inputCommand) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case PARSER_LIST:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            command \u003d new ListCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case PARSER_EXIT:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            command \u003d new ExitCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case PARSER_CLEAR:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            command \u003d new ClearCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case PARSER_TODO:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case PARSER_DEADLINE:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case PARSER_EVENT:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case PARSER_DONE:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case PARSER_DELETE:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        case PARSER_FIND:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            if (inputDetails.isEmpty()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                throw new EmptyDescriptionException(inputCommand);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            switch (inputCommand) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            case PARSER_TODO:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                command \u003d new AddCommand(TaskType.TO_DO, inputDetails);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            case PARSER_DEADLINE:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                command \u003d new AddCommand(TaskType.DEADLINE, inputDetails);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            case PARSER_EVENT:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                command \u003d new AddCommand(TaskType.EVENT, inputDetails);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            case PARSER_DONE:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                command \u003d new DoneCommand(inputDetails);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            case PARSER_DELETE:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                command \u003d new DeleteCommand(inputDetails);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            case PARSER_FIND:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                command \u003d new FindCommand(inputDetails);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                assert command !\u003d null : \"command cannot be null\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 92
    }
  },
  {
    "path": "src/main/java/jermi/component/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.DEADLINE_TYPE_CODE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.EVENT_TYPE_CODE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.STORAGE_DATE_TIME_INDEX;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.STORAGE_DESCRIPTION_INDEX;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.STORAGE_IS_DONE_INDEX;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.STORAGE_SAVE_FORMAT_DELIMITER;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.STORAGE_TYPE_CODE_INDEX;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.TO_DO_TYPE_CODE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.CorruptedSaveFormatException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.LoadingException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.SavingException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.task.Deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.task.Event;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.task.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.task.ToDo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.misc.TaskType;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A class that deals with loading tasks from the data file and saving tasks in the data file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** File. */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Task list. */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Loads tasks from data file upon instantiation."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param pathname Pathname of data file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException {@link LoadingException} or {@link SavingException}."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public Storage(String pathname, TaskList taskList) throws JermiException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.file \u003d new File(pathname);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.fileToTaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Converts a single line of saved data in the file to a {@link Task} object."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param saveFormat A string containing information regarding the task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private Task saveFormatToTask(String saveFormat) throws JermiException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            Task task \u003d null;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            String[] components \u003d saveFormat.split(STORAGE_SAVE_FORMAT_DELIMITER);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            String typeCode \u003d components[STORAGE_TYPE_CODE_INDEX];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            String isDone \u003d components[STORAGE_IS_DONE_INDEX];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            String description \u003d components[STORAGE_DESCRIPTION_INDEX];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            switch (typeCode) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            case TO_DO_TYPE_CODE:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                task \u003d new ToDo(description, isDone);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                String dateTime \u003d components[STORAGE_DATE_TIME_INDEX];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                switch (typeCode) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                case DEADLINE_TYPE_CODE:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    task \u003d new Deadline(description, dateTime, isDone);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                case EVENT_TYPE_CODE:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    task \u003d new Event(description, dateTime, isDone);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    throw new CorruptedSaveFormatException(saveFormat);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            assert task !\u003d null : \"task cannot be null\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            throw new CorruptedSaveFormatException(saveFormat);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Reads saved data in file and adds it to {@link TaskList}."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException {@link LoadingException}."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private void fileToTaskList() throws JermiException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            List\u003cString\u003e lines \u003d Files.readAllLines(this.file.toPath());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            for (String line : lines) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                this.taskList.add(this.saveFormatToTask(line));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            throw new LoadingException(e.getMessage());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Writes tasks in {@link TaskList} to file."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @throws JermiException {@link SavingException}."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void taskListToFile() throws JermiException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            StringBuilder toWrite \u003d new StringBuilder();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            this.taskList.getList().forEach(task -\u003e toWrite.append(task.toSaveFormat() + \"\\n\"));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            Files.writeString(this.file.toPath(), toWrite.toString());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            throw new SavingException(e.getMessage());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 118
    }
  },
  {
    "path": "src/main/java/jermi/component/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.component;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.TASK_LIST_START_INDEX;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A class to represent a list of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** List of tasks. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Uses an {@link ArrayList} to store the tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns the list containing the tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Adds task to the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param task Task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns the number of tasks in the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Number of tasks in the list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns the task of the specified index in the list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param index Index (starting from 1) of task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Task of the specified index."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return this.list.get(index - TASK_LIST_START_INDEX);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Removes the task of the specified index in the list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param index Index (starting from 1) of task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.list.remove(index - TASK_LIST_START_INDEX);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Removes all tasks from the list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.list.clear();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns a list of task descriptions containing one or more of the keywords."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param keywords Keywords used for finding."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return A list of task descriptions containing one or more of the keywords."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public List\u003cString\u003e find(String... keywords) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return this.list"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                .filter(task -\u003e task.contains(keywords))"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                .map(Task::toString)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 91
    }
  },
  {
    "path": "src/main/java/jermi/exception/CorruptedSaveFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.EXCEPTION_CORRUPTED_SAVE_FORMAT_MESSAGE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * An exception associated with corrupted save format."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class CorruptedSaveFormatException extends LoadingException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param saveFormat The specific line in the file that is causing the error."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public CorruptedSaveFormatException(String saveFormat) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super(String.format(EXCEPTION_CORRUPTED_SAVE_FORMAT_MESSAGE, saveFormat));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 17
    }
  },
  {
    "path": "src/main/java/jermi/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.EXCEPTION_EMPTY_DESCRIPTION_MESSAGE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * An exception associated with empty description."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class EmptyDescriptionException extends JermiException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param message The cause of the error."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public EmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super(String.format(EXCEPTION_EMPTY_DESCRIPTION_MESSAGE, message));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 17
    }
  },
  {
    "path": "src/main/java/jermi/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.EXCEPTION_INVALID_COMMAND_MESSAGE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * An exception associated with invalid command given."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class InvalidCommandException extends JermiException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public InvalidCommandException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super(EXCEPTION_INVALID_COMMAND_MESSAGE);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 15
    }
  },
  {
    "path": "src/main/java/jermi/exception/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.EXCEPTION_INVALID_INDEX_MESSAGE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * An exception associated with invalid index given."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class InvalidIndexException extends JermiException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public InvalidIndexException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super(EXCEPTION_INVALID_INDEX_MESSAGE);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 15
    }
  },
  {
    "path": "src/main/java/jermi/exception/JermiException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.EXCEPTION_ERROR_MESSAGE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * Base class for the checked exceptions in the Jermi program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public abstract class JermiException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Constructor for class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    JermiException(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super(String.format(EXCEPTION_ERROR_MESSAGE, message));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 17
    }
  },
  {
    "path": "src/main/java/jermi/exception/LoadingException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.EXCEPTION_LOADING_MESSAGE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * An exception associated with error in reading a data file."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class LoadingException extends JermiException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param message The cause of the error."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public LoadingException(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super(String.format(EXCEPTION_LOADING_MESSAGE, message));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 17
    }
  },
  {
    "path": "src/main/java/jermi/exception/SavingException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.EXCEPTION_SAVING_MESSAGE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * An exception associated with error in writing contents to a data file."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class SavingException extends JermiException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param message The cause of the error."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public SavingException(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super(String.format(EXCEPTION_SAVING_MESSAGE, message));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 17
    }
  },
  {
    "path": "src/main/java/jermi/misc/Constant.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.misc;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * Constants used in the application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class Constant {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String COMMAND_ADD_ACTIVITY_DATE_TIME_DELIMITER \u003d \"/\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String COMMAND_ADD_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String COMMAND_ADD_PREPOSITION_DATE_TIME_DELIMITER \u003d \" \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String COMMAND_CLEAR_MESSAGE \u003d \"Noted. I\u0027ve removed all the tasks in the list.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String COMMAND_DELETE_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String COMMAND_DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String COMMAND_FIND_KEYWORDS_DELIMITER \u003d \" \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String COMMAND_FIND_MESSAGE \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String COMMAND_LIST_MESSAGE \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String COMMAND_NUMBER_OF_TASKS \u003d \"Now you have %d task%s in the list.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String COMMAND_PLURAL_NOUN \u003d \"s\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String COMMAND_SINGULAR_NOUN \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String COMMAND_TASK_FORMAT \u003d \"  %s\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String COMMAND_TASK_FORMAT_WITH_INDEX \u003d \"%d.%s\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String DATA_PATH \u003d \"data/jermi.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String DEADLINE_STRING_REPRESENTATION \u003d \"%s (by: %s)\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String DEADLINE_TYPE_CODE \u003d \"D\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String DIALOG_BOX_FXML_PATH \u003d \"/view/DialogBox.fxml\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String EVENT_STRING_REPRESENTATION \u003d \"%s (at: %s)\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String EVENT_TYPE_CODE \u003d \"E\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String EXCEPTION_CORRUPTED_SAVE_FORMAT_MESSAGE \u003d \"Save format \u0027%s\u0027 is corrupted.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String EXCEPTION_EMPTY_DESCRIPTION_MESSAGE \u003d \"The description of %s cannot be empty.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String EXCEPTION_ERROR_MESSAGE \u003d \"☹ OOPS! %s\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String EXCEPTION_INVALID_COMMAND_MESSAGE \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String EXCEPTION_INVALID_INDEX_MESSAGE \u003d \"The task index is invalid!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String EXCEPTION_LOADING_MESSAGE \u003d \"An error has occurred while loading: %s\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String EXCEPTION_SAVING_MESSAGE \u003d \"An error has occurred while saving: %s\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String FORMATTER_BORDER \u003d \"* * * * * * * * * * * * * * * * * * * * * * * * * * * * *\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String FORMATTER_COMMAND_DETAILS_DELIMITER \u003d \" \";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String FORMATTER_DEFAULT_DETAILS \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String FORMATTER_EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String FORMATTER_MESSAGE_FORMAT \u003d \"  %s\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String FORMATTER_WELCOME_MESSAGE_LINE_1 \u003d \"Hello! I\u0027m Jermi\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String FORMATTER_WELCOME_MESSAGE_LINE_2 \u003d \"What can I do for you?\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String JERMI_IMAGE_PATH \u003d \"/images/Jermi.png\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String MAIN_WINDOW_FXML_PATH \u003d \"/view/MainWindow.fxml\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String PARSER_CLEAR \u003d \"clear\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String PARSER_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String PARSER_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String PARSER_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String PARSER_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String PARSER_EXIT \u003d \"bye\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String PARSER_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String PARSER_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String PARSER_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String STORAGE_SAVE_FORMAT_DELIMITER \u003d \"\\\\|\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String TASK_DONE_ICON \u003d \"✔\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String TASK_DONE_STRING_REPRESENTATION \u003d \"1\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String TASK_INPUT_DATE_TIME_FORMAT \u003d \"d/M/yyyy HHmm\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String TASK_OUTPUT_DATE_TIME_FORMAT \u003d \"d MMMM yyyy, h.mma\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String TASK_SAVE_FORMAT \u003d \"%s|%s|%s\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String TASK_SAVE_FORMAT_DATE_TIME_EXTENSION \u003d \"%s|%s\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String TASK_STRING_REPRESENTATION \u003d \"[%s][%s] %s\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String TASK_UNDONE_ICON \u003d \"✘\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String TASK_UNDONE_STRING_REPRESENTATION \u003d \"0\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String TO_DO_TYPE_CODE \u003d \"T\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final String USER_IMAGE_PATH \u003d \"/images/User.png\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final int COMMAND_ADD_ACTIVITY_DATE_TIME_SPLIT_LIMIT \u003d 2;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final int COMMAND_ADD_ACTIVITY_INDEX \u003d 0;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final int COMMAND_ADD_DATE_TIME_INDEX \u003d 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final int COMMAND_ADD_PREPOSITION_DATE_TIME_INDEX \u003d 1;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final int COMMAND_ADD_PREPOSITION_DATE_TIME_SPLIT_LIMIT \u003d 2;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final int DUMMY_ARRAY_SIZE \u003d 0;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final int FORMATTER_COMMAND_DETAILS_SPLIT_LIMIT \u003d 2;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final int FORMATTER_COMMAND_INDEX \u003d 0;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final int FORMATTER_DETAILS_INDEX \u003d 1;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final int INSERT_MESSAGE_INDEX \u003d 0;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final int SHOULD_EXIT_INDEX \u003d 0;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final int STORAGE_DATE_TIME_INDEX \u003d 3;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final int STORAGE_DESCRIPTION_INDEX \u003d 2;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final int STORAGE_IS_DONE_INDEX \u003d 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final int STORAGE_TYPE_CODE_INDEX \u003d 0;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public static final int TASK_LIST_START_INDEX \u003d 1;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 81
    }
  },
  {
    "path": "src/main/java/jermi/misc/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.misc;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * Available types of task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** todo task. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    TO_DO,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** deadline task. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** event task. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    EVENT;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 13
    }
  },
  {
    "path": "src/main/java/jermi/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.DEADLINE_STRING_REPRESENTATION;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.DEADLINE_TYPE_CODE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.TASK_UNDONE_STRING_REPRESENTATION;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.misc.TaskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A representation of the deadline task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class Deadline extends TaskWithDateTime {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Creates an uncompleted deadline task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param deadline Deadline of task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this(description, deadline, TASK_UNDONE_STRING_REPRESENTATION);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Creates a completed/uncompleted deadline task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param deadline Deadline of task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param isDone \"1\" for completed task, else \"0\"."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public Deadline(String description, String deadline, String isDone) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super(description, deadline, isDone);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns task type code, \"D\"."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return \"D\"."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    String getTypeCode() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return DEADLINE_TYPE_CODE;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns a string representation of task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return A string representation of task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return String.format(DEADLINE_STRING_REPRESENTATION, super.toString(), this.getDateTime());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 56
    }
  },
  {
    "path": "src/main/java/jermi/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.EVENT_STRING_REPRESENTATION;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.EVENT_TYPE_CODE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.TASK_UNDONE_STRING_REPRESENTATION;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.misc.TaskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A representation of the event task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class Event extends TaskWithDateTime {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Creates an uncompleted event task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param description Description of event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param dateTime Date and time of event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public Event(String description, String dateTime) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this(description, dateTime, TASK_UNDONE_STRING_REPRESENTATION);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Creates a completed/uncompleted event task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param description Description of event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param dateTime Date and time of event."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param isDone \"1\" for completed event, else \"0\"."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public Event(String description, String dateTime, String isDone) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super(description, dateTime, isDone);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns task type code, \"E\"."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return \"E\"."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    String getTypeCode() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return EVENT_TYPE_CODE;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns a string representation of task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return A string representation of task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return String.format(EVENT_STRING_REPRESENTATION, super.toString(), this.getDateTime());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 55
    }
  },
  {
    "path": "src/main/java/jermi/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.TASK_DONE_ICON;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.TASK_DONE_STRING_REPRESENTATION;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.TASK_SAVE_FORMAT;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.TASK_STRING_REPRESENTATION;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.TASK_UNDONE_ICON;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.TASK_UNDONE_STRING_REPRESENTATION;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * Base class for task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Description of the task. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** State of the task: true if completed, else false. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Constructor for class. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    Task(String description, String isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.isDone \u003d isDone.equals(TASK_DONE_STRING_REPRESENTATION);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns a status icon."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Tick if task is completed, else cross."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return this.isDone ? TASK_DONE_ICON : TASK_UNDONE_ICON;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Sets status of task to completed."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns a task type code."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return \"T\", \"D\" or \"E\" depending on task type."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    abstract String getTypeCode();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns a string representation of task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return A string representation of task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return String.format(TASK_STRING_REPRESENTATION, this.getTypeCode(), this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Converts the task into a string in save format."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return A string in save format."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return String.format(TASK_SAVE_FORMAT, this.getTypeCode(),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                this.isDone ? TASK_DONE_STRING_REPRESENTATION : TASK_UNDONE_STRING_REPRESENTATION, this.description);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Checks if the task contains one or more of the keywords."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param keywords Keywords."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return {@code true} if task contains one or more of the keywords, else {@code false}."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public boolean contains(String... keywords) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        for (String keyword : keywords) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            if (this.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 82
    }
  },
  {
    "path": "src/main/java/jermi/task/TaskWithDateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.TASK_INPUT_DATE_TIME_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.TASK_OUTPUT_DATE_TIME_FORMAT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.TASK_SAVE_FORMAT_DATE_TIME_EXTENSION;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A representation of task with date and time."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "abstract class TaskWithDateTime extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /** Date and time. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Constructor for class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param dateTime Date and time of task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param isDone \"1\" for completed task, else \"0\"."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    TaskWithDateTime(String description, String dateTime, String isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            this.dateTime \u003d this.parseStringFormatDateTime(dateTime);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Converts date and time in string format to LocalDateTime format."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param string Date and time in string format."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Date and time in LocalDateTime format."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private LocalDateTime stringToDateTime(String string) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return LocalDateTime.parse(string, DateTimeFormatter.ofPattern(TASK_INPUT_DATE_TIME_FORMAT));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Converts date and time in LocalDateTime format to string format."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param dateTime Date and time in LocalDateTime format."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Date and time in string format."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private String dateTimeToString(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return dateTime.format(DateTimeFormatter.ofPattern(TASK_OUTPUT_DATE_TIME_FORMAT));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Parses input user\u0027s data and time format."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param stringFormatDateTime Input user\u0027s date and time format."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Parsed date and time format."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private String parseStringFormatDateTime(String stringFormatDateTime) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return this.dateTimeToString(this.stringToDateTime(stringFormatDateTime));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns the date and time of the task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return Date and time."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    String getDateTime() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Converts the task into a string in save format."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return A string in save format."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return String.format(TASK_SAVE_FORMAT_DATE_TIME_EXTENSION, super.toSaveFormat(), this.dateTime);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 82
    }
  },
  {
    "path": "src/main/java/jermi/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "package jermi.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.TASK_UNDONE_STRING_REPRESENTATION;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.TO_DO_TYPE_CODE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.misc.TaskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " * A representation of the todo task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Creates an uncompleted todo task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param description Description of todo."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        this(description, TASK_UNDONE_STRING_REPRESENTATION);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Public constructor for class."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Creates a completed/uncompleted todo task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param description Description of todo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @param isDone \"1\" for completed task, else \"0\"."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public ToDo(String description, String isDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * Returns task type code, \"T\"."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * @return \"T\"."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    String getTypeCode() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        return TO_DO_TYPE_CODE;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 42
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 19
    }
  },
  {
    "path": "src/test/java/FormatterTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.FORMATTER_BORDER;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Formatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class FormatterTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private static final Formatter FORMATTER \u003d new Formatter();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void greet_welcomeMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        String expected \u003d FORMATTER_BORDER"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                + \"  Hello! I\u0027m Jermi\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                + \"  What can I do for you?\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                + FORMATTER_BORDER;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expected,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                FORMATTER.greet());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void exit_exitMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        String expected \u003d FORMATTER_BORDER"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                + \"  Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                + FORMATTER_BORDER;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expected,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                FORMATTER.exit());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void echo_noString_onlyBorders() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        String expected \u003d FORMATTER_BORDER + FORMATTER_BORDER;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expected, FORMATTER.echo());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void echo_singleEmptyString_singleBlankLineBetweenBorders() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        String expected \u003d FORMATTER_BORDER + \"  \\n\" + FORMATTER_BORDER;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expected, FORMATTER.echo(\"\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void echo_multipleEmptyStrings_multipleBlankLinesBetweenBorders() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        String expected \u003d FORMATTER_BORDER"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                + \"  \\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                + \"  \\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                + \"  \\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                + \"  \\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                + \"  \\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                + FORMATTER_BORDER;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expected, FORMATTER.echo(\"\", \"\", \"\", \"\", \"\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void echo_singleNonEmptyString_singleNonEmptyStringBetweenBorders() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        String expected \u003d FORMATTER_BORDER + \"  Test string\\n\" + FORMATTER_BORDER;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expected, FORMATTER.echo(\"Test string\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void echo_multipleNonEmptyStrings_multipleNonEmptyStringsBetweenBorders() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        String[] testStrings \u003d {\"Test string 1\","
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"Test string 2\","
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"Test string 3\","
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"Test string 4\"};"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        String expected \u003d FORMATTER_BORDER"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                + \"  \" + testStrings[0] + \"\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                + \"  \" + testStrings[1] + \"\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                + \"  \" + testStrings[2] + \"\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                + \"  \" + testStrings[3] + \"\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                + FORMATTER_BORDER;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expected, FORMATTER.echo(testStrings[0],"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                testStrings[1],"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                testStrings[2],"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                testStrings[3]));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expected, FORMATTER.echo(testStrings));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void readCommand_emptyInput_emptyCommand() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        String expected \u003d \"\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expected, FORMATTER.readCommand(\"\"));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void readCommand_inputCommand_inputCommand() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        String[] inputCommands \u003d {\"list\","
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"todo\","
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"event\","
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"deadline\","
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"delete\","
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"find\","
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"bye\","
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"done\","
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"clear\"};"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(inputCommands[0], FORMATTER.readCommand(inputCommands[0]));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(inputCommands[1], FORMATTER.readCommand(inputCommands[1]));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(inputCommands[2], FORMATTER.readCommand(inputCommands[2]));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(inputCommands[3], FORMATTER.readCommand(inputCommands[3]));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(inputCommands[4], FORMATTER.readCommand(inputCommands[4]));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(inputCommands[5], FORMATTER.readCommand(inputCommands[5]));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(inputCommands[6], FORMATTER.readCommand(inputCommands[6]));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(inputCommands[7], FORMATTER.readCommand(inputCommands[7]));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(inputCommands[8], FORMATTER.readCommand(inputCommands[8]));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void readCommand_userInput_inputCommand() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        String[] userInputs \u003d {\"todo read book\","
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"event meeting /at 28/11/2019\","
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"deadline homework /by 29 Aug\","
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"done 2\","
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"delete 3\","
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"find book meeting\"};"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        String[] expectedOutputs \u003d {\"todo\","
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"event\","
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"deadline\","
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"done\","
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"delete\","
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"find\"};"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expectedOutputs[0], FORMATTER.readCommand(userInputs[0]));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expectedOutputs[1], FORMATTER.readCommand(userInputs[1]));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expectedOutputs[2], FORMATTER.readCommand(userInputs[2]));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expectedOutputs[3], FORMATTER.readCommand(userInputs[3]));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expectedOutputs[4], FORMATTER.readCommand(userInputs[4]));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expectedOutputs[5], FORMATTER.readCommand(userInputs[5]));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void readDetails_emptyInput_emptyDetails() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        String expected \u003d \"\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expected, FORMATTER.readDetails(\"\"));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void readDetails_userInputWithoutDetails_emptyDetails() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        String[] userInputsWithoutDetails \u003d {\"list\","
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"todo\","
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"event\","
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"deadline\","
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"delete\","
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"find\","
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"bye\","
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"done\","
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"clear\"};"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        String[] expectedOutputs \u003d {\"\","
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"\","
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"\","
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"\","
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"\","
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"\","
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"\","
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"\","
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"\"};"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expectedOutputs[0], FORMATTER.readDetails(userInputsWithoutDetails[0]));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expectedOutputs[1], FORMATTER.readDetails(userInputsWithoutDetails[1]));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expectedOutputs[2], FORMATTER.readDetails(userInputsWithoutDetails[2]));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expectedOutputs[3], FORMATTER.readDetails(userInputsWithoutDetails[3]));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expectedOutputs[4], FORMATTER.readDetails(userInputsWithoutDetails[4]));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expectedOutputs[5], FORMATTER.readDetails(userInputsWithoutDetails[5]));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expectedOutputs[6], FORMATTER.readDetails(userInputsWithoutDetails[6]));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expectedOutputs[7], FORMATTER.readDetails(userInputsWithoutDetails[7]));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expectedOutputs[8], FORMATTER.readDetails(userInputsWithoutDetails[8]));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void readDetails_userInput_details() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        String[] userInputs \u003d {\"todo read book\","
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"event meeting /at 28/11/2019\","
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"deadline homework /by 29 Aug\","
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"done 2\","
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"delete 3\","
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"find book meeting\"};"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        String[] expectedOutputs \u003d {\"read book\","
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"meeting /at 28/11/2019\","
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"homework /by 29 Aug\","
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"2\","
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"3\","
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                \"book meeting\"};"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expectedOutputs[0], FORMATTER.readDetails(userInputs[0]));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expectedOutputs[1], FORMATTER.readDetails(userInputs[1]));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expectedOutputs[2], FORMATTER.readDetails(userInputs[2]));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expectedOutputs[3], FORMATTER.readDetails(userInputs[3]));"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expectedOutputs[4], FORMATTER.readDetails(userInputs[4]));"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        assertEquals(expectedOutputs[5], FORMATTER.readDetails(userInputs[5]));"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 200
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.FORMATTER_COMMAND_DETAILS_DELIMITER;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.FORMATTER_COMMAND_DETAILS_SPLIT_LIMIT;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.FORMATTER_COMMAND_INDEX;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.FORMATTER_DEFAULT_DETAILS;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static jermi.misc.Constant.FORMATTER_DETAILS_INDEX;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.AddCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.ClearCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.Command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.DeleteCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.DoneCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.ExitCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.FindCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.command.ListCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.component.Parser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.exception.JermiException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "import jermi.misc.TaskType;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private static Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    public void parse_validInput_correctCommand() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            String[] userInputs \u003d {\"todo read book\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    \"event meeting /at 28/11/2019\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    \"deadline homework /by 29 Aug\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    \"done 2\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    \"delete 3\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    \"find book meeting\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    \"list\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    \"bye\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    \"clear\"};"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            Command[] expectedCommands \u003d {new AddCommand(TaskType.TO_DO, \"read book\"),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    new AddCommand(TaskType.EVENT, \"meeting /at 28/11/2019\"),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    new AddCommand(TaskType.DEADLINE, \"homework /by 29 Aug\"),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    new DoneCommand(\"2\"),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    new DeleteCommand(\"3\"),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    new FindCommand(\"book meeting\"),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    new ListCommand(),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    new ExitCommand(),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    new ClearCommand()};"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            assertEquals(expectedCommands[0], parser.parse(FormatterStub.readCommand(userInputs[0]),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    FormatterStub.readDetails(userInputs[0])));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            assertEquals(expectedCommands[1], parser.parse(FormatterStub.readCommand(userInputs[1]),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    FormatterStub.readDetails(userInputs[1])));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            assertEquals(expectedCommands[2], parser.parse(FormatterStub.readCommand(userInputs[2]),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    FormatterStub.readDetails(userInputs[2])));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            assertEquals(expectedCommands[3], parser.parse(FormatterStub.readCommand(userInputs[3]),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    FormatterStub.readDetails(userInputs[3])));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            assertEquals(expectedCommands[3], parser.parse(FormatterStub.readCommand(userInputs[3]),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    FormatterStub.readDetails(userInputs[3])));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            assertEquals(expectedCommands[4], parser.parse(FormatterStub.readCommand(userInputs[4]),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    FormatterStub.readDetails(userInputs[4])));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            assertEquals(expectedCommands[5], parser.parse(FormatterStub.readCommand(userInputs[5]),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    FormatterStub.readDetails(userInputs[5])));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            assertEquals(expectedCommands[6], parser.parse(FormatterStub.readCommand(userInputs[6]),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    FormatterStub.readDetails(userInputs[6])));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            assertEquals(expectedCommands[7], parser.parse(FormatterStub.readCommand(userInputs[7]),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    FormatterStub.readDetails(userInputs[7])));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            assertEquals(expectedCommands[8], parser.parse(FormatterStub.readCommand(userInputs[8]),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    FormatterStub.readDetails(userInputs[8])));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        } catch (JermiException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     * A stub class to read user input and return input command and input details."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    private static class FormatterStub {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "         * Reads the entire user input and returns the input command."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "         *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "         * @param input User input."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "         * @return Input command."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "         */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        private static String readCommand(String input) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            return input.split(FORMATTER_COMMAND_DETAILS_DELIMITER,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                    FORMATTER_COMMAND_DETAILS_SPLIT_LIMIT)[FORMATTER_COMMAND_INDEX];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "         * Reads the entire user input and returns the input details."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "         *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "         * @param input User input."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "         * @return Input details."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "         */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        private static String readDetails(String input) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                return input.split(FORMATTER_COMMAND_DETAILS_DELIMITER,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                        FORMATTER_COMMAND_DETAILS_SPLIT_LIMIT)[FORMATTER_DETAILS_INDEX];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "                return FORMATTER_DEFAULT_DETAILS;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 103
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Hello! I\u0027m Jermi"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "       [T][✘] read book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Now you have 1 task in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "       [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "       [E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     1.[T][✘] read book"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     2.[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     3.[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "       [T][✓] read book"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "       [T][✘] join sports club"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "       [T][✓] join sports club"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "       [T][✘] borrow book"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     1.[T][✓] read book"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     2.[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     3.[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     4.[T][✓] join sports club"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     5.[T][✘] borrow book"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "       [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "       [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JermyTan": 77
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 12
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "java -classpath ../bin Jermi \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JermyTan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "JermyTan": 34
    }
  },
  {
    "path": "tutorials/textUiTestingTutorial.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Text UI Testing Tutorial"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JermyTan"
        },
        "content": "1. Create a folder `[project root]\\text-formatter-test`"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "1. Add a `runtest.bat` (if you are on Windows) or `runtest.sh` (if you are on a *nix OS) into the folder, containing the script below.\u003cbr\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  `runtest.bat`:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "   @ECHO OFF"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "   REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "   if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   REM delete output from previous run"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   del ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   REM compile the code into the bin folder"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "       echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "       exit /b 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   REM compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   `runtest.sh`:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   ```shell"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   #!/usr/bin/env bash"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   # create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "       mkdir ../bin"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "   # delete output from previous run"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "   if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "       rm ACTUAL.TXT"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   # compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "   if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "       echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "       exit 1"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "   # run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "   # compare the output to the expected output"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "   diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "   if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "       echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "       exit 0"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   else"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "       echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "       exit 1"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "1. Update the `javac` and `java` commands in the script to match the name/location of your main class."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "1. Add an `EXPECTED.txt` to the same folder, containing the expected output."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "1. Add an `input.txt` containing the input commands."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "1. Run the `.bat`/`.sh` file to execute the test."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: based on se-edu/addressbook-level2, adapted by Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "-": 73,
      "JermyTan": 1
    }
  }
]
