[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 42,
      "-": 15
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "# Assistant Hermione User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "Huge fan of Hermione in Harry Potter? Super disorganised and need an easy platform to keep track of your tasks? Look"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "no further! Assistant Hermione is here to organise your life! Assistant Hermione is a bot that will save the tasks you"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "need to do whenever you type them in. It organises your tasks into 3 formats: todo, deadlines and events."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "With this chatbot, you will never have to worry about forgetting your tasks again!"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "- Allows user to save tasks as todo/deadlines/events."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "- Auto saves and remembers tasks entered."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "- Allows marking tasks as done or deleting tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "- Allows updating task description or time."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "## Commands"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "### Todo"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "Adds a todo task into the task list. A confirmation will be sent if it is successfully added."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "Format: \"todo \u003ctask description\u003e\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "### Deadline"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "Adds a deadline task into the task list. A confirmation will be sent if it is successfully added."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "Format: \"deadline \u003ctask description\u003e /by dd/mm/yyyy hhmm\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "### Event"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "Adds an Event task into the task list. A confirmation will be sent if it is successfully added."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "Format: \"event \u003ctask description\u003e /at dd/mm/yyyy hhmm-hhmm\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "### List"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "Displays the list of tasks that user added previously. Also shows whether tasks are done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "Format: \"list\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "### Done"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "Marks a task as done. 1 indicates a task is done while 0 indicates a task is not done."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "Format: \"done \u003cinteger\u003e\" (integer indicates position of task in the list.)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "### Delete"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "Deletes a task from the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "Format: \"delete \u003cinteger\u003e\" (integer indicates position of task in the list.)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "### Find"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "Returns tasks which contains keyword typed by user."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "Format: \"find \u003ckeyword\u003e\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "### Update"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "Updates task description or date and time of task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "Format 1 (for todo, deadline, event): \"update \u003cinteger\u003e task \u003cnew task description\u003e\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "Format 2 (for deadline, event): \"update \u003cinteger\u003e date \u003cnew date\u003e\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "Format 3 (for deadline, event): \"update \u003cinteger\u003e time \u003cnew time\u003e\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "Format 4 (for event): \"update \u003cinteger\u003e end \u003cnew end time\u003e\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "### Bye"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "Format: \"bye\""
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 60,
      "-": 18
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a Calendar object using values from input string."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param input string of user input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return Calendar object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private Calendar deadlineConvertToCalendar(String input) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String[] findDate \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int day \u003d Integer.parseInt(findDate[0]);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        assert (day \u003e\u003d 1 \u0026\u0026 day \u003c\u003d 31) : \"day should be between 1 and 31\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int month \u003d Integer.parseInt(findDate[1]) - 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        assert (month \u003e\u003d 1 \u0026\u0026 month \u003c\u003d 12) : \"month should be between 1 and 12\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String[] findTime \u003d findDate[2].split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int year \u003d Integer.parseInt(findTime[0]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        assert (year \u003e 0) : \"year should not be negative\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int hour \u003d Integer.parseInt(findTime[1].substring(0, 2));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        assert (hour \u003e 0 \u0026\u0026 hour \u003c\u003d 24) : \"hour should be between 1 and 24\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int minute \u003d Integer.parseInt(findTime[1].substring(2));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        assert (minute \u003e 0 \u0026\u0026 minute \u003c\u003d 59) : \"minute should be between 1 and 59\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        calendar.set(year, month, day, hour, minute);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return calendar;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns an arraylist containing Calendar objects according to input string."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return an arraylist containing 2 Calendar objects representing to and from timings."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private ArrayList\u003cCalendar\u003e eventConvertToCalendar(String input) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        ArrayList\u003cCalendar\u003e calendars \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String[] findTo \u003d input.split(\"-\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        Calendar from \u003d deadlineConvertToCalendar(findTo[0]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        calendars.add(from);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int toHour \u003d Integer.parseInt(findTo[1].substring(0, 2));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int toMin \u003d Integer.parseInt(findTo[1].substring(2));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        Calendar to \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        to.set(Calendar.HOUR_OF_DAY, toHour);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        to.set(Calendar.MINUTE, toMin);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        calendars.add(to);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return calendars;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * handles user\u0027s request to add a task to the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param tasks TaskList of Tasks."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param input String of user input."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param ui Ui object."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return String representing Duke\u0027s reply."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @throws DukeException if user input does not follow input format."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @throws IOException named file exists but is a directory rather than a regular file,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     *     does not exist but cannot be created, or cannot be opened for any other reason."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    String execute(TaskList tasks, String input, Storage storage, Ui ui) throws DukeException, IOException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String[] line \u003d input.split(\" \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        Task task \u003d new Task();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        if (line[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            if (line.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String todoTask \u003d line[1];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            for (int i \u003d 2; i \u003c line.length; i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                todoTask +\u003d \" \" + line[i];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            task \u003d new Todo(todoTask);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (line[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            if (line.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String[] findDeadline \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String[] findTask \u003d findDeadline[0].split(\" \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String[] findDate \u003d input.split(\"by \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            Calendar calendar \u003d deadlineConvertToCalendar(findDate[1]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String deadlineTask \u003d findTask[1];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            for (int i \u003d 2; i \u003c findTask.length; i++) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                deadlineTask +\u003d \" \" + findTask[i];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            task \u003d new Deadline(deadlineTask, calendar);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (line[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            if (line.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String[] findTime \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String[] findDate \u003d input.split(\"at \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            ArrayList\u003cCalendar\u003e calendars \u003d eventConvertToCalendar(findDate[1]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String[] findTask \u003d findTime[0].split(\" \");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String eventTask \u003d findTask[1];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            for (int i \u003d 2; i \u003c findTask.length; i++) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                eventTask +\u003d \" \" + findTask[i];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            task \u003d new Event(eventTask, calendars.get(0), calendars.get(1));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        storage.appendToFile(task.toString());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String add \u003d \"Fine I\u0027ve taken my precious time to add this task:\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        add +\u003d \"\\n\" + task.toString();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        add +\u003d \"\\n\" + \"Now you have \" + tasks.size() + \" tasks in the list, time to start working!\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return add;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a boolean representing if this is an exit command."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 113
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * abstract method to handle user input."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param tasks TaskList of Tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param input String of user input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param ui Ui object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @throws DukeException if user input does not follow input format."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @throws IOException named file exists but is a directory rather than a regular file,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     *     does not exist but cannot be created, or cannot be opened for any other reason."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    abstract String execute(TaskList tasks, String input, Storage storage, Ui ui) throws"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            DukeException, IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * abstract method to determine if command is an exit command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return a boolean."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    abstract boolean isExit();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 22
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    Calendar by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Deadline(String task, Calendar by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a Calendar which represents date and time of deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return Calendar object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Calendar getCalendar() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns string representation of task object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return string."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return \"D\" + super.toString() + \" | \" + by.get(Calendar.DAY_OF_MONTH) + \" \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                + getMonth(by) + \" \" + by.get(Calendar.YEAR) + \" \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                + by.get(Calendar.HOUR_OF_DAY)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                + String.format(\"%02d\", by.get(Calendar.MINUTE));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 31
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * handles user\u0027s request to delete a task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param tasks TaskList of Tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param input String of user input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param ui Ui object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return String representing Duke\u0027s response."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @throws IOException named file exists but is a directory rather than a regular file,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     *     does not exist but cannot be created, or cannot be opened for any other reason."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    String execute(TaskList tasks, String input, Storage storage, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String[] line \u003d input.split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int index \u003d Integer.parseInt(line[1]) - 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        assert (index \u003e\u003d 0) : \"index of task should not be negative\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String delete \u003d \"I hope you are not just gonna pretend this task doesn\u0027t exist:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        delete +\u003d \"\\n\" + tasks.get(index).toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        storage.rewriteFile(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        delete +\u003d \"\\n\" + \"Here\u0027s a reminder of your task in case you regret deleting it.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return delete;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a boolean representing if this command is an exit command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 33
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * make and return new DialogBox object."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param text input by user."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param img profile pic of user."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return DialogBox object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * make and return new DialogBox object."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param text ans from Duke."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param img profile pic of Duke."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return DialogBox object."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 71
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * handles user\u0027s request to mark a task as done."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param tasks TaskList of Tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param input String of user input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param ui Ui object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return String representing Duke\u0027s response."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @throws IOException named file exists but is a directory rather than a regular file,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     *     does not exist but cannot be created, or cannot be opened for any other reason."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    String execute(TaskList tasks, String input, Storage storage, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String[] line \u003d input.split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int index \u003d Integer.parseInt(line[1]) - 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        assert index \u003e\u003d 0 : \"index of task given should not be negative\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        Task done \u003d tasks.get(index);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        done.doTask();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        storage.rewriteFile(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String command \u003d \"Wow you finally accomplished something!: \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        command +\u003d \"\\n\" + done.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a boolean to determine if this command is an exit command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return a boolean."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 33
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            parser \u003d new Parser(input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            Command c \u003d parser.parse();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return c.execute(tasks, input, storage, ui);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"Please don\u0027t waste my time with meaningless words\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"Please don\u0027t waste my time with meaningless words\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * Constructor for Duke with file path as parameter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param filePath String representing file path."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        assert filePath !\u003d null : \"file path cannot be null\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * calls different classes to process user input."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                parser \u003d new Parser(fullCommand);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                Command c \u003d parser.parse();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                c.execute(tasks, fullCommand, storage, ui);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        new Duke(\"/Users/sheryl/CS2103/duke/src/main/java/Duke.txt\").run();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 67,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "D|0|        return book        | 2 December 2019 1800"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "T|0|       attend meeting"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "T|1|       blah"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "E|0|      homework      | 12 March 1999 2300-2359"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "D|0|  2103  | 12 February 2019 2359"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "D|0|  2105 assignment  | 7 March 99 2359"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "E|0|  concert  | 12 March 2000 2300-2359"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "T|0| task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "T|0| concert"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 3
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    Calendar from;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    Calendar to;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * constructor for Event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param task String representing task to do."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param from Calendar representing start time and date."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param to Calendar representing end time and date."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Event(String task, Calendar from, Calendar to) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        this.from \u003d from;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        this.to \u003d to;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns Calendar which represents start date and time."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return Calendar object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Calendar getCalendar() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return this.from;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns Calendar which represents end date and time."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return Calendar object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Calendar getTo() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return this.to;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns string representation of task object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return string."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return \"E\" + super.toString() + \" | \" + from.get(Calendar.DAY_OF_MONTH) + \" \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                + getMonth(from) + \" \" + from.get(Calendar.YEAR) + \" \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                + from.get(Calendar.HOUR_OF_DAY)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                + String.format(\"%02d\", from.get(Calendar.MINUTE)) + \"-\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                + to.get(Calendar.HOUR_OF_DAY)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                + String.format(\"%02d\", to.get(Calendar.MINUTE));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 50
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class ExitCommand  extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * handles user\u0027s request to exit."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param tasks TaskList of Tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param input String of user input."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param ui Ui object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return String representing Duke\u0027s reply."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    String execute(TaskList tasks, String input, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return \"Running away from your tasks so soon?\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a boolean representing if this command is an exit command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return a boolean."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 21
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * handles user\u0027s request to search for tasks based on a keyword."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param tasks TaskList of Tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param input String of user input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param ui Ui object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return String representing Duke\u0027s response."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    String execute(TaskList tasks, String input, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String find \u003d \"I made a list of tasks that match your keyword:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String[] line \u003d input.split(\" \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String keyword \u003d line[1];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        assert (!keyword.equals(\"\")) : \"you shouldn\u0027t be wasting my time by finding nothing\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            Task curr \u003d tasks.get(i);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            if (curr.getTask().contains(keyword)) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                find +\u003d \"\\n\" + curr.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return find;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 31
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * executes user\u0027s request of displaying list."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param tasks TaskList of Tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param input String of user input."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param ui Ui object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return String representing Duke\u0027s response."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    String execute(TaskList tasks, String input, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        if(tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"Your list is empty, are you sure you are that free?\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String list \u003d \"Time to get pressured by the number of tasks in your list\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                Task curr \u003d tasks.get(i);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                int num \u003d i + 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                list +\u003d \"\\n\" + num + \". \" + curr.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a boolean to determine if this command is an exit command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return a boolean."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 31
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private Duke duke \u003d new Duke(\"/Users/sheryl/CS2103/duke/src/main/java/Duke.txt\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 27
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/harrypotter.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/hermione.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        );"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 50
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Parser(String input) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a Command which handles user input."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return a Command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @throws DukeException if user input is incorrect."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Command parse() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String[] line \u003d input.split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        if (line[0].equals(\"todo\") || line[0].equals(\"deadline\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            || line[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return new AddCommand();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (line[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return new DoneCommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (line[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return new DeleteCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (line[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (line[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (line[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return new FindCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (line[0].equals(\"update\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return new UpdateCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 36
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        assert filePath !\u003d null : \"file path should not be null\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns string which represents file path."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public String getFilePath() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * adds string in param to file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param textToAppend string to be added to the file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @throws IOException if named file exists but is a directory rather than a regular file,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     *     does not exist but cannot be created, or cannot be opened for any other reason"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void appendToFile(String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        fw.write(textToAppend + \"\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * rewrites the whole file according to new task list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param list list of tasks to be written into file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @throws IOException named file exists but is a directory rather than a regular file,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     *     does not exist but cannot be created, or cannot be opened for any other reason."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void rewriteFile(TaskList list) throws IOException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String text \u003d list.get(i).toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            fw.write(text + \"\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns an integer representing the month according to the calendar."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param month string representing month."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return integer corresponding to month string."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public int convertToInt(String month) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        if (month.equals(\"January\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (month.equals(\"February\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (month.equals(\"March\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return 2;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (month.equals(\"April\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return 3;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (month.equals(\"May\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return 4;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (month.equals(\"June\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return 5;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (month.equals(\"July\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return 6;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (month.equals(\"August\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return 7;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (month.equals(\"September\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return 8;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (month.equals(\"October\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return 9;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (month.equals(\"November\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return 10;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return 11;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a new Calendar object according to data from input string."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param input representing user input."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return Calendar object."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Calendar deadlineConvertToCalendar(String input) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String[] findDate \u003d input.split(\" \");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int day \u003d Integer.parseInt(findDate[0]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int month \u003d convertToInt(findDate[1]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int year \u003d Integer.parseInt(findDate[2]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int hour \u003d Integer.parseInt(findDate[3].substring(0, 2));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int min \u003d Integer.parseInt(findDate[3].substring(2));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        calendar.set(year, month, day, hour, min);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return calendar;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a new ArrayList of Calendar objects."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return Arraylist with 2 Calendar objects inside."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public ArrayList eventConvertToCalendar(String input) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        ArrayList\u003cCalendar\u003e calendars \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String[] findTo \u003d input.split(\"-\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        Calendar from \u003d deadlineConvertToCalendar(findTo[0]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        calendars.add(from);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int toHour \u003d Integer.parseInt(findTo[1].substring(0, 2));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int toMin \u003d Integer.parseInt(findTo[1].substring(2));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        Calendar to \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        to.set(Calendar.HOUR_OF_DAY, toHour);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        to.set(Calendar.MINUTE, toMin);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        calendars.add(to);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return calendars;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a TaskList to add tasks according to content of file."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return TaskList object containing tasks from file."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @throws FileNotFoundException if file cannot be found."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public TaskList load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        TaskList inputs \u003d new TaskList();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        filePath \u003d \"/Users/sheryl/CS2103/duke/src/main/java/Duke.txt\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        Scanner fileScanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        while (fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String line \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String[] words \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            if (words[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                Todo task \u003d new Todo(words[2]);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                inputs.add(task);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            } else if (words[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                Deadline task \u003d new Deadline(words[2], deadlineConvertToCalendar(words[3].substring(1)));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                inputs.add(task);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            } else if (words[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                ArrayList\u003cCalendar\u003e calendars \u003d eventConvertToCalendar(words[3].substring(1));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                Event task \u003d new Event(words[2], calendars.get(0), calendars.get(1));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                inputs.add(task);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return inputs;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 148
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    String task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    boolean done;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a string which represents the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return a String."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * to set task as done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void doTask() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns Calendar object of start date and time if applicable."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return Calendar object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Calendar getCalendar() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns Calendar object of end date and time if applicable."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return Calendar object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Calendar getTo() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * updates the task description to new task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param newTask String representing new task to be changed to."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void changeTask(String newTask) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        this.task \u003d newTask;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a string which is the month corresponding to int of month in calendar."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param c to get integer representing month."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return the string which represents month."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public String getMonth(Calendar c) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        if (c.get(Calendar.MONTH) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"January\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (c.get(Calendar.MONTH) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"February\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (c.get(Calendar.MONTH) \u003d\u003d 2) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"March\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (c.get(Calendar.MONTH) \u003d\u003d 3) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"April\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (c.get(Calendar.MONTH) \u003d\u003d 4) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"May\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (c.get(Calendar.MONTH) \u003d\u003d 5) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"June\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (c.get(Calendar.MONTH) \u003d\u003d 6) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"July\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (c.get(Calendar.MONTH) \u003d\u003d 7) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"August\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (c.get(Calendar.MONTH) \u003d\u003d 8) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"September\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (c.get(Calendar.MONTH) \u003d\u003d 9) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"October\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (c.get(Calendar.MONTH) \u003d\u003d 10) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"November\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"December\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns string representation of task object."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return string."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"|1| \" + task;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"|0| \" + task;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 100
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * adds a task to the TaskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param task Task object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a task of that index."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param index integer representing the index."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return a Task object in the TaskList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns an integer representing size of TaskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return an integer which is the size."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * removes a Task from the TaskList."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param index index of Task which is to be removed."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 42
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Todo(String task) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns string representation of task object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return string."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return \"T\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 14
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * Returns a string which is the next line read by the scanner."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return String which is next line of user input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * prints error statement."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param error String representing error message."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * prints welcome message."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 33
    }
  },
  {
    "path": "src/main/java/UpdateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class UpdateCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    Boolean isTodo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    Boolean isDeadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * handles user\u0027s request to update details of a Task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param tasks TaskList of Tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param input String of user input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param ui Ui object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return String representing Duke\u0027s response."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @throws DukeException if user input does not follow input format."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    String execute(TaskList tasks, String input, Storage storage, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String[] line \u003d input.split(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int index \u003d Integer.parseInt(line[1]) - 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        assert (index \u003e 0) : \"index should not be negative\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String inst \u003d line[2];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        if (inst.equals(\"task\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String newTask \u003d line[3];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            assert (!newTask.equals(\"\")) : \"new task string should not be empty\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            task.changeTask(newTask);;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (inst.equals(\"date\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String[] taskString \u003d task.toString().split(\"\\\\|\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            if (taskString[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                String date \u003d line[3];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                String[] findDate \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                int day \u003d Integer.parseInt(findDate[0]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                assert (day \u003e\u003d 1 \u0026\u0026 day \u003c\u003d 31) : \"day should be between 1 and 31\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                int month \u003d Integer.parseInt(findDate[1]) - 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                assert (month \u003e\u003d 1 \u0026\u0026 month \u003c\u003d 12) : \"month should be between 1 and 12\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                int year \u003d Integer.parseInt((findDate[2]));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                assert (year \u003e 0) : \"year should not be negative\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                Calendar calendar \u003d task.getCalendar();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                calendar.set(Calendar.DAY_OF_MONTH, day);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                calendar.set(Calendar.MONTH, month);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                calendar.set(Calendar.YEAR, year);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (inst.equals(\"time\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String[] taskString \u003d task.toString().split(\"\\\\|\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            isTodo \u003d taskString[0].equals(\"T\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            if (isTodo) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                String time \u003d line[3];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                int hour \u003d Integer.parseInt(time.substring(0, 2));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                assert (hour \u003e 0 \u0026\u0026 hour \u003c\u003d 24) : \"hour should be between 1 and 24\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                int min \u003d Integer.parseInt((time.substring(2)));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                assert (min \u003e 0 \u0026\u0026 min \u003c\u003d 59) : \"minute should be between 1 and 59\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                Calendar calendar \u003d task.getCalendar();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                calendar.set(Calendar.HOUR_OF_DAY, hour);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                calendar.set(Calendar.MINUTE, min);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (inst.equals(\"end\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String[] taskString \u003d task.toString().split(\"\\\\|\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            isTodo \u003d taskString[0].equals(\"T\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            isDeadline \u003d taskString[0].equals(\"D\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            if (isTodo || isDeadline) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                String time \u003d line[3];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                int hour \u003d Integer.parseInt(time.substring(0, 2));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                assert (hour \u003e 0 \u0026\u0026 hour \u003c\u003d 24) : \"hour should be between 1 and 24\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                int min \u003d Integer.parseInt((time.substring(2)));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                assert (min \u003e 0 \u0026\u0026 min \u003c\u003d 59) : \"minute should be between 1 and 59\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                Calendar calendar \u003d task.getTo();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                calendar.set(Calendar.HOUR_OF_DAY, hour);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                calendar.set(Calendar.MINUTE, min);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String command \u003d \"Alright, I\u0027ve updated your task accordingly.\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        command +\u003d \"\\n\" + task.toString();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a boolean to determine if this command is an exit command."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return a boolean."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 87
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "\u003c?import javafx.scene.effect.Reflection?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"Infinity\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "         \u003ceffect\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            \u003cReflection /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "         \u003c/effect\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 20
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 19
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void testGetFilePath() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        storage \u003d new Storage(\"/Users/sheryl/CS2103/duke/src/main/java/Storage.java\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        assertEquals(\"/Users/sheryl/CS2103/duke/src/main/java/Storage.java\", storage.getFilePath());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void testConvertToInt() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        storage \u003d new Storage(\"/Users/sheryl/CS2103/duke/src/main/java/Storage.java\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        assertEquals(1, storage.convertToInt(\"February\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 50
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void testSize() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        assertEquals(0, list.size());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 10
    }
  }
]
