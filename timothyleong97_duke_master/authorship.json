[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 22,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private static Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private static ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Prints a string."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private static void print(String str) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        System.out.println(str);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Adds a task to the array."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private static void addTask(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        print(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        print(task.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        arr.add(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        print(\"Now you have \" + arr.size() + (arr.size() \u003e 1 ? \" tasks\" : \" task\") + \" in the list.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Prints a greeting and echoes user input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param args takes in arguments."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        print(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        String taskName;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Task temp;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            String str \u003d sc.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            Scanner scanner \u003d new Scanner(str);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            String firstWord \u003d scanner.next();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            switch (firstWord) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        Task removed \u003d arr.remove(scanner.nextInt() - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        print(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        print(removed.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        print(\"Now you have \" + arr.size() + (arr.size() \u003e 1 ? \" tasks\" : \" task\") + \" in the list.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        print(\"OOPS!!! You need to enter a natural number.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    print(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    int i \u003d 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    for (Task t : arr) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        print(++i + \".\" + t);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        taskName \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        temp \u003d new TaskBuilder().type(TaskType.TODO).description(taskName).build();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        addTask(temp);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        print(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    taskName \u003d \"\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    String deadline \u003d \"\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    if (scanner.hasNext()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                            String s \u003d scanner.next();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                            if (s.equals(\"/by\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                                deadline \u003d scanner.nextLine().strip();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                                taskName \u003d taskName.stripTrailing();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                                taskName +\u003d s + \" \";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        if (deadline.isBlank()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                            temp \u003d new TaskBuilder().type(TaskType.DEADLINE).description(taskName).deadline(deadline).build();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                            addTask(temp);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                            print(\"OOPS!!! The deadline cannot be empty.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        print(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    taskName \u003d \"\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    String timeframe \u003d \"\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    if (scanner.hasNext()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                            String s \u003d scanner.next();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                            if (s.equals(\"/at\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                                timeframe \u003d scanner.nextLine().strip();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                                taskName \u003d taskName.stripTrailing();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                                taskName +\u003d s + \" \";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        if (!timeframe.isBlank()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                            temp \u003d new TaskBuilder().type(TaskType.EVENT).description(taskName).timeframe(timeframe).build();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                            addTask(temp);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                            print(\"OOPS!!! The timeframe of an event cannot be empty.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        print(\"OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        int whichTask \u003d scanner.nextInt() - 1;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        arr.get(whichTask).markAsDone();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        print(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        print(arr.get(whichTask).toString());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        print(\"OOPS!!! You need to enter a natural number.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    print(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 131,
      "-": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": " * A Task class representing a task with a isDone component."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "abstract class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + \" \" + description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "class ToDo extends Task {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "class Deadline extends Task {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + description + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private String timeframe;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public Event(String description, String timeframe) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.timeframe \u003d timeframe;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + description + \" (at: \" + timeframe + \")\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "class TaskBuilder {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private String timeframe;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private TaskType type;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public TaskBuilder type(TaskType t) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.type \u003d t;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public TaskBuilder description(String d) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        description \u003d d;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public TaskBuilder deadline(String d) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        deadline \u003d d;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public TaskBuilder timeframe(String t) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        timeframe \u003d t;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public Task build() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                return new ToDo(description);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                return new Event(description, timeframe);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                return new Deadline(description,deadline);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 105
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 3
    }
  },
  {
    "path": "text-ui-test/actual.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "added: e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "added: a"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "1. e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "2. a"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 7
    }
  },
  {
    "path": "text-ui-test/expected.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "added: e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "added: a"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "1. e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "2. a"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 7
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "a"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "del ACTUAL.txt"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 21
    }
  }
]
