[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "test {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    archiveVersion \u003d \"0.1\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 23,
      "-": 18
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.parser.CommandParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            this.tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        new Duke(\"duke.txt\").run();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                Command c \u003d CommandParser.parse(fullCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 41,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Deals with loading tasks from the given file and saving tasks in the same file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param filePath The file path where the file is stored. It can be"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *                 either relative or absolute."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Loads the existing tasks from the data file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @return An ArrayList of tasks which are stored as serialized string in the data file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @throws DukeException if the file does not exit or the data in the file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *                       does not follow the correct format (i.e the serialized form of task objects)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                String[] data \u003d scanner.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                switch (data[0]) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    task \u003d new Todo(data[2]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    task \u003d new Deadline(data[2], data[3]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    task \u003d new Event(data[2], data[3]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    throw new DukeException(\"Failed to load tasks.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            scanner.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException(\"Data not found.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Converts the current tasks in the list to serialized form and"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * save the each task to the file. A new file is created if the"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * destination file does not exits."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param tasks The list of tasks to be saved to the destination file"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @throws DukeException if file writing fails"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void save(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                fw.write(task.serialize());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                fw.write(System.lineSeparator());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException(\"Failed to save tasks.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 88
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Retrieves the requested task from the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param taskId The 1-based index of the task to be fetched"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @return The requested task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @throws DukeException if invalid taskId is passed in"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Task get(int taskId) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return tasks.get(taskId - 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    String.format(\"Task No.%d is not present in your list. Please enter a valid task ID.\", taskId));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Removes the requested task from the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param taskId The 1-based index of the task to be removed"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @return The removed task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @throws DukeException if invalid taskId is passed in"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Task remove(int taskId) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Task task \u003d get(taskId);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        tasks.remove(task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return tasks.isEmpty();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Filters the current list of tasks and returns a new task list"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * which only contains tasks with keyword appearing in its description."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param keyWord The keyword to be used for filtering the list of tasks"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @return a TaskList with all the tasks containing the keyWord"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public TaskList filter(String keyWord) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (task.getDescription().contains(keyWord)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                result.add(task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return new TaskList(result);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 80
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private static final String MESSAGE_WELCOME \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private static final String MESSAGE_EXIT \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private static final String MESSAGE_INDEX \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private static final String MESSAGE_FIND \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private static final String MESSAGE_ADD \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private static final String MESSAGE_DELETE \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private static final String MESSAGE_DONE \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        String command \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        System.out.println(MESSAGE_WELCOME);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        System.out.println(MESSAGE_EXIT);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Prints the list containing all tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param tasks All the tasks in the list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void showIndexMsg(TaskList tasks) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            showNoTasksMsg();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            System.out.println(MESSAGE_INDEX);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            showTaskList(tasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Prints the list containing all tasks matching keyword."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param tasks Filtered tasks."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void showFindMsg(TaskList tasks) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            showNoTasksMsg();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            System.out.println(MESSAGE_FIND);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        showTaskList(tasks);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Prints a list of tasks."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param tasks A list of tasks to be printed"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void showTaskList(TaskList tasks) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ArrayList\u003cTask\u003e allTasks \u003d tasks.getTasks();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d allTasks.size(); i++) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            Task task \u003d allTasks.get(i - 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            System.out.printf(\"%d.%s\\n\", i, task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void showTaskCompletionMsg(Task task) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        System.out.println(MESSAGE_DONE);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        showSingleTask(task);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Prints a message upon successful addition of a task to the list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param task  The task added to the list"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param tasks The list of tasks after the addition"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void showTaskAdditionMsg(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        System.out.println(MESSAGE_ADD);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        showSingleTask(task);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        showTaskTotal(tasks);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Prints a message upon successful deletion of a task from the list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param task  The task removed from the list"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param tasks The list of tasks after the deletion"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void showTaskDeletionMsg(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        System.out.println(MESSAGE_DELETE);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        showSingleTask(task);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        showTaskTotal(tasks);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        System.out.println(\"An empty data file duke.txt is created in the current directory.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        System.out.printf(\"\\u2639 OOPS!!! %s\\n\", message); //show frowning face"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        // A platform independent line separator."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        System.out.print(System.lineSeparator());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private void showNoTasksMsg() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        System.out.println(\"There are currently no tasks in your list.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private void showSingleTask(Task task) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        System.out.printf(\"  %s\\n\", task);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private void showTaskTotal(TaskList tasks) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        int total \u003d tasks.size();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        System.out.printf(\"Now you have %d task%s in the list.\\n\", total, total \u003e 1 ? \"s\" : \"\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 133
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private String taskParams;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private Task newTask;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public AddCommand(String taskType, String taskParams) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.taskParams \u003d taskParams;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            this.newTask \u003d new Todo(taskParams);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (taskParams.isBlank() || taskParams.equals(\"/by\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                throw new DukeException(\"The description and the due time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (taskParams.startsWith(\"/by\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (!taskParams.contains(\"/by\") || taskParams.endsWith(\"/by\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                throw new DukeException(\"The due time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            String[] deadlineArgs \u003d taskParams.split(\"\\\\s*/by\\\\s*\", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            this.newTask \u003d new Deadline(deadlineArgs[0], deadlineArgs[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (taskParams.isBlank() || taskParams.equals(\"/at\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                throw new DukeException(\"The description and the time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (taskParams.startsWith(\"/at\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (!taskParams.contains(\"/at\") || taskParams.endsWith(\"/at\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                throw new DukeException(\"The time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            String[] eventArgs \u003d taskParams.split(\"\\\\s*/at\\\\s*\", 2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            this.newTask \u003d new Event(eventArgs[0], eventArgs[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ui.showTaskAdditionMsg(newTask, tasks);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 61
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    protected boolean isExit \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 16
    }
  },
  {
    "path": "src/main/java/duke/command/CompleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class CompleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private int taskId;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public CompleteCommand(int taskId) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.taskId \u003d taskId;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Task task \u003d tasks.get(this.taskId);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ui.showTaskCompletionMsg(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 23
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private int taskId;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public DeleteCommand(int taskId) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.taskId \u003d taskId;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Task task \u003d tasks.remove(taskId);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ui.showTaskDeletionMsg(task, tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 22
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 17
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private String keyWord;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public FindCommand(String keyWord) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.keyWord \u003d keyWord;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        TaskList result \u003d tasks.filter(keyWord);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ui.showFindMsg(result);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 19
    }
  },
  {
    "path": "src/main/java/duke/command/IndexCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class IndexCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ui.showIndexMsg(tasks);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 7
    }
  },
  {
    "path": "src/main/java/duke/parser/CommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.IndexCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.CompleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class CommandParser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Parses raw input from user and returns its corresponding \u003ccode\u003eCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param command The raw input from user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @return An executable \u003ccode\u003eCommand\u003c/code\u003e object"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @throws DukeException if the command is undefined"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return new IndexCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else if (command.matches(\"^done\\\\s+\\\\d+$\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            int taskId \u003d Integer.parseInt(command.split(\"\\\\s+\")[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return new CompleteCommand(taskId);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else if (command.matches(\"^(todo|deadline|event).*\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            String[] commandArgs \u003d command.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            String taskType \u003d commandArgs[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            String taskParams;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (commandArgs.length \u003c 2) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                taskParams \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                taskParams \u003d commandArgs[1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return new AddCommand(taskType, taskParams);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else if (command.matches(\"^delete\\\\s+\\\\d+$\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            int taskId \u003d Integer.parseInt(command.split(\"\\\\s+\")[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return new DeleteCommand(taskId);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else if (command.startsWith(\"find \")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            String keyWord \u003d command.substring(5).trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return new FindCommand(keyWord);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 49
    }
  },
  {
    "path": "src/main/java/duke/parser/DateTimeParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class DateTimeParser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static DateTimeFormatter inputDateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static DateTimeFormatter inputTimeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static DateTimeFormatter outputDateFormatter \u003d DateTimeFormatter.ofPattern(\"EEE, d MMMM yyyy\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static DateTimeFormatter outputDateFormatterShort \u003d DateTimeFormatter.ofPattern(\"d MMMM yyyy\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static DateTimeFormatter outputTimeFormatter \u003d DateTimeFormatter.ofPattern(\"hh:mma\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static LocalDate parseDate(String dateString) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return LocalDate.parse(dateString, inputDateFormatter);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public static LocalTime parseTime(String timeString) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return LocalTime.parse(timeString, inputTimeFormatter);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 21
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.parser.DateTimeParser.inputDateFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.parser.DateTimeParser.inputTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.parser.DateTimeParser.outputDateFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.parser.DateTimeParser.outputTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.parser.DateTimeParser.parseDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.parser.DateTimeParser.parseTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private LocalDate byDate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private Optional\u003cLocalTime\u003e byTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Represents a task with a deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param description The description of the task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param by          The deadline containing date or/and time (e.g. 01/01/2019 1800 means 1st January 2019, 6pm)."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *                    The date input must follow dd/mm/yyyy format."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        String[] dateTimeArr \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            this.byDate \u003d parseDate(dateTimeArr[0]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (dateTimeArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                this.byTime \u003d Optional.empty();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                this.byTime \u003d Optional.of(parseTime(dateTimeArr[1]));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException(\"Invalid time format.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private String formatBy() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (byTime.isPresent()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return String.format(\"%s, %s\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    outputDateFormatter.format(byDate),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    outputTimeFormatter.format(byTime.get()));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return String.format(\"%s\", outputDateFormatter.format(byDate));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Converts a deadline into serialized form. (e.g."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * D | 0 | return book | 11/10/2019 1100)."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String serialize() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return String.format(\"D | %d | %s | %s%s\","
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                getStatusCode(),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                description,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                inputDateFormatter.format(byDate),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                byTime.isPresent()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                        ? \" \" + inputTimeFormatter.format(byTime.get())"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                        : \"\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), formatBy());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 72
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.parser.DateTimeParser.inputDateFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.parser.DateTimeParser.inputTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.parser.DateTimeParser.outputDateFormatterShort;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.parser.DateTimeParser.outputTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.parser.DateTimeParser.parseDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static duke.parser.DateTimeParser.parseTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private LocalDate startDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private LocalTime startTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private LocalDate endDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private LocalTime endTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Represents a task with both start time and end time."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param description The description of the event"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param at          Date and time of both start and end of the event. If the dates of the start and"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *                    end time of the event are the same, only the start date is required. (e.g. \u002711/10/2019"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *                    1000 1100\u0027 means the event starts on 11th October 2019, 10AM and ends at 11AM on the"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *                    same day.) However, if the start and end dates of the event are event, the end date"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *                    should be specified. (e.g. \u002701/01/2019 0700 03/01/2019 1800\u0027 means the event starts"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *                    on 1st January 2019, 6PM and ends on 3rd January 2019, 6PM. )"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        String[] dateTimeArr \u003d at.split(\" \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            this.startDate \u003d parseDate(dateTimeArr[0]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            this.startTime \u003d parseTime(dateTimeArr[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            if (dateTimeArr.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                this.endDate \u003d parseDate(dateTimeArr[0]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                this.endTime \u003d parseTime(dateTimeArr[2]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                this.endDate \u003d parseDate(dateTimeArr[2]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                this.endTime \u003d parseTime(dateTimeArr[3]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException(\"Invalid time format.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private String formatAt() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (startDate.equals(endDate)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return String.format(\"%s, %s - %s\","
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    outputDateFormatterShort.format(startDate),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    outputTimeFormatter.format(startTime),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    outputTimeFormatter.format(endTime));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            return String.format(\"%s, %s - %s, %s\","
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    outputDateFormatterShort.format(startDate),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    outputTimeFormatter.format(startTime),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    outputDateFormatterShort.format(endDate),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                    outputTimeFormatter.format(endTime));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Converts an event into serialized form. (e.g."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * E | 0 | coding workshop | 11/10/2019 1000 11/10/2019 1100)."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String serialize() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return String.format(\"E | %d | %s | %s %s %s %s\","
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                getStatusCode(),"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                description,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                inputDateFormatter.format(startDate),"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                inputTimeFormatter.format(startTime),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                inputDateFormatter.format(endDate),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                inputTimeFormatter.format(endTime));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), formatAt());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 85
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    protected Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    protected int getStatusCode() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return isDone ? 1 : 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Sets the status of the task to be completed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @throws DukeException if the task has already been marked as done before"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void markAsDone() throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException(\"This task was marked as done before.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public abstract String serialize();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 44
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * Represents a task with description only."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @param description The description of the todo item"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     * @throws DukeException if the description is empty string"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public Todo(String description) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String serialize() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return String.format(\"T | %d | %s\", getStatusCode(), description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 29
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.task.TaskImplStub;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void getTasks() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(new ArrayList\u003cTask\u003e(), taskList.getTasks());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void add() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(0, taskList.getTasks().size());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        taskList.add(new TaskImplStub(\"Test\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(1, taskList.getTasks().size());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 31
    }
  },
  {
    "path": "src/test/java/duke/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private final InputStream systemIn \u003d System.in;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private final PrintStream systemOut \u003d System.out;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private ByteArrayInputStream testIn;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private ByteArrayOutputStream testOut;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        testOut \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        System.setOut(new PrintStream(testOut));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        System.setOut(systemOut);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private String getOutput() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return testOut.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void readCommand_withTrailingSpaces() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        String data \u003d \"Test   \";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        testIn \u003d new ByteArrayInputStream(data.getBytes());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        System.setIn(testIn);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(\"Test\", ui.readCommand());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        System.setIn(systemIn);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void showWelcome() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(\"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\\n\", getOutput());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void showExit() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(\"Bye. Hope to see you again soon!\\n\", getOutput());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 60
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void stringConversion_withTime() throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Test\", \"01/01/2019 0700\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(\"[D][\\u2718] Test (by: Tue, 1 January 2019, 07:00AM)\", deadline.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void stringConversion_withoutTime() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Test\", \"01/01/2019\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(\"[D][\\u2718] Test (by: Tue, 1 January 2019)\", deadline.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void serialize() throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Test\", \"01/01/2019 0700\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(\"D | 0 | Test | 01/01/2019 0700\", deadline.serialize());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 26
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void stringConversion_onSameDate() throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Event event \u003d new Event(\"Test\", \"01/01/2019 0700 1500\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(\"[E][\\u2718] Test (at: 1 January 2019, 07:00AM - 03:00PM)\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                event.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void stringConversion_onDifferentDates() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Event event \u003d new Event(\"Test\", \"01/01/2019 0700 02/01/2019 1500\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(\"[E][\\u2718] Test (at: 1 January 2019, 07:00AM - 2 January 2019, 03:00PM)\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "                event.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void serialize() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Event event \u003d new Event(\"Test\", \"01/01/2019 0700 1500\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(\"E | 0 | Test | 01/01/2019 0700 01/01/2019 1500\", event.serialize());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 28
    }
  },
  {
    "path": "src/test/java/duke/task/TaskImplStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class TaskImplStub extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public TaskImplStub(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public String serialize() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 13
    }
  },
  {
    "path": "src/test/java/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        task \u003d new TaskImplStub(\"Test\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(\"Test\", task.getDescription());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void stringConversion() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(\"[\\u2718] Test\", task.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void markAsDone_notDone_success() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(0, task.getStatusCode());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(1, task.getStatusCode());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void markAsDone_alreadyDone_exceptionThrown() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            assertEquals(\"This task was marked as done before.\", e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 45
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void constructorTest_emptyDescription_exceptionThrown() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            new Todo(\"\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "            assertEquals(\"The description of a todo cannot be empty.\", e.getMessage());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void stringConversion() throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Todo todo \u003d new Todo(\"Test\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(\"[T][\\u2718] Test\", todo.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    void serialize() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        Todo todo \u003d new Todo(\"Test\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "        assertEquals(\"T | 0 | Test\", todo.serialize());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 31
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "1.[T][✓] join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "2.[D][✘] oral presentation preparation (by: Wed, 18 September 2019, 02:00PM)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "3.[E][✘] coding workshop (at: 11 October 2019, 10:00AM - 11:00AM)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "  [T][✘] read book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "  [D][✘] return book (by: Thu, 6 June 2019, 08:00AM)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "  [E][✘] project meeting (at: 6 August 2019, 02:00PM - 04:00PM)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "1.[T][✓] join sports club"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "2.[D][✘] oral presentation preparation (by: Wed, 18 September 2019, 02:00PM)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "3.[E][✘] coding workshop (at: 11 October 2019, 10:00AM - 11:00AM)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "4.[T][✘] read book"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "5.[D][✘] return book (by: Thu, 6 June 2019, 08:00AM)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "6.[E][✘] project meeting (at: 6 August 2019, 02:00PM - 04:00PM)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "  [D][✓] return book (by: Thu, 6 June 2019, 08:00AM)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "1.[T][✓] join sports club"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "2.[D][✘] oral presentation preparation (by: Wed, 18 September 2019, 02:00PM)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "3.[E][✘] coding workshop (at: 11 October 2019, 10:00AM - 11:00AM)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "4.[T][✘] read book"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "5.[D][✓] return book (by: Thu, 6 June 2019, 08:00AM)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "6.[E][✘] project meeting (at: 6 August 2019, 02:00PM - 04:00PM)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! Task No.8 is not present in your list. Please enter a valid task ID."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "  [D][✓] return book (by: Thu, 6 June 2019, 08:00AM)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "1.[T][✓] join sports club"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "2.[D][✘] oral presentation preparation (by: Wed, 18 September 2019, 02:00PM)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "3.[E][✘] coding workshop (at: 11 October 2019, 10:00AM - 11:00AM)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "4.[T][✘] read book"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "5.[E][✘] project meeting (at: 6 August 2019, 02:00PM - 04:00PM)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! Task No.8 is not present in your list. Please enter a valid task ID."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! The description and the due time of a deadline cannot be empty."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! The description of a deadline cannot be empty."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! The due time of a deadline cannot be empty."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! The description and the time of an event cannot be empty."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! The description of an event cannot be empty."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! The time of an event cannot be empty."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 72
    }
  },
  {
    "path": "text-ui-test/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "T | 1 | join sports club"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "D | 0 | oral presentation preparation | 18/09/2019 1400"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "E | 0 | coding workshop | 11/10/2019 1000 11/10/2019 1100"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 3
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "deadline return book /by 06/06/2019 0800"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "event project meeting /at 06/08/2019 1400 1600"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "done 8"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "delete 8"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "deadline /by 06/06/2019 0800"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "event /at Aug 06/08/2019 1400 06/08/2019 1600"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "event project meeting"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "blah"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Na-Nazhou"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Na-Nazhou": 34
    }
  }
]
