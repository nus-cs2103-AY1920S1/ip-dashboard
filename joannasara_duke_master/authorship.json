[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joannasara"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import duke.command.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import duke.command.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import duke.command.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import duke.command.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joannasara"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joannasara"
        },
        "content": " * The main class for this program, calls the execution of the whole program"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joannasara"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    private static TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    private static Parser parser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Constructs a duke object with a given filepath to save the output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @param filePath path to save the output text"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            taskList  \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        parser \u003d new Parser(taskList, ui);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Starts the program"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        ui.start(parser, storage, taskList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Main method for the whole program that creates a new Duke object and calls run()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joannasara": 47,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joannasara"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joannasara"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joannasara"
        },
        "content": " * Represents a parser that will be used to parse each line of input"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joannasara"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joannasara"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Constructs a Parser"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @param taskList taskList to which the parsed Tasks would be saved"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @param ui ui for input and output"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public Parser(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Parses the inputted string into a Task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @param  str string to be parsed"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public void parseLine(String str) throws DukeException, NumberFormatException{"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        if (str.equals(\"list\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            ui.printList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        } else if (str.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            String[] arr \u003d str.split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            int i \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            if (i \u003e taskList.getSize()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                throw new DukeException(\"Number can\u0027t be bigger than list size.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            } else if (i \u003c 1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                throw new DukeException(\"Number must be greater than 0\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            ui.printDelete( taskList.removeTask(i));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        } else if (str.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            String[] arr \u003d str.split(\" \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            int i \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            if (i \u003e taskList.getSize()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                throw new DukeException(\"Number can\u0027t be bigger than list size.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            } else if (i \u003c 1) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                throw new DukeException(\"Number must be greater than 0\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            ui.printDone(taskList.markTaskAsDone(i));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        } else if (str.startsWith(\"find \")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            String[] arr \u003d str.split(\" \", 2);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            ui.printMatchingList(arr[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            String[] arr \u003d str.split(\"/\", 2); // separates the the description"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            String[] typeArray \u003d arr[0].split(\" \", 2); // separate the task type"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            if (typeArray[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                if (typeArray.length \u003c 2  || typeArray[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                task \u003d new Todo(typeArray[1], false, \"\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                taskList.addTask(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            } else  if (typeArray[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                if (typeArray.length \u003c 2 || typeArray[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                if (arr.length \u003c 2 || arr[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The time of a deadline cannot be empty, add a /by description!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                if (!arr[1].startsWith(\"by \")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    throw new DukeException(\"Use /by  \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                task \u003d new Deadline(typeArray[1], false, arr[1]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                taskList.addTask(task);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            } else if (typeArray[0].equals(\"event\")){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                if (typeArray.length \u003c 2 || typeArray[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                if (arr.length \u003c 2 || arr[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The time of a deadline cannot be empty, add a /at description!\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                if (!arr[1].startsWith(\"at \")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    throw new DukeException(\"Use /at  \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                task \u003d new Event(typeArray[1], false, arr[1]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                taskList.addTask(task);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            ui.printAdd(task);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joannasara"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joannasara": 95
    }
  },
  {
    "path": "src/main/java/duke/command/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joannasara"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joannasara"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joannasara"
        },
        "content": " * Saves file to the specified filePath"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joannasara"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joannasara"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Constructs a Storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @param filePath a String that represents the filepath to save this program\u0027s output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Loads the saved file and adds the tasks to TaskList"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @return the list of tasks parsed from the saved file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException{"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            String[] arr  \u003d line.split(\"[|]\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            boolean isDone \u003d !arr[1].trim().equals(\"0\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            if  (arr[0].trim().equals(\"T\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                task \u003d new Todo(arr[2].trim(), isDone, \"\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            } else if (arr[0].trim().equals(\"D\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                task \u003d new Deadline(arr[2].trim(), isDone, arr[3].trim());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                task \u003d new Event(arr[2].trim(), isDone, arr[3].trim());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            list.add(task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Updates the file in the corresponding filePath"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @param arr an ArrayList\u003cTask\u003e to update the file in the corresponding filePath"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public static  void  updateFile(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        File dir \u003d new File(\"/Users/joannasara/Desktop/duke/data\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        if (!dir.exists()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            dir.mkdir();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        String  fileString \u003d \"\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        for (Task t : arr) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            fileString +\u003d t.getFileStringFormat() + \"\\n\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            File f \u003d new File(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            fw.write(fileString);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joannasara"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joannasara": 79
    }
  },
  {
    "path": "src/main/java/duke/command/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joannasara"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joannasara"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joannasara"
        },
        "content": " * Stores the list of tasks and supports the addition, deletion, and mark as done of tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joannasara"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joannasara"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * An empty constructor for TaskList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        this.list \u003d  new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Constructs a new TaskList with the given ArrayList\u003cTask\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @param list an ArrayList\u003cTask\u003e which content is going to be saved in the new TaskList object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Adds a new task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Returns the list of tasks in this TaskList"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @return an ArrayList\u003cTask\u003e containng the tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Removes a task with of the position i - 1"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @param i position of the task (starts from 1)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @return the Task which is removed from this TaskList"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public Task removeTask(int i) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        return list.remove(i - 1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Returns the current number of tasks stored in this TaskList"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @return an integer representing the number of tasks in this tasklist"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Marks the task stored at position i + 1 as done"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @return the modified Task"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public Task markTaskAsDone(int i) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        Task task \u003d list.get(i - 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joannasara"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joannasara": 70
    }
  },
  {
    "path": "src/main/java/duke/command/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joannasara"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joannasara"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joannasara"
        },
        "content": " * Manages input and output"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joannasara"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joannasara"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    private static TaskList taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Creates a new Ui object"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Loops through the input and calls the Parser to evaluate each line. Loop terminate"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * when the user types in \"bye\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @param parser the Parser that is used to evaluate each line"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @param storage the Storage that is used to save information into file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @param taskList the TaskList that is used to save the current information"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public void start(Parser parser, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        System.out.println(\"Hello! I\u0027m duke.Duke\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        String word \u003d sc.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        while (!word.equals(\"bye\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                parser.parseLine(word);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                System.out.println(\"Must input an integer\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                word \u003d sc.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        storage.updateFile(taskList.getList());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Prints the loading error"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        System.out.println(\"FIle not found\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Prints the list of Tasks stored in the TaskList"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        for (Task task : taskList.getList()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            System.out.println(i + \". \" + task);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Prints the message displayed when the user deletes a Task"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public void printDelete(Task task) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: : \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        System.out.println(\"\\t\" + task);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        System.out.println(\"Now you have \" +  taskList.getSize()  +  \" tasks in the list.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Prints the message displayed when the user marks a Task as done"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public void printDone(Task task) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        System.out.println(\"\\t\" + task);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Prints the message displayed when the user adds a new Task"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public void printAdd(Task task) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        System.out.println(\"\\t\" + task.toString());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        System.out.println(\"Now you have \" +  taskList.getSize()  +  \" tasks in the list.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Prints the list of Tasks stored in the TaskList that contains the user input"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public void printMatchingList(String pattern) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        for (Task task : taskList.getList()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            if (task.toString().contains(pattern) || task.getFileStringFormat().contains(pattern)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                System.out.println(i + \". \" + task);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joannasara"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joannasara": 110
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joannasara"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joannasara"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joannasara"
        },
        "content": " * Exception for this program"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joannasara"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joannasara"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Creates an exception with the specified message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @param message a String that is used as the error message"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joannasara"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joannasara": 14
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joannasara"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joannasara"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joannasara"
        },
        "content": " * Represents a task of type deadline. An \u003ccode\u003eDeadline\u003c/code\u003e object contains a description,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joannasara"
        },
        "content": " * a  boolean representing whether or not the task has been done and additional information."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joannasara"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joannasara"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    protected String  by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Constructs a new Deadline."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @param isDone whether or not the task has been done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public Deadline(String description, boolean isDone, String info) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        super(description, isDone, info);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        super.type \u003d Type.DEADLINE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        String[] infos \u003d info.split(\" \", 2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        by \u003d  super.checkDate(infos[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Overrides toString method"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @return a String in the to-be-displayed format"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + description + \" (by: \" +  by + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Returns a String in the format for file saving."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @return a string in the saved format"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public String getFileStringFormat() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        if (isDone()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            return \"D | 1 | \" + description + \" | \" + info;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            return \"D | 0 | \" + description + \" | \" + info;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joannasara"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joannasara": 44
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joannasara"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joannasara"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joannasara"
        },
        "content": " * Represents a task of type event. An \u003ccode\u003eEvent\u003c/code\u003e object contains a description,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joannasara"
        },
        "content": " * a  boolean representing whether or not the task has been done and additional information."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joannasara"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joannasara"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Constructs a new Event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @param isDone whether or not the task has been done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public Event(String description, boolean isDone,  String info) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        super(description, isDone, info);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        super.type \u003d Type.EVENT;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        String[] infos \u003d info.split(\" \", 2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        this.at \u003d  super.checkDate(infos[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Overrides toString method"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @return a String in the to-be-displayed format"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + description + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Returns a String in the format for file saving."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @return a string in the saved format"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public String getFileStringFormat() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        if (isDone()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            return \"E | 1 | \" + description + \" | \" + info;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            return \"E | 0 | \" + description + \" | \" + info;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joannasara"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joannasara": 43
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joannasara"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joannasara"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joannasara"
        },
        "content": " * Represents a task. A \u003ccode\u003eTask\u003c/code\u003e object contains a description,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joannasara"
        },
        "content": " * a  boolean representing whether or not the task has been done and additional information."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joannasara"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joannasara"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    protected Type type;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    protected String info;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Empty constructor for Task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Constructs a new Task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @param isDone whether or not the task has been done"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public Task(String description, boolean isDone, String info) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        this.description \u003d description.trim();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        this.info \u003d info.trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Returns a boolean representing whether or not the task is done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @return true if the task is done, false otherwise"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Returns a string which is the first character of each task type"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @return a \"T\", \"D\", or \"E\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public String getSymbol() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        switch (type){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            return \"T\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            return \"D\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            return \"E\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Returns a boolean representing whether or not the task is done."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @return true if the task is done, false otherwise"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Overrides toString method"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @return a String in the to-be-displayed format"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        if (info.equals(\"\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            return \"[\" + getSymbol() + \"][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            String[] infos \u003d info.split(\" \", 2);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            return \"[\" + getSymbol() + \"][\" + getStatusIcon() + \"] \" + description + \" (\" + infos[0] +\":  \" +  infos[1] + \")\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Returns a String in the format for file saving. An abstract method to be implemented in child classes."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public abstract String getFileStringFormat();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Checks if the string is in date format dd/MM/yyyy HHmm and returns the parsed form of the  date."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @param str the task\u0027s info String"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @return true if the task is done, false otherwise"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public String checkDate(String str)  {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            DateFormat parser \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            DateFormat formatter \u003d new SimpleDateFormat(\"d MMMM yyyy ha\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            date \u003d parser.parse(str);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            String output \u003d formatter.format(date);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            String[] arr \u003d output.split(\" \",  4);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            int day \u003d Integer.parseInt(arr[0]);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            String finalString \u003d \"\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            finalString +\u003d arr[0];"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            switch (day % 10) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                if (day \u003d\u003d 11) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    finalString +\u003d \"th\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    finalString +\u003d \"st\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                if (day \u003d\u003d 12) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    finalString +\u003d \"th\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                    finalString +\u003d \"nd\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                finalString +\u003d \"rd\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                finalString +\u003d \"th\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            finalString +\u003d \" of \" + arr[1] + \" \" + arr[2] + \", \" + arr[3];"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            return finalString;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            return str;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "joannasara"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joannasara": 141
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joannasara"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joannasara"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joannasara"
        },
        "content": " * Represents a task of type todo. A \u003ccode\u003eTodo\u003c/code\u003e object contains a description,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joannasara"
        },
        "content": " * a  boolean representing whether or not the task has been done and additional information."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joannasara"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joannasara"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Constructs a new Todo."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @param isDone whether or not the task has been done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public Todo(String description, boolean isDone, String info) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        super(description, isDone, info);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        super.type \u003d Type.TODO;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Overrides toString method"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @return a String in the to-be-displayed format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Returns a String in the format for file saving."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * @return a string in the saved format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public String getFileStringFormat() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        if (isDone()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            return \"T | 1 | \" + description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            return \"T | 0 | \" + description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joannasara"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joannasara": 39
    }
  },
  {
    "path": "src/main/java/duke/task/Type.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joannasara"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joannasara"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joannasara"
        },
        "content": " * Represents a types of Tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joannasara"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joannasara"
        },
        "content": "public enum Type {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joannasara"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joannasara": 8
    }
  },
  {
    "path": "src/test/java/duke/command/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joannasara"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import duke.task.Type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joannasara"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joannasara"
        },
        "content": " * Tests TaskList class"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joannasara"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joannasara"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Tests if TaskList successfully add a new Task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public void taskList_invalidCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joannasara"
        },
        "content": "         * Stub for Task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joannasara"
        },
        "content": "         */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        class TaskStub extends Task {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joannasara"
        },
        "content": "             * Constructs a new TaskStub."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joannasara"
        },
        "content": "             *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joannasara"
        },
        "content": "             * @param desc description of the task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joannasara"
        },
        "content": "             * @param bool whether or not the task has been done"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joannasara"
        },
        "content": "             * @param information extra info of the TaskStub"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joannasara"
        },
        "content": "             */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            public TaskStub(String desc, boolean bool, String information) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                super();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                description \u003d desc;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                isDone \u003d bool;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                info \u003d information;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joannasara"
        },
        "content": "             * Returns null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joannasara"
        },
        "content": "             */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            public String getFileStringFormat() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joannasara"
        },
        "content": "         * Stub for Event"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joannasara"
        },
        "content": "         */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        class EventStub extends TaskStub {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joannasara"
        },
        "content": "             * Constructs a new EventStub."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joannasara"
        },
        "content": "             *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joannasara"
        },
        "content": "             * @param description description of the task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joannasara"
        },
        "content": "             * @param isDone      whether or not the task has been done"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joannasara"
        },
        "content": "             * @param info extra info of the EventStub"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joannasara"
        },
        "content": "             */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            public EventStub(String description, boolean isDone, String info) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                super(description, isDone, info);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joannasara"
        },
        "content": "                type \u003d Type.EVENT;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joannasara"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joannasara"
        },
        "content": "       TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joannasara"
        },
        "content": "       taskList.addTask(new EventStub(\"Do this thing\",  false, \"\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joannasara"
        },
        "content": "       assertEquals(1, taskList.getSize());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joannasara"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joannasara": 67
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joannasara"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import duke.command.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joannasara"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joannasara"
        },
        "content": " * Tests Deadline class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joannasara"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joannasara"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Tests if Deadline.getFileStringFormat outputs the correct String format"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public void deadlineGenerateStringFormat_doneDeadline_success() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Certain CS project\", true, \"one of these days\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        assertEquals(\"D | 1 | Certain CS project | one of these days\", deadline.getFileStringFormat());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joannasara"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joannasara": 20
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joannasara"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import duke.command.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joannasara"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joannasara"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joannasara"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joannasara"
        },
        "content": " * Tests Event class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joannasara"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joannasara"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     * Tests if Event.toString outputs the correct String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joannasara"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    public void eventDateDetection_validDate_success() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        Event event \u003d new Event(\"A new event\", false, \"by 12/10/2019 2100\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        taskList.addTask(new Todo(\"Do this thing\",  false, \"\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joannasara"
        },
        "content": "        assertEquals(\"[E][\\u2718] A new event (at: 12th of October 2019, 9PM)\", event.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joannasara"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joannasara"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joannasara": 22
    }
  }
]
