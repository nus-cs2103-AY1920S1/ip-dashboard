[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 22,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public static ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public static int counter \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        String hello \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        System.out.println(hello);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            String next \u003d sc.nextLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            if (next.equals(\"bye\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                    handleInput(next);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                    System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public static void handleInput(String next) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        if (next.equals(\"list\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            for (int i \u003d 0; i \u003c counter; i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                sb.append(i + 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                sb.append(\".\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                sb.append(items.get(i));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                sb.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            System.out.print(sb);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } else if (next.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            String[] parts \u003d next.split(\" \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            int num \u003d Integer.parseInt(parts[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            Task task \u003d items.get(num - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            task.setDone(true);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            String output \u003d \"Nice! I\u0027ve marked this task as done:\\n  \" + task;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            System.out.println(output);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } else if (next.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            String[] parts \u003d next.split(\" \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            int num \u003d Integer.parseInt(parts[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            Task removed \u003d items.remove(num - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            counter--;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            String output \u003d \"Noted. I\u0027ve removed this task:\\n  \" + removed;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            output +\u003d \"\\nNow you have \" + counter + \" tasks in the list.\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            System.out.println(output);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            if (next.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                if (next.length() \u003c 6) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                    throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                    items.add(new Todo(next.substring(5)));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            } else if (next.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                String[] parts \u003d next.split(\" /by \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                items.add(new Deadline(parts[0].substring(9), parts[1]));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            } else if (next.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                String[] parts \u003d next.split(\" /at \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                items.add(new Event(parts[0].substring(6), parts[1]));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            String output \u003d \"Got it. I\u0027ve added this task:\\n  \" + items.get(counter);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            output +\u003d \"\\nNow you have \" + (counter + 1) + \" tasks in the list.\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            System.out.println(output);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 75,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        super(\"\\u2639 OOPS!!! \" + message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        // Return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 26
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public Todo(String description) throws DukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 13
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dcshzj"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dcshzj"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "dcshzj": 34
    }
  }
]
