[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "test {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 28,
      "-": 19
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 59
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 38
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 52
    }
  },
  {
    "path": "src/main/java/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "D | 1 | A-MoreOOP | 04/09/2019 1300"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "D | 1 | A-JUnit | 04/09/2019 1300"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "D | 1 | A-Jar | 04/09/2019 1300"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "T | 1 | A-Packages"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "D | 1 | A-JavaDoc | 04/09/2019 1300"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "D | 1 | A-CodingStandard | 04/09/2019 1300"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "D | 1 | Level-9 | 04/09/2019 1300"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "E | 0 | cs2103 group meeting | 19/09/2019 1800"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 8
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": " * Main class duke to start the programme."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private Saved savedFile;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private Scanner scan;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Creates a Duke object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Initialise the storage, task list and ui objects."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        savedFile \u003d new Saved(\"src/main/java/data.txt\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            tasks \u003d new TaskList(savedFile.loadData());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Obtains user input from command line, parses it and executes the commands."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Shows errors to the user in case of invalid input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Saves updated tasks back into the local file"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @throws IOException filePath is inaccessible or cannot be found"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        Command cmd;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        ui.printIntro();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        Boolean isBye \u003d false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        while (!isBye) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                input \u003d ui.scanCmd();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                ui.printLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                cmd \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                cmd.execute(tasks, ui);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                isBye \u003d cmd.isBye();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            } catch (DukeException error) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                ui.printError(error.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        savedFile.saveToFile(tasks.getTaskArrayList());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Required main method."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param args command line arguments"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @throws IOException local file is inaccessible or cannot be found"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Gets response from the user."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            Command cmd \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            return cmd.execute(tasks, ui);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public void start(Stage start) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 90
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.exception.EmptyDateTimeDukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.exception.EmptyTaskNumberException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.exception.UnknownInputDukeException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Interprets user\u0027s input and returns the respective command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param input user\u0027s input"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @return command according to interpretation of user\u0027s input"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException empty description of task or unknown command"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        assert input !\u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        String[] inputArr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        String cmd \u003d inputArr[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        List\u003cString\u003e list \u003d Arrays.asList(inputArr);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        switch (cmd) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            int taskNum \u003d Integer.valueOf(inputArr[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            return new DoneCommand(taskNum);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            String desc \u003d inputArr[1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            return new AddCommand(new Todo(desc));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                String taskAndDate \u003d inputArr[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                String[] deadline \u003d taskAndDate.split(\" /by \", 2);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                return new AddCommand(new Deadline(deadline[0], deadline[1]));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                throw new EmptyDateTimeDukeException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                String descAndDate \u003d inputArr[1];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                String[] event \u003d descAndDate.split(\" /at\", 2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                return new AddCommand(new Event(event[0], event[1]));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                throw new EmptyDateTimeDukeException();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                int deleteNum \u003d Integer.valueOf(inputArr[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                return new DeleteCommand(deleteNum);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                throw new EmptyTaskNumberException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            return new FindCommand(inputArr[1]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            throw new UnknownInputDukeException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 80
    }
  },
  {
    "path": "src/main/java/duke/Saved.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "public class Saved {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    Saved(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Loads the tasks stored in local file and returns them as a list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @return list of tasks stored in the text document"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @throws FileNotFoundException local file cannot be found"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    ArrayList\u003cTask\u003e loadData() throws FileNotFoundException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        Scanner scan \u003d new Scanner(file);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        while (scan.hasNext()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            String[] text \u003d scan.nextLine().split(\" \\\\| \", 4);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            Task t;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            switch (text[0]) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                t \u003d new Todo(text[2]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                t \u003d new Deadline(text[2], text[3]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                t \u003d new Event(text[2], text[3]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                t \u003d new Task(\"\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            if (text[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                t.setAsDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            list.add(t);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Saves updated list of tasks into local file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param list list of tasks"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @throws IOException local file cannot be found or inaccessible."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public void saveToFile(ArrayList\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        FileWriter newFile \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        String listToFile \u003d \"\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        String s;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        for (Task task: list) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            if (task instanceof Event) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                s \u003d \"E\" + \" | \" + task.getDone() + \" | \" + task.getDesc() + \" | \" + task.getAt();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                s \u003d \"D | \" + task.getDone() + \" | \" + task.getDesc() + \" | \" + task.getBy();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                s \u003d \"T | \" + task.getDone() + \" | \" + task.getDesc();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            newFile.write(s);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            newFile.write(\"\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        newFile.write(listToFile);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        newFile.flush();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 90
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        this.list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        this.list \u003d tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Adds a new task to the list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param task task to be added"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        assert task !\u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Deletes an existing task from the list of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param taskNum index of task to be deleted"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public Task delete(int taskNum) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        Task task \u003d list.remove(taskNum - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Adds a new task to the list of tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @return size of list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Get TaskList as an ArrayList (for printing)."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @return ArrayList of tasks"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskArrayList() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Sets task as done."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param taskNum index of task number"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @return task with updated status"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public Task setDone(int taskNum) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        Task task \u003d list.get(taskNum - 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        task.setAsDone();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Searches TaskList to find if any of the tasks matches the keyword."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param keyword keyword to be searched from user\u0027s input"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @return list of tasks that contain the keyword or DukeException if no matches are found"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public ArrayList\u003cTask\u003e findMatch(String keyword) throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            if (task.getDesc().contains(keyword)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        if (matchingTasks.isEmpty()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            throw new DukeException(\"There are no matching tasks found!\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            return matchingTasks;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 89
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.Saved;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Create add commands."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param task task to be added"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Adds task to list of tasks, gives feedback to user after execution."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param tasks contains the current list of tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param ui to give feedback to the user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        tasks.add(this.task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return ui.showAddTaskMessage(tasks.size(), task.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 29
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.Saved;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui) throws DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return this instanceof ExitCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 14
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.Saved;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public DeleteCommand(int taskNum) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Deletes task from TaskList, gives feedback to user after execution."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param tasks task to be deleted"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param ui to give feedback to the user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        Task task \u003d tasks.delete(this.taskNum);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return ui.showDeleteMessage(task.toString(), tasks.size());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 25
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.Saved;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Creates a done command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param taskNum the id of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public DoneCommand(int taskNum) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Marks task as done, gives feedback to user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param tasks contains the current list of tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param ui to give feedback to the user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        Task task \u003d tasks.setDone(this.taskNum);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return ui.showDone(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 29
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.Saved;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Relays to the driver class that the user wishes to exit Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return ui.showBye();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 16
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.Saved;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Creates a find command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param keyword to search for"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Finds tasks that contain the keyword."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param tasks to access the list of tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param ui to give feedback to user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @throws DukeException when no matches are found"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String execute(TaskList tasks, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return ui.showList(tasks.findMatch(this.keyword));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 31
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.Saved;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Show the user the current list of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param tasks to access the list of tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param ui to give feedback to user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return ui.showList(tasks.getTaskArrayList());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 19
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Creates an exception specific for Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param s a string containing description of the problem"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyDateTimeDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "public class EmptyDateTimeDukeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Creates an EmptyDateTimeDukeException."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public EmptyDateTimeDukeException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        super(\"OOPS!!! The date and time inputs cannot empty!\\n\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 11
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyTaskNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "public class EmptyTaskNumberException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Creates an EmptyTaskNumberException."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public EmptyTaskNumberException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        super(\"OOPS!!! Please enter a task number!\\n\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 11
    }
  },
  {
    "path": "src/main/java/duke/exception/UnknownInputDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "public class UnknownInputDukeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Creates an UnknownInputDukeException."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public UnknownInputDukeException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 11
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private SimpleDateFormat deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Creates a task with a deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param by the deadline of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public Deadline(String description, String by) throws DateTimeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        this.deadline \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Returns deadline as the task type."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @return type of task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Returns deadline of the task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @return deadline of task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Converts the deadline from SimpleDateFormat to String."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @return deadline of task in the form of a string"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @throws DateTimeException deadline is in the wrong format"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String convertEventTime() throws DateTimeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            date \u003d deadline.parse(this.by);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            return deadline.format(date);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        } catch (ParseException exception) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            System.out.println(\"OOPS!!! Please enter a valid deadline\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Represents the task in a format suitable for the user to read."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @return string representation of task"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + convertEventTime() + \")\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 75
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private SimpleDateFormat eventTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Creates an event task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param at time of the event"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public Event(String description, String at) throws DateTimeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        this.at \u003d at.trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        this.event \u003d \"event\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        eventTime \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Returns event as the task type."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @return type of task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Returns time of the event."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @return time of event"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Converts event time from SimpleDateFormat to a string."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @return time of event as a string"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @throws ParseException when user does not input a time"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @throws DateTimeException when format of date/time is incorrect"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String convertEventTime() throws ParseException, DateTimeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        this.date \u003d eventTime.parse(this.at);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return this.eventTime.format(date);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Represents the task in a format suitable for the user to read."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @return string representation of task"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            return \"[E]\" + super.toString() + \" (at: \" + convertEventTime() + \")\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        } catch (ParseException exception) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            return \"Error\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 75
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    protected String event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Creates a task object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Called by task, deadline and event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Returns status of task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @return tick or X symbols to represent whether task is done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return isDone ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Returns description of task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @return description of task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Returns whether task is done in the form of a string."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @return status of task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String getDone() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return this.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Represents the task in a format suitable for the user to read."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @return string representation of task"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 69
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Creates a Todo task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Represents the task in a format suitable for the user to read."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @return string representation of task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 27
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    private Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Prints welcome message for user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public void printIntro() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        String logo \u003d \"\\t____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                + \"\\t|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                + \"\\t| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                + \"\\t| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                + \"\\t|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        System.out.println(\"\\tHello from\\n\" + logo);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        printDuke(\"Hello! I\u0027m Duke\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        printDuke(\"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Prints line that encloses Duke\u0027s dialogues."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Scans command from user input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String scanCmd() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return scan.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Prints messages from Duke."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param toPrint string to be printed"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public void printDuke(String toPrint) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        System.out.print(\"\\t\" + toPrint);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Prints a list in Duke format."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param list list containing tasks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String showList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        StringBuilder msg \u003d new StringBuilder();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            Task task \u003d list.get(i);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            msg.append(\"\\t\" + (i + 1) + \". \" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return msg.toString();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Returns a message to be printed once a task is added."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param numOfTasks total number of tasks after a task has been added"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param taskDescription description of the newly added task"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String showAddTaskMessage(int numOfTasks, String taskDescription) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        StringBuilder msg \u003d new StringBuilder();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        msg.append(\"Got it. I\u0027ve added this task:\\n  \" + taskDescription + \"\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        msg.append(\"Now you have \" + numOfTasks + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return msg.toString();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * Prints error messages."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     * @param error the type of error"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public void printError(String error) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        printDuke(error);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String showDeleteMessage(String removedTask, int numOfTasks) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        StringBuilder msg \u003d new StringBuilder();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        msg.append(\"Noted. I\u0027ve removed this task:\\n  \" + removedTask + \"\\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        msg.append(\"Now you have \" + numOfTasks + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return msg.toString();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String showBye() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return \"Bye! Hope to see you again!\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    public String showDone(Task task) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        StringBuilder msg \u003d new StringBuilder();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        msg.append(\"Nice! I\u0027ve marked this task as done:\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        msg.append(\"\\t[\" + task.getStatusIcon() + \"] \" + task.getDesc());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        return msg.toString();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 104
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 19
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    ___________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    1. [T][✓]read book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    2. [D][✘]return book (by: June 6th)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    3. [E][✘]project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    4. [T][✓]join sports club"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "bye"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "T | ✓ | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "D | ✘ | return book | 06/06/2019"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "E | ✘ | project meeting | 06/08/2019 1400-1600"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "T | ✓ | join sports club"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 4
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ~/Desktop/Desktop/School/school/cs2103t/github/duke/bin ~/Desktop/Desktop/School/school/cs2103t/github/duke/src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "java -classpath ~/Desktop/Desktop/School/school/cs2103t/github/duke/bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 34
    }
  },
  {
    "path": "tutorials/javaFxTutorialPart3.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# JavaFX Tutorial 3 – Interacting with the user"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Picking up from where we left off last tutorial, we have successfully achieved the desired layout. Now let’s make the application respond to user input. "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Rather than to do everything in one try, let’s iterate and build up towards our final goal. "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## Iteration 1 – Echoing the User"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "JavaFX has an _event-driven architecture style_. As such, we programmatically define _handler_ methods to execute as a response to certain _events_. When an event is detected, JavaFX will call the respective handlers."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "For Duke, there are two events that we want to respond to, namely the user pressing `Enter` in the `TextField` and left-clicking the `Button`. These are the `onAction` event for the `TextField` and the `onMouseClicked` event for the `Button`."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "For now, let’s have the application add a new `Label` with the text from the `TextField`. Update the `Main` class as follows. You\u0027ll need to add an `import javafx.scene.control.Label;` too."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "@Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Step 1 code here"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    //Step 2 code here"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " * Iteration 1:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " * @param text String containing text to add"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": " * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    return textToAdd;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "Run the program and give it a whirl!"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "![Echo not scrolling as intended](assets/EchoNotScrolling.png)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "At first glance everything appears to work perfectly. However, when the `VBox` stretches beyond the confines of the `ScrollPane`, the `ScrollPane` does not scroll down automatically as expected. We can remedy this by attaching a handler on the `VBox` to react to its own size changing and scrolling the `ScrollPane` down."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "Update the `start` method as shown below."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "public void start(Stage stage) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    // current code ..."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "Verify that the `ScrollPane` scrolls as intended."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "## Iteration 2 – Adding Dialog Boxes"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "In the mockup of the UI, notice that the dialog boxes are composed of two different controls (`ImageView` and `Label`) and reused multiple times. In situations like this, it is often beneficial to create our own custom control."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "Let’s create our custom control `DialogBox`:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "We use the code in our main class just like any other control. Here are the steps to update the code to use the custom control in `Main.java`."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "First, add these imports:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "Next, add two images to the `main/resources/images` folder."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "For this tutorial, we have two images `DaUser.png` and `DaDuke.png` to represent the user avatar and Duke\u0027s avatar respectively but you can use any image you want."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "Image|Filename"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "---|---"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "![DaDuke](../src/main/resources/images/DaUser.png) | `DaUser.png`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bitterg0d"
        },
        "content": "![DaUser](../src/main/resources/images/DaDuke.png) | `DaDuke.png`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "Add a new method to handle user input:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": " * Iteration 2:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": " * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": " * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "private void handleUserInput() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            new DialogBox(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            new DialogBox(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.clear();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": " * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": " * Replace this stub with your completed method."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "private String getResponse(String input) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "Update the event handler code in the `start` method to use the new `handleUserInput` method:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "@Override"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "public void start(Stage stage) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        handleUserInput();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        handleUserInput();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "Run the program and see how it works."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "![DialogBoxes Iteration 2](assets/DialogBoxesIteration2.png) "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "## Iteration 3 – Adding custom behavior to DialogBox"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "One additional benefit of defining a custom control is that we can add behavior specific to our `DialogBox`. Let’s add a method to flip a dialog box such that the image on the left to differentiate between user input and Duke’s output."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": " * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "private void flip() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    db.flip();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    return db;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "You\u0027ll need to update the imports as follows:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "Now, we can go back to the `Main` class and change the event handler to use our new `DialogBox`. "
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "private void handleUserInput() {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.clear();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "Run the application and play around with it. "
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "![DialogBoxes Iteration 3](assets/DialogBoxesIteration3.png)"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "Congratulations! "
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "You have successfully implemented a fully functional GUI for Duke!  "
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "## Exercises"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "1. While the GUI looks similar to the mockup, there are still parts that need to be refined. Try your hand at some of these tasks:"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "   * Add padding between each DialogBox"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "   * Add padding between each ImageView and its Label"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "   * Clip the ImageView into a circle"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "   * Add background color to each dialog box"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "1. After attempting the changes, reflect critically on the following:"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "   * What was the development workflow like?"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "   * Is the code base well-organized?"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "bitterg0d": 2,
      "-": 241
    }
  }
]
