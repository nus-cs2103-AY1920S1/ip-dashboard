[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    private static ArrayList\u003cTask\u003e dukeList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        String initialMessage \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        System.out.println(initialMessage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String[] inputSplit \u003d input.split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                displayDukeList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else if (inputSplit[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                int inputIndex \u003d Integer.parseInt(inputSplit[1]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                int actualListIndex \u003d inputIndex - 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                Task targetTask \u003d dukeList.get(actualListIndex);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                targetTask.markAsDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                System.out.println(targetTask);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else if (inputSplit[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    handleInputTodo(input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else if (inputSplit[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    handleInputDeadline(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else if (inputSplit[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    handleInputEvent(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else if (inputSplit[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                int inputIndex \u003d Integer.parseInt(inputSplit[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                int actualIndex \u003d inputIndex - 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                Task toBeRemoved \u003d dukeList.get(actualIndex);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                System.out.println(toBeRemoved);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                dukeList.remove(actualIndex);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                System.out.println(\"Now you have \" + dukeList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    handleInputUnrecognised(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public static void displayDukeList() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        for (int i \u003d 0; i \u003c dukeList.size(); i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int itemIndex \u003d i + 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String itemDisplay \u003d itemIndex + \".\" + dukeList.get(i).toString();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(itemDisplay);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public static int slashLocator(String sentence) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return sentence.indexOf(\"/\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public static void handleInputTodo(String inputTodo) throws DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        if (inputTodo.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String todoDescription \u003d inputTodo.substring(5);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            Task t \u003d new Todo(todoDescription);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            dukeList.add(t);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(t);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Now you have \" + dukeList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public static void handleInputDeadline(String inputDeadline) throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        if (inputDeadline.length() \u003d\u003d 8) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int slashLocation \u003d slashLocator(inputDeadline);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int firstIndex \u003d slashLocation - 1;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int secondIndex \u003d slashLocation + 4;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String deadlineDescription \u003d inputDeadline.substring(9, firstIndex);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String deadlineBy \u003d inputDeadline.substring(secondIndex);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            Task t \u003d new Deadline(deadlineDescription, deadlineBy);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            dukeList.add(t);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(t);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Now you have \" + dukeList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public static void handleInputEvent(String inputEvent) throws DukeException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        if (inputEvent.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int slashLocation \u003d slashLocator(inputEvent);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int firstIndex \u003d slashLocation - 1;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int secondIndex \u003d slashLocation + 4;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String eventDescription \u003d inputEvent.substring(6, firstIndex);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String eventAt \u003d inputEvent.substring(secondIndex);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            Task t \u003d new Event(eventDescription, eventAt);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            dukeList.add(t);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(t);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Now you have \" + dukeList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public static void handleInputUnrecognised(String inputUnrecognised) throws DukeException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 123,
      "Jeffry Lum": 1,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        String output \u003d \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 27
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 11
    }
  }
]
