[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "T | 0 | Workout"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "E | 1 | music fest | 3/12/1312 0145"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 2
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "E | 1 | music fest | 12/04/4121 1731"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "D | 1 | quest | 31/08/3241 1435"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "T | 0 | workk"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "T | 0 | saybye"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "E | 0 | art | 05/05/1312 0331"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "D | 1 | blah | 11/06/6323 1313"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "D | 0 | eve | 01/03/1312 1832"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "T | 1 | sleeep"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Command is an abstract base class for all commands that the user inputs."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eCommand/code\u003e object corresponds to a command that starts with \"todo\", \"deadline\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * \"event\", \"done\" or \"bye\"."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    protected boolean exit \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the Command class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Abstract method that executes the command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the TaskList object that is handling the arraylist of the datafile"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param ui the UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param storage the Storage object that stores and handles the path to datafile"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException on input error"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public abstract void execute(TaskList list, Ui ui, Storage storage) throws IOException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns whether the program should exit."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the exit variable"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 38
    }
  },
  {
    "path": "src/main/java/seedu/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents a Deadline task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to a task with a command that starts with \"deadline\" and contains"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * a description and a timestamp e.g., \u003ccode\u003edeadline project 3/12/2022 0212\u003c/code\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    protected SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    protected DateFormat printFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HH.mm aa\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    protected Date dateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of Deadline task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param description the description of the deadline task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param dateTime the date and time of the event in the format dd/MM/yyyy HHmm"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Deadline(String description, Date dateTime) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Appends the status icon to the description and formats the date and time."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the String representation of the Deadline object"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + printFormat.format(dateTime) + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Appends the status icon to the description and formats the date and time to be stored"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * in the datafile."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the String representation of the Deadline object to be stored in datafile"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (\"D \" + super.writeToFile() + \" | \" + dateFormat.format(dateTime));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "EvonDong": 51
    }
  },
  {
    "path": "src/main/java/seedu/duke/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents a Deadline Command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eDeadlineCommand/code\u003e object corresponds to a command with a description that starts with \"deadline\" and"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * contains a date and time."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private Date dateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the DeadlineCommand class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param command the description of command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param dateTime the date and time of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public DeadlineCommand(String command, Date dateTime) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Adds the task to the list of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Prints the adding message, the task added and the number of tasks in the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Update the datafile with the new task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the TaskList object that is handling the arraylist of the datafile"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param ui the UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param storage the Storage object that stores and handles the path to datafile"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException on input error"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        list.addTask(new Deadline(command, dateTime));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ui.printAddMsg();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ui.printLatest(list);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ui.printNumTask(list);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        storage.appendToFile(list);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 46
    }
  },
  {
    "path": "src/main/java/seedu/duke/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents a Delete Command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eDeleteCommand/code\u003e object corresponds to a command with a description that starts with \"delete\" and"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * contains the index of the task to be deleted."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the DeleteCommand class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param index the index of the task to be deleted"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Prints the remove message, the task deleted and the number of tasks left in the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Delete the task in the arraylist and updates the datafile."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the TaskList object that is handling the arraylist of the datafile"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param ui the UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param storage the Storage object that stores and handles the path to datafile"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ui.printRemoveMsg();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ui.printLatest(list);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        list.deleteTask(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ui.printNumTask(list);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        storage.writeToFile(list);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 40
    }
  },
  {
    "path": "src/main/java/seedu/duke/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents a Done Command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eDoneCommand/code\u003e object corresponds to a command with a description that starts with \"done\" and"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * contains the index of the task to be marked as done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the DoneCommand class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param index the index of the task to be marked as done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Marked the task as done and updates the status icon of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Updates the status of the task in the datafile."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the TaskList object that is handling the arraylist of the datafile"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param ui the UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param storage the Storage object that stores and handles the path to datafile"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException on input error"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        list.getTask(index).markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        list.getTask(index).updateDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        storage.writeToFile(list);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 39
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents a Personal Assistant Chatbot that helps a person to keep track of various things."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * @author Evon Dong"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * @since 2019-08-28"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor for class Duke."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Loads the data if datafile exists."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param filePath the path to the file where the list of tasks is stored"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException On input error"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Duke(String filePath) throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Handles the user inputs and execute the command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Updates the list of tasks in the datafile according to the commands."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand, ui);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                ui.printErrMsg(e.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                ui.printErrMsg(\"IO Error\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * This is the main method which makes use of the run method."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param args Unused"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException On input error"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 71,
      "-": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * DukeException is the base class of all exceptions thrown in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor for DukeException class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param errorMessage the error message to be thrown"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents the exception thrown when the description of the \"todo\", \"deadline\", \"event\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * command is empty."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the EmptyDescriptionException class"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param errorMessage the error message to be thrown"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public EmptyDescriptionException(String errorMessage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 19
    }
  },
  {
    "path": "src/main/java/seedu/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents a Event task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to a task with a command that starts with \"event\" and contains"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * a description and a timestamp e.g., \u003ccode\u003eevent music festival 3/12/2022 0212\u003c/code\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    protected SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    protected DateFormat printFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HH.mm aa\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    protected Date dateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor for Event class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param description the description of the event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param dateTime the date and time of the event in the format dd/MM/yyyy HHmm"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Event(String description, Date dateTime) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Appends the status icon to the description and formats the date and time."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the String representation of the Event object"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + printFormat.format(dateTime) + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Appends the status icon to the description and formats the date and time to be stored"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * in the datafile."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the String representation of the Event object to be stored in datafile"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (\"E \" + super.writeToFile() + \" | \" + dateFormat.format(dateTime));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 49
    }
  },
  {
    "path": "src/main/java/seedu/duke/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents a Event Command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eEventCommand/code\u003e object corresponds to a command with a description that starts with \"event\" and"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * contains a date and time."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    String command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    Date dateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the EventCommand"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param command the description of the command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param dateTime the date and time of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public EventCommand(String command, Date dateTime) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Adds the task to the list of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Prints the adding message, the task added and the number of tasks in the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Update the data file with the new task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the TaskList object that is handling the arraylist of the datafile"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param ui the UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param storage the Storage object that stores and handles the path to datafile"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException upon incorrect input"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        list.addTask(new Event(command, dateTime));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ui.printAddMsg();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ui.printLatest(list);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ui.printNumTask(list);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        storage.appendToFile(list);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 45
    }
  },
  {
    "path": "src/main/java/seedu/duke/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents a Exit Command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eExitCommand/code\u003e object corresponds to a command with a description \"bye\"."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the ExitCommand class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Sets the exit variable to true and prints the exit message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the TaskList object that is handling the arraylist of the datafile"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param ui the UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param storage the Storage object that stores and handles the path to datafile"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        exit \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents the exception thrown when the user input is invalid."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class InvalidInputException extends DukeException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of InvalidInputException class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param errorMessage the error message to be thrown"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public InvalidInputException(String errorMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents a List Command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eListCommand/code\u003e object corresponds to a command with a description \"list\"."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the ListCommand class"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Prints all the tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the TaskList object that is handling the arraylist of the datafile"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param ui the UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param storage the Storage object that stores and handles the path to datafile"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ui.printList(list);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/MissingTimeStampException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents the exception thrown when the timestamp of the deadline or event"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * command is empty."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class MissingTimeStampException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the MissingTimeStampException."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param errorMessage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public MissingTimeStampException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 18
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Parser is a class that deals with making sense of the user\u0027s commands."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private static int indexOfByAt \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private static SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private static Date dateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the Parser class"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        indexOfByAt \u003d 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        dateTime \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Parses the string containing the date and time into a Date of the format \"dd/MM/yyyy HHmm\"."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param str the string containing the date and time"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the Date of the format \"dd/MM/yyyy HHmm\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws ParseException exception thrown when the string is of a wrong format"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static Date dateParse(String str) throws ParseException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return dateFormat.parse(str);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Takes in a command in the form of a string and direct it to an appropriate command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param command the command that the user input"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param ui the Ui object being used"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the Command object that the user input correspond to"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws DukeException exception thrown when the timestamp or description is missing, or when input is invalid"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws ParseException exception thrown when the timestamp is of incorrect format"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static Command parse(String command, Ui ui) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String[] detailsArray \u003d command.split(\" \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        if (detailsArray.length \u003d\u003d 1 \u0026\u0026 (detailsArray[0].equals(\"todo\") || detailsArray[0].equals(\"deadline\") ||"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                detailsArray[0].equals(\"event\"))) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            throw new EmptyDescriptionException(ui.emptyDescriptionMsg(detailsArray[0]));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            switch (detailsArray[0]) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                return new TodoCommand(String.join(\" \","
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                        Arrays.copyOfRange(detailsArray, 1, detailsArray.length)));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                getDate(detailsArray);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                return new DeadlineCommand(String.join(\" \","
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                        Arrays.copyOfRange(detailsArray, 1, indexOfByAt)), dateTime);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                getDate(detailsArray);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                return new EventCommand(String.join(\" \","
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                        Arrays.copyOfRange(detailsArray, 1, indexOfByAt)), dateTime);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(detailsArray[1]) - 1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                return new DoneCommand(Integer.parseInt(detailsArray[1]) - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                throw new InvalidInputException(ui.invalidInputMsg());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Updates the indexOfByAt variable and the dateTime variable according to the array"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param detailsArray the array containing the description of the command"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws ParseException if the timestamp is of incorrect format"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws MissingTimeStampException if the timestamp is missing, or \"/by\" or \"/at\" is missing"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static void getDate(String[] detailsArray) throws ParseException, MissingTimeStampException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        if (detailsArray[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            for (int i \u003d 0; i \u003c detailsArray.length; i++) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                if (detailsArray[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    dateTime \u003d dateParse(String.join(\" \","
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                            Arrays.copyOfRange(detailsArray, i + 1, detailsArray.length)));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    indexOfByAt \u003d i;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            throw new MissingTimeStampException(\"☹ OOPS!!! Missing timestamp!\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            for (int i \u003d 0; i \u003c detailsArray.length; i++) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                if (detailsArray[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    dateTime \u003d dateParse(String.join(\" \","
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                            Arrays.copyOfRange(detailsArray, i + 1, detailsArray.length)));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    indexOfByAt \u003d i;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            throw new MissingTimeStampException(\"☹ OOPS!!! Missing timestamp!\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the dateTime variable of the command."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the dateTime variable of the command"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Date getDateTime() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the indexOfByAt variable of the command."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the indexOfByAt variable of the command"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public int getIndexOfByAt() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return this.indexOfByAt;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 128
    }
  },
  {
    "path": "src/main/java/seedu/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents the storage that handles the loading of tasks from the file and saving of tasks in the file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    File f;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the Storage class."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Creates a new file if it does not exists."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param filepath the filepath to the data file where the list of tasks will be stored"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException exception thrown if wrong input"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Storage(String filepath) throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        f \u003d new File(filepath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        f.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        f.createNewFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.filePath \u003d filepath;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Read in the data stored in the datafile if it exists."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Creates a new arraylist and add the tasks on the datafile to the arraylist."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param fr the filereader that reads the file"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the arraylist containing the tasks in the datafile"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException if incorrect input"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws ParseException if the date and time in the datafile are in wrong format"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private static ArrayList\u003cTask\u003e readFile(FileReader fr) throws IOException, ParseException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String line \u003d null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            Task t \u003d null;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            String[] splitArr \u003d line.split(\" [|] \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            if (splitArr[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                t \u003d new Todo(splitArr[2]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            } else if(splitArr[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                Date dateTime \u003d dateFormat.parse(splitArr[3]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                t \u003d new Event(splitArr[2], dateTime);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            } else if(splitArr[0].equals(\"D\")){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                Date dateTime \u003d dateFormat.parse(splitArr[3]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                t \u003d new Deadline(splitArr[2], dateTime);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            if(splitArr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                t.updateDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            taskList.add(t);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the arraylist of tasks in the datafile."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the arraylist of tasks in the datafile"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException if the input is wrong"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws ParseException if the date and time in the datafile are in wrong format"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException, ParseException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return readFile(new FileReader(f));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Writes new list of tasks to the datafile, overwriting previous tasks."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param taskList the arraylist of tasks to be written"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException on wrong input"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void writeToFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                fw.write(taskList.getTask(i).writeToFile());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                fw.write(System.lineSeparator() + taskList.getTask(i).writeToFile());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Appends the latest(last) task in the arraylist to the datafile."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param taskList  the arraylist of tasks"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException on wrong input"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void appendToFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        if (taskList.getSize() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                fw.write(taskList.getTask(taskList.getSize()-1).writeToFile());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                fw.write(System.lineSeparator() + taskList.getTask(taskList.getSize()-1).writeToFile());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 117
    }
  },
  {
    "path": "src/main/java/seedu/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eTask\u003c/code\u003e object corresponds to a task with a command that starts"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * with \"todo\", \"event\" or \"deadline\", followed by description."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    int doneIcon;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the Task class"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param description the description of the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        doneIcon \u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Return the status icon depending on whether the task is marked done or not."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the status icon"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (isDone ? \"[✓]\" : \"[✗]\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Sets the isDone variable to true and the doneIcon to 1."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Prints the done message."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.doneIcon \u003d 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                this);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Sets the isDone variable to true and the doneIcon to 1."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void updateDone() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.doneIcon \u003d 1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the description of the task"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Appends the status icon with the description of the task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the string description of the task"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (this.getStatusIcon() + \" \" + this.description);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Appends the done icon with the description of the task."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the string description of the task in the format to be written in the datafile"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (\"| \" + doneIcon + \" | \" + this.description);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 80
    }
  },
  {
    "path": "src/main/java/seedu/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * TaskList is a class that represents the list of tasks and contains operations to manipulate the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the Tasklist class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Another constructor of the Tasklist class with the list of tasks as parameter"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param taskList the arraylist of tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Adds the task to the list of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param t the task to be added"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Deletes the task from the list of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param index the index of the task to be deleted"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the task from the list of tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param index the index of the task to be returned"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the size of the list of tasks."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the size of the list of tasks"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Loops through the list of tasks to find the tasks containing the keywords."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param keyword the keyword that need to be matched"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return an arraylist tasks containing the keywords"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public ArrayList\u003cTask\u003e findMatching(String keyword) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ArrayList\u003cTask\u003e matchingList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            if(taskList.get(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                matchingList.add(taskList.get(i));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return matchingList;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 82
    }
  },
  {
    "path": "src/main/java/seedu/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents a Todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eTodo\u003c/code\u003e object corresponds to a task with a command that starts with \"todo\" and contains"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * a description e.g., \u003ccode\u003etodo read book\u003c/code\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of a Todo class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param description the description of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Appends the status icon to the description of the Todo object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the string representation of the Todo object"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Appends the status icon of the task to the string that will be stored in the data file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return a string that represents the todo task in the data file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (\"T \" + super.writeToFile());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 39
    }
  },
  {
    "path": "src/main/java/seedu/duke/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Represents the Todo Command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * A \u003ccode\u003eTodoCommand/code\u003e object corresponds to a command with a description that starts with \"todo\"."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    String command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the Todo command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param command the description of the command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public TodoCommand(String command) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Adds the task to the list of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Prints the adding message, the task added and the number of tasks in the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Update the data file with the new task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the TaskList object that is handling the arraylist of the data file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param ui the UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param storage the Storage object that stores and handles the path to data file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @throws IOException on the incorrect input"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        list.addTask(new Todo(command));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ui.printAddMsg();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ui.printLatest(list);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ui.printNumTask(list);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        storage.appendToFile(list);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 41
    }
  },
  {
    "path": "src/main/java/seedu/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * Ui is a class that deals with interactions with the user. It contains operations that"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " * read commands by the users and prints messages."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Constructor of the Ui class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Prints the greeting message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String message \u003d \"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                \"What can I do for you?\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Scans the command and return it."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the command that the user input"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the separating line."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the separating line"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public String showLine() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return \"____________________________________________________________\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Prints the exit message."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static void exit() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String byeMessage \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        System.out.println(byeMessage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Prints the error message if the storage cannot load."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static void showLoadingError() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        System.out.println(\"Storage cannot be loaded!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Prints message and all the tasks in the list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the list of tasks"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static void printList(TaskList list) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        for (int j \u003d 0; (j \u003c list.getSize()) \u0026\u0026 list.getTask(j) !\u003d null; j++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            System.out.println(j + 1 + \".\" + list.getTask(j));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Prints the add message."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static void printAddMsg() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Prints the message stating the number of tasks in the list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the list of tasks"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static void printNumTask(TaskList list) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        System.out.println(\"Now you have \" + list.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Prints the remove message."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static void printRemoveMsg() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Prints the latest task in the list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the list of tasks"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static void printLatest(TaskList list) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        System.out.println(list.getTask(list.getSize()-1));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Prints the matching message."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static void printMatchingMsg() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Prints the tasks in the matching list."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param list the list of matching tasks"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static void printMatchingList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        for (int j \u003d 0; (j \u003c list.size()) \u0026\u0026 list.get(j) !\u003d null; j++) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            System.out.println(j + 1 + \".\" + list.get(j));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the empty description error message."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param s the type of task"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the empty description error message"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static String emptyDescriptionMsg(String s) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (\"☹ OOPS!!! The description of a \" + s + \" cannot be empty.\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Returns the invalid input error message."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @return the invalid input error message"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public static String invalidInputMsg() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        return (\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * Prints the error message."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     * @param s the error message"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void printErrMsg(String s) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 151
    }
  },
  {
    "path": "src/test/java/seedu/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void testStringConversion1() throws ParseException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"2/12/2019 1521\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(\"[D][✗] return book (by: 02/12/2019 15.21 PM)\", new Deadline(\"return book\", date).toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void testStringConversion2() throws ParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"2/12/2019 1521\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Deadline deadlineTask \u003d new Deadline(\"return book\", date);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        deadlineTask.markAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(\"[D][✓] return book (by: 02/12/2019 15.21 PM)\", deadlineTask.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void testWriteToFile1() throws ParseException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"2/12/2019 1521\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Deadline deadlineTask \u003d new Deadline(\"return book\", date);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        deadlineTask.markAsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(\"D | 1 | return book | 02/12/2019 1521\", deadlineTask.writeToFile());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 35
    }
  },
  {
    "path": "src/test/java/seedu/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void testStringConversion1() throws ParseException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"2/12/2019 1521\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(\"[E][✗] project meeting (at: 02/12/2019 15.21 PM)\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "                new Event(\"project meeting\", date).toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void testStringConversion2() throws ParseException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"2/12/2019 1521\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Event eventTask \u003d new Event(\"project meeting\", date);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        eventTask.markAsDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(\"[E][✓] project meeting (at: 02/12/2019 15.21 PM)\", eventTask.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void testWriteToFile1() throws ParseException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"2/12/2019 1521\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Event eventTask \u003d new Event(\"project meeting\", date);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        eventTask.markAsDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(\"E | 1 | project meeting | 02/12/2019 1521\", eventTask.writeToFile());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 36
    }
  },
  {
    "path": "src/test/java/seedu/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void dateParseTest() throws ParseException, DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"3/12/1312 0145\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(date, Parser.dateParse(\"3/12/1312 0145\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void getDateTest1() throws ParseException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String[] arr \u003d {\"deadline\", \"art\", \"festival\", \"3/12/131\", \"0145\"};  // missing \"/by\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            Parser.getDate(arr);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } catch (MissingTimeStampException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Missing timestamp!\", e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void getDateTest2() throws ParseException, DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"3/12/1332 0145\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String[] arr \u003d {\"deadline\", \"art\", \"festival\", \"/by\", \"3/12/1332\", \"0145\"};  // missing \"/by\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        parser.getDate(arr);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(date, parser.getDateTime());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(3, parser.getIndexOfByAt());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void parseTest1() throws ParseException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String str \u003d \"deadline\";  // missing description"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            Parser.parse(str, ui);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } catch (InvalidInputException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The description of a \" + \"deadline\" + \" cannot be empty.\", e.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void parseTest2() throws ParseException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        String str \u003d \"blahh\";  // invalid input"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            Parser.parse(str, ui);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } catch (InvalidInputException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 73
    }
  },
  {
    "path": "src/test/java/seedu/duke/TasklistTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class TasklistTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void getTaskTest() throws ParseException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        list.add(new Todo(\"Workout\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"3/12/1312 0145\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Event eventTask \u003d new Event(\"music fest\", date);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        list.add(eventTask);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        TaskList taskList \u003d new TaskList(list);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(eventTask, taskList.getTask(1));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void getSizeTest() throws ParseException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        list.add(new Todo(\"Workout\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(\"3/12/1312 0145\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Event eventTask \u003d new Event(\"music fest\", date);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        list.add(eventTask);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        TaskList taskList \u003d new TaskList(list);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(2, taskList.getSize());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 35
    }
  },
  {
    "path": "src/test/java/seedu/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void testStringConversion1() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(\"[T][✗] read book\", new Todo(\"read book\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void testStringConversion2() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Todo todoTask \u003d new Todo(\"read book\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        todoTask.markAsDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(\"[T][✓] read book\", todoTask.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    public void testWriteToFile1() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        Todo todoTask \u003d new Todo(\"read book\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        todoTask.markAsDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "        assertEquals(\"T | 1 | read book\", todoTask.writeToFile());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 27
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "  [T][✗] borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "  [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "  [E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "[T][✓] borrow book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "1.[T][✓] borrow book"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "2.[D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "3.[E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "☹ OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "  [T][✓] borrow book"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 23
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "blah"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 9
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "if ! javac -cp ../src/main/java/*.java -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EvonDong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EvonDong"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "EvonDong": 34
    }
  }
]
