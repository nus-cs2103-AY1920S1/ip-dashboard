[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "MistyRainforest": 33
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private static ArrayList\u003cListItem\u003e todoList \u003d new ArrayList\u003c\u003e() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            String toReturn \u003d \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            for (int i \u003d 0; i \u003c this.size(); i++) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                toReturn \u003d toReturn.concat((i + 1) + \".\" + this.get(i).toString() + \"\\n     \");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            return toReturn.substring(0, toReturn.length() - 6);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    };"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * Main driver class for Duke."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        dukePrint(\"Hello! I\u0027m Duke\", \"What can I do for you?\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        Scanner consoleScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        String userCommand \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        while (!userCommand.equals(\"exit\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            userInput \u003d consoleScanner.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            userCommand \u003d userInput.split(\" \",2)[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            switch(userCommand) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    dukePrint(todoList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    ListItem target \u003d todoList.get(Integer.parseInt(userInput.split(\" \", 2)[1]) - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    target.done();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    dukePrint(\"Nice! I\u0027ve marked this task as done:\", \"  \" + target);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                        addToTodo(userInput.split(\" \", 2)[1], userCommand);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    //try to catch more exceptions"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    catch (Exception e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                        dukePrint(\"☹ OOPS!!! The description of a \" + userCommand + \" cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                        removeFromTodo(userInput.split(\" \", 2)[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    catch (Exception e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                        dukePrint(\"Nothing to delete\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    dukePrint(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        dukePrint(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * Echos string."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * @param echoedString targeted String to be echoed"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private static void echo(String echoedString) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        dukePrint(echoedString);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * Prints what Duke says in correct format."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * @param texts any number of String arguments"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     *              each prints on a new line."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private static void dukePrint(Object... texts) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        System.out.println(\"    _____________________________\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        for (Object text : texts) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            System.out.println(\"     \" + text);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        System.out.println(\"    _____________________________\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private static void addToTodo(String description, String command) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        todoList.add(new ListItem(description, command));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        dukePrint(\"Got it. I\u0027ve added this task:\" + \"\\n      \" + todoList.get(todoList.size() - 1),"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                \"Now you have \" + todoList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private static void removeFromTodo(String description) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        ListItem target \u003d todoList.get(Integer.parseInt(description) - 1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        todoList.remove(target);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        dukePrint(\"Noted. I\u0027ve removed this task:\" + \"\\n      \" + target,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                \"Now you have \" + todoList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 6,
      "MistyRainforest": 97
    }
  },
  {
    "path": "src/main/java/ListItem.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "public class ListItem {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private String status;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private boolean isDone \u003d false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private String date \u003d \"\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    public ListItem(String description, String command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    this.status \u003d \"[T]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    this.status \u003d \"[E]\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    this.description \u003d description.split(\"/\")[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    this.date \u003d \"(at: \" + description.split(\"/\")[1] + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    this.status \u003d \"[D]\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    this.description \u003d description.split(\"/\")[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    this.date \u003d \"(by: \" + description.split(\"/\")[1] + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        catch (Error e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    void done() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        String toReturn;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            toReturn \u003d \"[✓] \" + this.description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            toReturn \u003d \"[✗] \" + this.description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        return this.status + toReturn + this.date;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MistyRainforest": 49
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MistyRainforest": 5
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "HELP"
      }
    ],
    "authorContributionMap": {
      "MistyRainforest": 1
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "HELP"
      }
    ],
    "authorContributionMap": {
      "MistyRainforest": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "MistyRainforest": 21
    }
  }
]
