[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    private List\u003cTask\u003e myList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        myList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return myList.size();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public void add(Task newTask) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        myList.add(newTask);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        sb.append(\"\\n  \"+newTask);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        sb.append(\"\\nNow you have \"+getSize()+\" tasks in the list.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        print(sb.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        for(int i \u003d 0; i \u003c getSize(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            sb.append(\"\\n\"+(i+1)+\".\"+myList.get(i));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        print(sb.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public void markDone(int number) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        Task doneTask \u003d myList.get(number-1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        doneTask.changeStatus();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        sb.append(\"\\n\"+doneTask);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        print(sb.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public void delete(int number){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        Task deletedTask \u003d myList.get(number-1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        sb.append(\"\\n\"+deletedTask);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        myList.remove(number-1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        print(sb.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    private void print(String str) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        String[] lines \u003d str.split(\"\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        for(String line:lines) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            sb.append(\"\\n     \"+line);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        sb.append(\"\\n    ____________________________________________________________\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        System.out.println(sb.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    private void greet() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        print(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        String query \u003d sc.nextLine();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        String[] parts \u003d query.split(\" \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        String des \u003d \"\", date \u003d \"\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        int index \u003d 0, number \u003d 0;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        while(!query.equals(\"bye\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                if(parts.length \u003d\u003d 0) throw new DukeException(\"Your input cannot be empty.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                switch(parts[0]) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        duke.list();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        if(parts.length \u003d\u003d 1) throw new DukeException(\"The description of a done cannot be empty.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        number \u003d Integer.parseInt(parts[1]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        if(number \u003e duke.getSize() || duke.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                            throw new DukeException(\"It\u0027s an invalid task\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        duke.markDone(number);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        if(parts.length \u003d\u003d 1) throw new DukeException(\"The description of a delete cannot be empty.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        number \u003d Integer.parseInt(parts[1]);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        if(number \u003e duke.getSize() || duke.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                            throw new DukeException(\"It\u0027s an invalid task\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        duke.delete(number);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        if(parts.length \u003d\u003d 1) throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        des \u003d query.substring(\"todo\".length()+1);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        duke.add(new Todo(des));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        if(parts.length \u003d\u003d 1) throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        index \u003d query.lastIndexOf(\"/\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        if(index \u003d\u003d -1 || index+4 \u003e\u003d query.length()) throw new DukeException(\"Please provide a time for your deadline task\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        if(\"deadline\".length()+1 \u003e\u003d index-1) throw new DukeException(\"Please provide a proper name for your deadline task\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        des \u003d query.substring(\"deadline\".length()+1, index-1);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        date \u003d query.substring(index+4);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        duke.add(new Deadline(des, date));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        if(parts.length \u003d\u003d 1) throw new DukeException(\"The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        index \u003d query.lastIndexOf(\"/\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        if(index \u003d\u003d -1 || index+4 \u003e\u003d query.length()) throw new DukeException(\"Please provide a time for your event task\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        if(\"event\".length()+1 \u003e\u003d index-1) throw new DukeException(\"Please provide a proper name for your event task\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        des \u003d query.substring(\"event\".length()+1, index-1);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        date \u003d query.substring(index+4);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        duke.add(new Event(des, date));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            }catch(DukeException ex){"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                duke.print(ex.toString());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            }finally {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                query \u003d sc.nextLine();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "                parts \u003d query.split(\" \");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        duke.exit();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 131,
      "-": 8
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    String message;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return \"\\tOOPS!!! \" + this.message;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 11
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return (isDone ? \"+\" : \"-\"); //return tick or X symbols"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public void changeStatus() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return \"[\"+this.getStatusIcon()+\"] \"+this.getDescription();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 26
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 11
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "       [T][-] borrow book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     1.[T][-] borrow book"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "       [D][-] return book (by: Sunday)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "       [E][-] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     [D][+] return book (by: Sunday)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     [D][+] return book (by: Sunday)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 40
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Task.java ..\\src\\main\\java\\Todo.java ..\\src\\main\\java\\Event.java ..\\src\\main\\java\\Deadline.java ..\\src\\main\\java\\DukeException.java ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CoderStellaJ"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "CoderStellaJ": 21
    }
  }
]
