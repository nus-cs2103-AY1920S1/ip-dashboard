[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "public class AddCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public AddCommand(Task task){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public Task getTask(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        tasks.add(this.task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        System.out.println(\"\\t Got it I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        System.out.println(\"\\t \" + tasks.getLatest());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        System.out.println(\"\\t Now you have \" + tasks.getLength() + \" in the list\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronLuk": 21
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) throws IOException, ParseException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        super.isExit \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        return super.isExit();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "AaronLuk": 17
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    protected String taskMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    protected boolean isExit \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public abstract void execute(TaskList tasks, Storage storage) throws IOException, ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        return taskMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronLuk": 17
    }
  },
  {
    "path": "src/main/java/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "public class Deadlines extends Task{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    private SimpleDateFormat sdf;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public Deadlines(String name, String time){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        deadline \u003d \"[D]\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        sdf \u003d new SimpleDateFormat(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public String convertDate() throws ParseException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        date \u003d sdf.parse(this.time);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        return sdf.format(date);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        if(done){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            return deadline + \"[✓] \" + name + \" (by: \" + time + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            return deadline + \"[X] \" + name + \" (by: \" + time + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public String toFile() throws ParseException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        if(done){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            return \"D | 1 | \" + name + \" | \" +  convertDate();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            return \"D | 0 | \" + name + \" | \" +  convertDate();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronLuk": 39
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public DeleteCommand(int index){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) throws IOException, ParseException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        System.out.println(\"\\t Noted, I\u0027ve removed this task:)\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        System.out.println(\"\\t   \" + tasks.getTask(index));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        tasks.deleteTask(index);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        System.out.println(\"\\t Now you have \" + tasks.getLength() + \" in the list\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronLuk": 19
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public DoneCommand(int index){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) throws IOException, ParseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        tasks.setDone(index);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        System.out.println(\"\\t   \" + tasks.getTask(index));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronLuk": 17
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    InputManager manager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    boolean exit;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    String line;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public Duke(String FilePath) throws IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        storage \u003d new Storage(FilePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        manager \u003d new InputManager();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        exit \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        line \u003d \"\\t_____________________________________________\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        System.out.println(\"Hello I\u0027m Duke\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public void run() throws IOException, ParseException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        while(exit \u003d\u003d false){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            Command c \u003d InputManager.parse(command);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            c.execute(tasks, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            exit \u003d c.isExit();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//        while(exit \u003d\u003d false){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//            if(input.equals(\"bye\")){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                System.out.println(line);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                System.out.println(\"\\t Bye. Hope to see you soon!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                System.out.println(line);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                storage.save(TaskList.getTasks());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                exit \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//            } else if(input.equals(\"list\")){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                System.out.println(line);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                manager.readList();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                System.out.println(line);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//            } else if(input.contains(\"done\")){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                int no \u003d Character.getNumericValue(input.charAt(5));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                manager.setDone(no);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                System.out.println(line);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                System.out.println(\"\\t   \" + manager.getTask(no));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                System.out.println(line);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//            } else if(input.contains(\"delete\")){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                int no \u003d Character.getNumericValue(input.charAt(7));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                System.out.println(line);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                System.out.println(\"\\t Noted, I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                manager.delete(no);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                System.out.println(line);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//            } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                System.out.println(line);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                manager.readInput(input);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                System.out.println(line);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public static void main(String[] args) throws IOException, ParseException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        new Duke(\"src/main/java/data.txt\").run();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronLuk": 76,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public DukeException(){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        errorMessage \u003d \"OOP!!! DONT KNOW WHAT THAT MEANS\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public DukeException(String action){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronLuk": 12
    }
  },
  {
    "path": "src/main/java/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    private String event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    private SimpleDateFormat sdf;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public Events(String name, String time){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        this.time \u003d time.trim();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        event \u003d \"[E]\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        sdf \u003d new SimpleDateFormat(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public String convertDate() throws ParseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        date \u003d sdf.parse(this.time);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        return sdf.format(date);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        if(done){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            return event + \"[✓] \" + name + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            return event + \"[X] \" + name + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public String toFile() throws ParseException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        if(done){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            return \"E | 1 | \" + name + \" | \" +  convertDate();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            return \"E | 0 | \" + name + \" | \" +  convertDate();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronLuk": 39
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    String wordToFind;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    ArrayList\u003cTask\u003e searchResults;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public FindCommand(String word){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        wordToFind \u003d word;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) throws IOException, ParseException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        searchResults \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        for(Task t: tasks.getTasks()){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            if(t.toString().contains(wordToFind)){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                searchResults.add(t);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        if(searchResults.isEmpty()){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            System.out.println(\"\\t Sorry no matches\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            for(Task task : searchResults){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                 System.out.println(\"\\t \" + counter + \". \" + task.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                 counter++;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronLuk": 32
    }
  },
  {
    "path": "src/main/java/InputManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "public class InputManager {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public InputManager(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public static Command parse(String input){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        String[] words \u003d input.split(\" \",2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        String action \u003d words[0];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        switch(action) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                if (words.length \u003c 2) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                    System.out.println(\"OOPS DONE KNOW WHAT THAT MEANS\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                    int index \u003d Integer.parseInt(words[1].trim());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                    return new DoneCommand(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                if (words.length \u003c 2) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                    System.out.println(\"OOPS DONE KNOW WHAT THAT MEANS\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                    int index \u003d Integer.parseInt(words[1].trim());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                    return new DeleteCommand(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                if (words.length \u003c 2) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                    System.out.println(\"OOPS DESCRIPTION OF TODO CANT BE EMPTY\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                    return new AddCommand(new ToDos(words[1].trim()));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                if (words.length \u003c 2) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                    System.out.println(\"OOPS DESCRIPTION OF EVENT CANT BE EMPTY\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                    String[] details \u003d words[1].split(\" /at \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                    return new AddCommand(new Events(details[0].trim(), details[1].trim()));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                if (words.length \u003c 2) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                    System.out.println(\"OOPS DESCRIPTION OF DEADLINE CANT BE EMPTY\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                    String[] details \u003d words[1].split(\" /by \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                    return new AddCommand(new Deadlines(details[0].trim(), details[1].trim()));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                if(words.length \u003c 2){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                    System.out.println(\"OOPS DESCRIPTION OF FIND CANT BE EMPTY\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                    return new FindCommand(words[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                System.out.println(\"OOPS DONT KNOW WHAT THAT MEANS\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    //adds task into the memo list"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    public void addInput(String type, String task, String time){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//        thisList.add(type, task, time);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    //adds task into the memo list"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    public void addInput(String type, String task){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//        thisList.add(type,task);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    //processes task and finds the type  and time"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    public void readInput(String input){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//        if(!input.contains(\"todo\")\u0026\u0026!input.contains(\"event\")\u0026\u0026 !input.contains(\"deadline\")){"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//            System.out.println(\"\\t OOPS DONT KNOW WHAT THAT MEANS\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//            if(!input.contains(\" \")){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                System.out.println(\"\\t OOPS DESCRIPTION CANNOT BE EMPTY\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//            } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                int firstSpace;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                firstSpace \u003d input.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                type \u003d input.substring(0, firstSpace);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                    task \u003d input.substring(firstSpace + 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                    addInput(type, task);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                    acknowledge();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                } else if (type.equals(\"deadline\") || type.equals(\"event\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                        int timeStamp \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                        time \u003d input.substring(timeStamp + 4);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                        task \u003d input.substring(firstSpace + 1, timeStamp - 1);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                        addInput(type, task, time);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                        acknowledge();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    //lists all the tasks in the memo list"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    public void readList(){"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//        System.out.println(thisList.toString());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    //marks task as done"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    public void setDone(int taskNo){"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//        thisList.setDone(taskNo);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    //returns which task got completed"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    public String getTask(int taskNo){"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//        return thisList.getTask(taskNo);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    //prints acknowledgement paragraph"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    public void acknowledge(){"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//       System.out.println(acknowledgement);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//       System.out.println(fetch());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//       System.out.println(\"\\t Now you have \" + thisList.getLength() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    //fetches task from memolist"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    public String fetch(){"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//        return \"\\t  \" + thisList.getLatest();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    //handles case for unknown memo type"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    private void handleUnknownType(){"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//        System.out.println(\"OOPS!!! I\u0027m sorry, but I dont\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    //deletes memo from list"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    public void delete(int taskNo){"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//        System.out.println(\"\\t   \" + thisList.getTask(taskNo));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//        thisList.deleteMemo(taskNo);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//        System.out.println(\"\\t Now you have \" + thisList.getLength() + \" in the list\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronLuk": 135
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        System.out.println(tasks.toString());"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronLuk": 8
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "public class Storage{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public Storage(String filePath){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws  FileNotFoundException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        SimpleDateFormat timeFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        while(sc.hasNextLine()){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            String[] text \u003d sc.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            Task t;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            switch (text[0]){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                    t \u003d new ToDos(text[2]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                    t \u003d new Deadlines(text[2], text[3]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                    t \u003d new Events(text[2], text[3]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                    t \u003d new Task(\"\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            if (text[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                t.setDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            } else {}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            tasks.add(t);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e tasks) throws IOException, ParseException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        FileWriter writer \u003d new FileWriter(\"src/main/java/data.txt\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        for(Task t: tasks){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            writer.write(t.toFile() + System.lineSeparator());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronLuk": 63
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public Task(String name){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        done \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    //prints the name of the task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    //sets the task to completed"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public void setDone(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    //returns state of task i.e completed or not"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public boolean isDone(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public String toFile() throws ParseException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronLuk": 28
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        tasks \u003d list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public void add(Task t){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        for(Task task : tasks){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            if(task.isDone()){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                list +\u003d \"\\t \" +counter + \".\"+ task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                list +\u003d \"\\t \" +counter + \".\"+ task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    //sets the task inside the list to completed"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public void setDone(int no){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        tasks.get(no-1).setDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    //returns name of the task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public String getTask(int no){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        return tasks.get(no-1).toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    //returns length of memo list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public int getLength(){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    //returns latest added memo"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public String getLatest(){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        return tasks.get(tasks.size()-1).toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    //deletes the task from list"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public void deleteTask(int no){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        if(tasks.size()\u003e0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            tasks.remove(no - 1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            System.out.println(\"Task list is already empty\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    //returns entire list of tasks"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public static ArrayList\u003cTask\u003e getTasks(){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronLuk": 59
    }
  },
  {
    "path": "src/main/java/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    private String todo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public ToDos(String name){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        todo \u003d \"[T]\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        if(done){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            return todo + \"[✓] \" + name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            return todo + \"[X] \" + name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public String toFile(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        if(done){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            return \"T | 1 | \" + name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "            return \"T | 0 | \" + name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronLuk": 24
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    private String line;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    private String greeting;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    private String logo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public UI(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        line \u003d \"\\t_____________________________________________\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        greeting \u003d \"\\t Hello I\u0027m Duke\\n\\tWhat can I do for you?\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public void greet(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    public void line(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AaronLuk": 27
    }
  },
  {
    "path": "src/main/java/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "D | 0 | return book | 06-06-2019 22:00"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "E | 0 | project meeting | 06-08-2019 14:00"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AaronLuk"
        },
        "content": "D | 1 | sleep | 22-06-1997 22:00"
      }
    ],
    "authorContributionMap": {
      "AaronLuk": 4
    }
  }
]
