[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "run {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "test {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 46,
      "-": 15
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "![UI screenshot](Ui.png)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "### Add tasks"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "The user can add Deadline, Event and Todo tasks to a list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "### Mark tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "The user can mark tasks as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "### Remove tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "The user can delete tasks from the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "### List tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "The user can view tasks currently in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "### Find tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "The user can search for a task in the list by a keyword."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "### Set data source"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "The user can set the data source for reading or writing."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "### View commands"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "The user can view available commands."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "### `deadline` - Adds a new Deadline task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Adds a new task that needs to be done by a specific date/time."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "`deadline \u003csubject\u003e /by \u003cdate/time\u003e`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "`Creates a new deadline task with the given subject description`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "### `event` - Adds a new Event task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Adds a new task that starts and ends at a specific date/time."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "`event \u003csubject\u003e /at \u003cdate/time\u003e`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "`Creates a new event task with the given subject description`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "### `todo` - Adds a new Todo task"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Adds a new task without any date/time attached to it."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "`todo \u003csubject\u003e`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "`Creates a new todo task with the given subject description`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "### `done` - Completes a task"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Marks a task as done."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "`done \u003cnumber\u003e`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "`Updates specific numbered task as done`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "### `delete` - Removes a task"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Removes a task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "`delete \u003cnumber\u003e`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "`Removes specific numbered task from list`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "### `list` - Displays current tasks"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Displays current tasks."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "`Displays current tasks in the list`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "### `find` - Searches for task by keyword"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Searches for task by keyword."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "`find \u003ckeyword\u003e`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "`Creates a new deadline task with the given description`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "### `read` - Changes data source for reading"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Changes data source for reading, replacing default source of `data/tasks.txt`."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "`read \u003cfilename\u003e`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "`Sets specified file as data source for reading`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "### `write` - Changes data source for writing"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Changes data source for writing, replacing default source of `data/tasks.txt`."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "`write \u003cfilename\u003e`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "`Sets specified file as data source for writing`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "### `help` - Displays available commands"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "Displays available commands."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "`Displays help list of available commands`"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 133,
      "-": 14
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * Represents a task that needs to be done before a specific date/time."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to a task represented by"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * two Strings e.g., \u003ccode\u003e\"submit report\",\"11/10/2019 5pm\"\u003c/code\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /** Date/time deadline for this task. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Constructs a \u003ccode\u003eDeadline\u003c/code\u003e with a task description and"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * task deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param by Deadline of task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Constructs a \u003ccode\u003eDeadline\u003c/code\u003e with task done indicator,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * task description and task deadline."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param indicator Done indication of task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param by Deadline of task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Deadline(String indicator, String description, String by) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        if (indicator.equals(\"1\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            this.setDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            assert indicator.equals(\"0\") : \"String indicator should be 0\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns condensed description of specified deadline task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Condensed description."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String formatString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return String.format(\"D | %d | %s | %s\", super.isDone ? 1 : 0, super.description, by);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 55
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.scene.paint.ImagePattern;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private static final Color DUKE_COLOR \u003d Color.POWDERBLUE;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private static final Color USER_COLOR \u003d Color.LIGHTGREEN;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private static final CornerRadii DIALOG_CORNERS \u003d new CornerRadii(10,10,10,10,false);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private DialogBox(String text, Image img, Color fill) throws IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        fxmlLoader.load();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        dialog.setPadding(new Insets(5));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        dialog.setBackground(new Background(new BackgroundFill(fill, DIALOG_CORNERS, Insets.EMPTY)));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        Circle profile \u003d new Circle(49.5, 49.5, 49.5);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        profile.setFill(new ImagePattern(img));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        displayPicture.setClip(profile);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns a horizontal box containing user input and image."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param text User input."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param img User image."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return User dialog box."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return new DialogBox(text, img, USER_COLOR);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns a horizontal box containing chatbot input and image."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param text Chatbot input."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param img Chatbot image."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Chatbot dialog box."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) throws IOException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        var db \u003d new DialogBox(text, img, DUKE_COLOR);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 88
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * Represents a chatbot assistant. A \u003ccode\u003eDuke\u003c/code\u003e object corresponds"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * to a chatbot that has \u003ccode\u003eStorage\u003c/code\u003e, \u003ccode\u003eTaskList\u003c/code\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * and \u003ccode\u003eUi\u003c/code\u003e."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Constructs a \u003ccode\u003eDuke\u003c/code\u003e object with a storage filepath."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param filePath Storage filepath."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns initialised \u003ccode\u003eUi\u003c/code\u003e of specified chatbot."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Initialised \u003ccode\u003eUi\u003c/code\u003e."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        ui.setStorage(storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        ui.setList(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Initiates the chatbot to take user input."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void run() throws IOException, ParseException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        ui.initiate(storage, tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public static void main(String[] args) throws IOException, ParseException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 54,
      "-": 1
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * Represents an exception encountered by \u003ccode\u003eDuke\u003c/code\u003e."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Creates a \u003ccode\u003eDukeException\u003c/code\u003e from an error message."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        super(String.format(\"OOPS!!! %s\\n\", message));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 14
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * Represents a task that starts and ends at a specific time."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to a task represented by"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * two Strings e.g., \u003ccode\u003e\"team project meeting\",\"2/10/2019 2-4pm\"\u003c/code\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /** Event time for this task. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Constructs a \u003ccode\u003eEvent\u003c/code\u003e with a task description and"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * task event time."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param at Event time of task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Constructs a \u003ccode\u003eEvent\u003c/code\u003e with task done indicator,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * task description and task event time."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param indicator Done indication of task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param at Event time of task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Event(String indicator, String description, String at) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        if (indicator.equals(\"1\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            this.setDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            assert indicator.equals(\"0\") : \"String indicator should be 0\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns condensed description of specified event task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Condensed description."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String formatString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return String.format(\"D | %d | %s | %s\", super.isDone ? 1 : 0, super.description, at);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 55
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 11
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private Ui ui \u003d new Duke(\"data/tasks.txt\").getUi();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void start(Stage stage) throws IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        fxmlLoader.\u003cMainWindow\u003egetController().setUi(ui);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 27
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Initializes a pane as the main window."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void initialize() throws IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String greeting \u003d String.format(\"%s\\n%s\\n\\n%s\\n\", \"Hello! I\u0027m Duke\", \"What can I do for you?\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                \"Enter \u0027help\u0027 for a list of commands\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                DialogBox.getDukeDialog(greeting, dukeImage)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void setUi(Ui u) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        ui \u003d u;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private void handleUserInput() throws IOException, ParseException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String response \u003d ui.getResponse(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        if (!input.startsWith(\"read\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            ui.write();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 75
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * Represents a parser that makes sense of user commands."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns parsed command from given user command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Parsed command is represented by an array that contains"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * command type and command details."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param input User command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Parsed command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public static String[] parseCommand(String input) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String[] parseInfo \u003d new String[2];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        if (input.matches(\"(done|delete)\\\\s+\\\\d+|(todo|find)\\\\s+.+|deadline\\\\s+.+/by.+|event\\\\s+.+/at.+\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"|(read|write)\\\\s+.+\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo \u003d input.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[0] \u003d \"list\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } else if (input.equals(\"help\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[0] \u003d \"help\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo[0] \u003d \"unknown\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return parseInfo;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns parsed details from given command details."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Parsed details represented by array that contains task description"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * and task date/time information."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param input Command details."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Parsed details."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public static String[] parseDetails(String input) throws ParseException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String[] parseInfo;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        if (input.contains(\"/by\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo \u003d input.split(\"\\\\s+/by\\\\s+\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            assert input.contains(\"/at\") : \"String input should contain /at\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            parseInfo \u003d input.split(\"\\\\s+/at\\\\s+\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        parseInfo[1] \u003d convertDate(parseInfo[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return parseInfo;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns date/time in text format from date/time in numerical format."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param date Numerical date/time."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Textual date/time."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public static String convertDate(String date) throws ParseException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        SimpleDateFormat numDateTime \u003d new SimpleDateFormat(\"d/M/y HHmm\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        SimpleDateFormat textDateTime \u003d new SimpleDateFormat(\"d MMMM y, h.mma\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        if (date.matches(\"\\\\d+/\\\\d+/\\\\d+\\\\s+\\\\d+\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            Date d \u003d numDateTime.parse(date);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            date \u003d textDateTime.format(d);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 77
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * Represents a storage handler that loads from and saves task to a file location."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * A \u003ccode\u003eStorage\u003c/code\u003e object corresponds to a storage handler that interacts"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * with a \u003ccode\u003eFile\u003c/code\u003e."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private File diskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Constructs a \u003ccode\u003eStorage\u003c/code\u003e based on a storage filepath."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param filePath Storage filepath."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        diskList \u003d new File(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns updated list of tasks from specified storage."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @throws DukeException If diskList does not exist."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        Scanner s;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            s \u003d new Scanner(diskList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            throw new FileNotFoundException(\"File not on disk\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            String[] savedTasks \u003d s.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            switch (savedTasks[0]) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                tasks.add(new Todo(savedTasks[1], savedTasks[2]));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                tasks.add(new Deadline(savedTasks[1], savedTasks[2], savedTasks[3]));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                tasks.add(new Event(savedTasks[1], savedTasks[2], savedTasks[3]));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                assert false : \"Saved task should only begin with either T, D or E\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Overwrites stored list of tasks with given list of tasks."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void overWrite(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        new File(\"data\").mkdir();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        diskList.createNewFile();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        boolean first \u003d true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            String s \u003d t.formatString();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            if (first) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                sb.append(s);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                first \u003d false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                sb.append(String.format(\"\\n%s\", s));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        FileWriter fw \u003d new FileWriter(diskList);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        fw.write(sb.toString());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 91
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * Represents a task with a description and state."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * A \u003ccode\u003eTask\u003c/code\u003e object corresponds to a task represented by"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * a String and a boolean e.g., \u003ccode\u003e\"read book\",true\u003c/code\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /** Description of task. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /** State of task. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Constructs a \u003ccode\u003eTask\u003c/code\u003e with a task description and"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * initial state being false."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns symbolic status of specified task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Symbolic status."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); // return tick or X symbols"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns true if specified task has description which contains given keyword."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param keyword Possible word in task description."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return True if task description has keyword."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public boolean hasKeyword(String keyword) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return description.contains(keyword);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns condensed description of specified task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Condensed description."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public abstract String formatString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 58
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * Represents a list of tasks. A \u003ccode\u003eTaskList\u003c/code\u003e object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * corresponds to a list of tasks represented by an \u003ccode\u003eArrayList\u003c/code\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * of \u003ccode\u003eTask\u003c/code\u003e and an integer."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private int numTask;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Constructs a new \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        numTask \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Constructs a \u003ccode\u003eTaskList\u003c/code\u003e from an existing list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param existingTasks Existing list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e existingTasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        this.tasks \u003d existingTasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        numTask \u003d existingTasks.size();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public int getNumTask() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return numTask;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns last \u003ccode\u003eTask\u003c/code\u003e that was added to the list of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Last \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Task getTask() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return tasks.get(numTask - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns \u003ccode\u003eTask\u003c/code\u003e at specified index of the list of tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param i List index."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return \u003ccode\u003eTask\u003c/code\u003e at index position."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Task getTask(int i) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return tasks.get(i);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Updates and returns a \u003ccode\u003eTask\u003c/code\u003e as done based on task number."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param index Task number."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Done \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Task getDoneTask(String index) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        Task t \u003d tasks.get(Integer.valueOf(index) - 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        t.setDone();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Updates list of task with a new \u003ccode\u003eTodo\u003c/code\u003e."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param detail Task details."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void addTodoTask(String detail) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        tasks.add(new Todo(detail));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        numTask++;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Updates list of task with a new \u003ccode\u003eDeadline\u003c/code\u003e."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param details Task details in array."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void addDeadlineTask(String[] details) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        tasks.add(new Deadline(details[0], details[1]));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        numTask++;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Updates list of task with a new \u003ccode\u003eEvent\u003c/code\u003e."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param details Task details in array."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void addEventTask(String[] details) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        tasks.add(new Event(details[0], details[1]));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        numTask++;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Removes a \u003ccode\u003eTask\u003c/code\u003e from list of tasks based on task number."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param index Task number."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Removed \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Task deleteTask(String index) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        int listRank \u003d Integer.valueOf(index) - 1;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        Task t \u003d tasks.get(listRank);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        tasks.remove(listRank);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        numTask--;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        StringBuilder response \u003d new StringBuilder();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        for (int i \u003d 0; i \u003c numTask; i++) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            response.append(String.format(\"%d.%s\", i + 1, getTask(i)) + \"\\n\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return response.toString();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 124
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * Represents a task without any specific date/time."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * A \u003ccode\u003eTodo\u003c/code\u003e object corresponds to a task represented by"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * one String e.g., \u003ccode\u003e\"visit new theme park\"\u003c/code\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Constructs a \u003ccode\u003eTodo\u003c/code\u003e with a task description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Constructs a \u003ccode\u003eTodo\u003c/code\u003e with task done indicator and task description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param indicator Done indication of task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public Todo(String indicator, String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        if (indicator.equals(\"1\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            this.setDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            assert indicator.equals(\"0\") : \"String indicator should be 0\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns condensed description of specified todo task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Condensed description."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String formatString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return String.format(\"T | %d | %s\", super.isDone ? 1 : 0, super.description);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 46
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " * Represents a user interface that deals with the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private static final String LOADING_ERROR \u003d \"No existing task list can be loaded. New task list will be created.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private Storage mainStorage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private TaskList mainTaskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void setStorage(Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        mainStorage \u003d storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void setList(TaskList taskList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        mainTaskList \u003d taskList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Sets up the user interface to take in user commands."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param storage Storage handling."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param taskList Task handling."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void initiate(Storage storage, TaskList taskList) throws IOException, ParseException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        mainStorage \u003d storage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        mainTaskList \u003d taskList;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String greeting \u003d String.format(\"\\n%s\\n%s\\n\", \"Hello! I\u0027m Duke\", \"What can I do for you?\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        System.out.println(logo + greeting);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            System.out.println(getResponse(input));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            write();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            if (sc.hasNext()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Prints out loading error message."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        System.out.println(LOADING_ERROR);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns task addition response given specified list of task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param taskList List of task."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Task addition response."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String getTaskAddition(TaskList taskList) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        message.append(\"Got it. I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        message.append(taskList.getTask());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return message.toString();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Returns chatbot response based on user commands."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @param input User commands."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * @return Chatbot response."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public String getResponse(String input) throws ParseException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        StringBuilder response \u003d new StringBuilder();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        if (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            String[] parseInfo \u003d Parser.parseCommand(input);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            int currentNum \u003d mainTaskList.getNumTask();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            switch (parseInfo[0]) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                int doneNum \u003d Integer.valueOf(parseInfo[1]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                if (doneNum \u003e 0 \u0026\u0026 doneNum \u003c\u003d currentNum) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    response.append(\"Nice! I\u0027ve marked this task as done:\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    response.append(mainTaskList.getDoneTask(parseInfo[1]) + \"\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    response.append(\"Task does not exist\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                int delNum \u003d Integer.valueOf(parseInfo[1]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                if (delNum \u003e 0 \u0026\u0026 delNum \u003c\u003d currentNum) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    response.append(\"Noted. I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    response.append(mainTaskList.deleteTask(parseInfo[1]) + \"\\n\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    response.append(\"Task does not exist\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                mainTaskList.addTodoTask(parseInfo[1]);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                response.append(getTaskAddition(mainTaskList) + \"\\n\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                mainTaskList.addDeadlineTask(Parser.parseDetails(parseInfo[1]));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                response.append(getTaskAddition(mainTaskList) + \"\\n\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                mainTaskList.addEventTask(Parser.parseDetails(parseInfo[1]));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                response.append(getTaskAddition(mainTaskList) + \"\\n\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"read\":"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                response.append(\"Data source for reading has been changed\\n\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    setList(new TaskList(new Storage(\"data/\" + parseInfo[1]).load()));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    response.append(LOADING_ERROR + \"\\n\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    setList(new TaskList());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"write\":"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                response.append(\"Data source for writing has been changed\\n\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                setStorage(new Storage(\"data/\" + parseInfo[1]));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                response.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                response.append(mainTaskList);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                response.append(getHelpMessage());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                response.append(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                for (int i \u003d 0, j \u003d 0; i \u003c mainTaskList.getNumTask(); i++) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    Task current \u003d mainTaskList.getTask(i);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    if (current.hasKeyword(parseInfo[1])) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                        response.append(String.format(\"%d.%s\", ++j, current) + \"\\n\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    if (input.matches(\"todo|deadline|event|done|find|read|write\")) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                        String message \u003d String.format(\"The description of a %s cannot be empty.\", input);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                        throw new DukeException(message);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                } catch (DukeException exception) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                    response.append(exception.getMessage());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            if (currentNum !\u003d mainTaskList.getNumTask()) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                response.append(String.format(\"Now you have %d tasks in the list.\\n\", mainTaskList.getNumTask()));"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            response.append(\"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return response.toString();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     * Calls for \u003ccode\u003eStorage\u003c/code\u003e to overwrite stored list of tasks."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void write() throws IOException {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        mainStorage.overWrite(mainTaskList.getList());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    private String getHelpMessage() {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        return \"List of available commands:\\n\\n\""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"deadline \u003csubject\u003e /by \u003cdate/time\u003e\\n\""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"\\tAdds task that needs to be done before a\\n\""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"\\tspecific date/time.\\n\""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"delete \u003cnumber\u003e\\n\""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"\\tRemoves task from list.\\n\""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"done \u003cnumber\u003e\\n\""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"\\tMarks a task as done.\\n\""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"event \u003csubject\u003e /at \u003cdate/time\u003e\\n\""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"\\tAdds task that starts and ends at a specific\\n\""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"\\tdate/time.\\n\""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"find \u003ckeyword\u003e\\n\""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"\\tSearches for task by keyword.\\n\""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"list\\n\""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"\\tDisplays current list of tasks.\\n\""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"read \u003cfilename\u003e\\n\""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"\\tChanges data source for reading.\\n\""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"todo \u003csubject\u003e\\n\""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"\\tAdds task without any date/time attached to\\n\""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"\\tit.\\n\""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"write \u003cfilename\u003e\\n\""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                + \"\\tChanges data source for writing.\\n\";"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 217
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" spacing\u003d\"5.0\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"658.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"657.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" minHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void testDateConversion() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            assertEquals(\"2 September 2019, 12.00AM\", Parser.convertDate(\"02/09/2019 0000\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void testDetailParsing() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String[] expectedOutputs \u003d new String[] {\"project meeting\", \"Mon 2-4pm\"};"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String input \u003d \"project meeting /at Mon 2-4pm\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            assertEquals(expectedOutputs[0], Parser.parseDetails(input)[0]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            assertEquals(expectedOutputs[1], Parser.parseDetails(input)[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void testCommandParsing() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String[] expectedOutputs \u003d new String[] {\"done\", \"1\"};"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        String input \u003d \"done 1\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        assertEquals(expectedOutputs[0], Parser.parseCommand(input)[0]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        assertEquals(expectedOutputs[1], Parser.parseCommand(input)[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 39
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    public void testStorageLoad() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        Storage dummy \u003d new Storage(\"data/dummy.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            assertEquals(new ArrayList\u003cTask\u003e(), dummy.load());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "            assertEquals(\"File not on disk\", e.getMessage());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ernestyyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ernestyyh": 22
    }
  }
]
