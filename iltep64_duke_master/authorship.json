[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "group \u0027org.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "version \u00270.2.1\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    mainClassName \u003d \"org.duke.ui.javafx.DukeMain\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    archiveVersion \u003d \"0.2.1\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 43,
      "-": 13
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "![Screenshot](Ui.png)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "Duke is a chat bot, which helps you keep track of your tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "You can create new tasks, list and search them, and mark them as done and remove them."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "- Create new tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    - You can keep track of your to-dos, deadlines and events"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "- List and search them"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    - You can list all your tasks, or provide a search phrase to filter them."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "- Mark done and delete tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    - You can check off tasks you have completed, and remove thme afterwards."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "### `list` - List all your tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "This command shows all your current tasks, both incomplete and complete."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "```"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "1: [D][✗] homework (by: 19 Sep 2019, 12:00:00 AM)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "2: [T][✗] project"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "```"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "### `find` - Search through your task list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "This command filters through your current tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "Only the tasks with descriptions that contain the given phrase will be shown."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "`find \u003cphrase\u003e`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "`find work`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "```"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "1: [D][✗] homework (by: 19 Sep 2019, 12:00:00 AM)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "4: [T][✗] worked example"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "### `todo`, `deadline`, `event` - Create new tasks"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "These commands create a new incomplete task, and add it to your list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "- `todo` creates a basic to-do task"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    - `todo \u003cdescription\u003e`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": "- `deadline` creates a deadline task, given a date/time "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    - `deadline \u003cdescription\u003e /by [\u003cdate\u003e|\u003cweekday\u003e] [time]`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": "- `event` creates a event task, given the date/time of the event"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    - `event \u003cdescription\u003e /at [\u003cdate\u003e|\u003cweekday\u003e] [time]`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iltep64"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iltep64"
        },
        "content": "```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iltep64"
        },
        "content": "deadline homwork /by Mon"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iltep64"
        },
        "content": "event birthday /at Apr 1 1PM"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iltep64"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iltep64"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iltep64"
        },
        "content": "```"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iltep64"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iltep64"
        },
        "content": " [D][✗] homework (by: 23 Sep 2019, 12:00:00 AM)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iltep64"
        },
        "content": "Now you have 3 tasks in your list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iltep64"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iltep64"
        },
        "content": " [E][✗] birthday (at: 1 Apr 2020, 1:00:00 PM)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iltep64"
        },
        "content": "Now you have 4 tasks in your list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iltep64"
        },
        "content": "```"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iltep64"
        },
        "content": "### `done` - Mark a task as done"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iltep64"
        },
        "content": "Given the task number, mark that task as completed."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iltep64"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iltep64"
        },
        "content": "`done 2`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iltep64"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iltep64"
        },
        "content": "```"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iltep64"
        },
        "content": "Nice! I\u0027ve marked this task as done."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iltep64"
        },
        "content": " [E][✓] birthday (at: 1 Apr 2020, 1:00:00 PM)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iltep64"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iltep64"
        },
        "content": "### `delete` - Delete a task"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iltep64"
        },
        "content": "Given the task number, delete the task."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iltep64"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iltep64"
        },
        "content": "`delete 2`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iltep64"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iltep64"
        },
        "content": "```"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iltep64"
        },
        "content": "Nice! I\u0027ve marked this task as done."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iltep64"
        },
        "content": " [E][✓] birthday (at: 1 Apr 2020, 1:00:00 PM)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "iltep64"
        },
        "content": "Now you have 2 tasks in your list."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "iltep64"
        },
        "content": "```"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "iltep64"
        },
        "content": "### `help` - Get command help"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "iltep64"
        },
        "content": "Show a list of all supported commands."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "iltep64"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "iltep64"
        },
        "content": "```"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "iltep64"
        },
        "content": "bye - Exits the program."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "iltep64"
        },
        "content": "bye"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "iltep64"
        },
        "content": "deadline - Creates a new deadline task"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "iltep64"
        },
        "content": "deadline \u003cDescription of task\u003e [ /by (Time of deadline) ]"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "iltep64"
        },
        "content": "delete - Deletes a task"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "iltep64"
        },
        "content": "delete \u003cIndex of task\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "iltep64"
        },
        "content": "done - Marks a task as done."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "iltep64"
        },
        "content": "done \u003cIndex of task to delete\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "iltep64"
        },
        "content": "event - Create a event task"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "iltep64"
        },
        "content": "event \u003cDescription of task\u003e [ /at (Time of event) ]"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "iltep64"
        },
        "content": "find - Find tasks that match."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "iltep64"
        },
        "content": "find \u003cString to search for\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "iltep64"
        },
        "content": "help - Shows command help"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "iltep64"
        },
        "content": "help"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "iltep64"
        },
        "content": "list - Lists all tasks"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "iltep64"
        },
        "content": "list"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "iltep64"
        },
        "content": "todo - Creates a todo task"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "iltep64"
        },
        "content": "todo \u003cDescription of task\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "iltep64"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "iltep64": 125,
      "-": 18
    }
  },
  {
    "path": "src/main/java/org/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.cmd.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.ui.DukeIO;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * Main class for Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private static final String[] initialGreeting \u003d new String[]{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            \"Hello! I\u0027m Duke\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            \"What can I do for you?\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    };"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private final CommandDispatcher dispatcher;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private final DukeIO io;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private TaskStorage taskStorage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public Duke(DukeIO io) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.io \u003d io;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.dispatcher \u003d new CommandDispatcher(this);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        //Bind command handlers"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.dispatcher.bindCommands("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                new ListHandler(),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                new DoneHandler(),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                new ByeHandler(),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                new FindHandler(),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                new TodoTaskHandler(),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                new DeadlineTaskHandler(),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                new EventTaskHandler(),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                new DeleteHandler(),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                new HelpHandler()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        );"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.dispatcher.setUnknownCommandHandler(new Handler() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            protected void handleNoExit(Duke duke, Command command) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means. :-(\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        });"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.io.setCommandDispatcher(this.dispatcher);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public CommandDispatcher getDispatcher() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return dispatcher;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.taskStorage.add(t);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.io.say("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                \"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                \"  \" + t,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                String.format(\"Now you have %d task%s in the list.\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        this.taskStorage.size(),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        this.taskStorage.size() \u003d\u003d 1 ? \"\" : \"s\")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        //Start off greeting the user."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.io.withDialogBlock(() -\u003e {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.io.say(initialGreeting);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.taskStorage \u003d TaskStorage.load();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        });"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        //Start listen loop."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.io.listen();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public DukeIO getIo() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return this.io;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public void save() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.io.withDialogBlock(taskStorage::save);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public TaskStorage getTaskStorage() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return taskStorage;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 80,
      "-": 2
    }
  },
  {
    "path": "src/main/java/org/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * Parent class for all Duke-specific exceptions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class DukeException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public DukeException(Exception inner) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        super(inner);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public DukeException(String message, Exception inner) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        super(message, inner);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 21
    }
  },
  {
    "path": "src/main/java/org/duke/TaskStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.json.JsonParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.json.JsonWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.json.ValueHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.task.TaskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class TaskStorage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private static final String SAVE_PATH \u003d \"./duke.json\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private final ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public TaskStorage(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public static TaskStorage load() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        try (FileReader read \u003d new FileReader(SAVE_PATH)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return new TaskStorage(JsonParser.parse(read, ValueHandler.listOf(new TaskType.Builder())));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return new TaskStorage(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            throw new DukeException(\"Unable to load saved data\", e);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public void save() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        try (FileWriter write \u003d new FileWriter(SAVE_PATH);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "             JsonWriter jw \u003d new JsonWriter(write)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            jw.writeValue(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            throw new DukeException(e);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.taskList.add(t);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return this.taskList.remove(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public Stream\u003cTask\u003e stream() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return this.taskList.stream();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return this.taskList.get(i);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 63
    }
  },
  {
    "path": "src/main/java/org/duke/cmd/ByeHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.cmd;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "@Handler.Binding(\"bye\")"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "@Handler.Description(\"Exits the program.\")"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class ByeHandler extends Handler {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public boolean handle(Duke duke, Command command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        duke.getIo().say(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 13
    }
  },
  {
    "path": "src/main/java/org/duke/cmd/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.cmd;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * Represents parsed user input, divided into a command type and arguments."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private static final Pattern switchBoundary \u003d Pattern.compile(\"\\\\s+/\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private static final Pattern cmdBoundary \u003d Pattern.compile(\"\\\\s+\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private final String type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private final String arguments;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private final Map\u003cString, String\u003e namedArguments;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private Command(String type, String arguments, Map\u003cString, String\u003e namedArguments) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.arguments \u003d arguments;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.namedArguments \u003d namedArguments;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * From user input, parse it into a {@link Command}."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * First word is the main command type."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * The main arguments are the remainder of words,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * up til the first named argument or end of string."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Each named argument starts with a switch \"/(name)\"."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * The argument spans up til the next named argument or end of string."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param input User input"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @return Parsed command, or null if invalid"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public static Command parse(String input) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        input \u003d input.trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        //Split on the presence of any switches"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        String[] splits \u003d switchBoundary.split(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        //First split value is \"cmd-type args...\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        String[] mainArgs \u003d cmdBoundary.split(splits[0], 2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        if (mainArgs[0].isEmpty()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        String type \u003d mainArgs[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        //If no arguments, leave as empty string"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        String arguments \u003d mainArgs.length \u003e 1 ? mainArgs[1] : \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        Map\u003cString, String\u003e namedArguments \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        if (splits.length \u003e 1) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            //Each split value is \"switch-name args...\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            //with no preceding slash"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            for (int i \u003d 1; i \u003c splits.length; i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                if (splits[i].isEmpty()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                //Split at first whitespace"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                String[] switchArgs \u003d cmdBoundary.split(splits[i], 2);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                String switchName \u003d switchArgs[0];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                //If no arguments, leave as empty string"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                String switchArguments \u003d switchArgs.length \u003e 1 ? switchArgs[1] : \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                namedArguments.put(switchName, switchArguments);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return new Command(type, arguments, Collections.unmodifiableMap(namedArguments));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public String getArguments() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return arguments;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public Map\u003cString, String\u003e getNamedArguments() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return namedArguments;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 83
    }
  },
  {
    "path": "src/main/java/org/duke/cmd/CommandDispatcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.cmd;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.lang.reflect.InvocationTargetException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class CommandDispatcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private final Set\u003cHandler\u003e handlers"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            \u003d new TreeSet\u003c\u003e(Comparator.comparing(Handler::getPrimaryBinding));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private final Map\u003cString, Handler\u003e commandMap"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private Handler defaultHandler \u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private final Duke duke;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public CommandDispatcher(Duke duke) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.duke \u003d duke;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Bind a command handler, for a type of command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param command Type of command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param handler Handler for command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public void bindCommand(String command, Handler handler) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.commandMap.put(command, handler);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.handlers.add(handler);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Bind a fallback command handler, for unknown command types"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param handler Fallback handler for unknown commands"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public void setUnknownCommandHandler(Handler handler) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.defaultHandler \u003d handler;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public final void bindCommands(Handler... handlers) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        for(Handler handler : handlers) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            Handler.Binding[] binds \u003d handler.getClass().getAnnotationsByType(Handler.Binding.class);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.handlers.add(handler);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            for(Handler.Binding bind : binds) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                this.commandMap.put(bind.value(), handler);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Start running the listen loop, and respond to commands."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public boolean dispatchCommand(String userInput) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        Command command \u003d Command.parse(userInput);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        if (command \u003d\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            throw new DukeException(\"Unable to parse command!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        Handler cmdHandler \u003d commandMap.get(command.getType());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        if (cmdHandler !\u003d null) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return cmdHandler.handle(duke, command);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        } else if (defaultHandler !\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return defaultHandler.handle(duke, command);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            throw new DukeException(String.format(\"Unknown command %s.\", command.getType()));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public Set\u003cHandler\u003e getHandlers() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return Collections.unmodifiableSet(this.handlers);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 73
    }
  },
  {
    "path": "src/main/java/org/duke/cmd/DeadlineTaskHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.cmd;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.task.DeadlineTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "@Handler.Binding(\"deadline\")"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "@Handler.Description(value \u003d \"Creates a new deadline task\", argument \u003d \"Description of task\")"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "@Handler.NamedArgument(value \u003d \"by\", description \u003d \"Time of deadline\")"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class DeadlineTaskHandler extends Handler {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    protected void handleNoExit(Duke duke, Command command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        String description \u003d command.getArguments();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        String deadline \u003d command.getNamedArguments().get(\"by\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        if (deadline \u003d\u003d null) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            deadline \u003d \"unknown\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        DeadlineTask task \u003d new DeadlineTask(description, deadline);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        duke.addTask(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 21
    }
  },
  {
    "path": "src/main/java/org/duke/cmd/DeleteHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.cmd;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.TaskStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "@Handler.Binding(\"delete\")"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "@Handler.Description(value \u003d \"Deletes a task\", argument \u003d \"Index of task\")"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class DeleteHandler extends Handler {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    protected void handleNoExit(Duke duke, Command command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            index \u003d Integer.parseInt(command.getArguments());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            throw new DukeException(\"Index provided was not an integer!\", e);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        TaskStorage taskStorage \u003d duke.getTaskStorage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        if (index \u003c 0 || index \u003e taskStorage.size()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            throw new DukeException(\"There\u0027s no task with that index!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        Task selectedTask \u003d taskStorage.remove(index - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        duke.getIo().say(\"Nice! I\u0027ve marked this task as done:\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                \"  \" + selectedTask,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                String.format(\"Now you have %d task%s in the list.\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        taskStorage.size(),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        taskStorage.size() \u003d\u003d 1 ? \"\" : \"s\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 32
    }
  },
  {
    "path": "src/main/java/org/duke/cmd/DoneHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.cmd;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "@Handler.Binding(\"done\")"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "@Handler.Description(value \u003d \"Marks a task as done.\", argument \u003d \"Index of task to delete\")"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class DoneHandler extends Handler {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public void handleNoExit(Duke duke, Command command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            index \u003d Integer.parseInt(command.getArguments());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            throw new DukeException(\"Index provided was not an integer!\", e);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        if (index \u003c 0 || index \u003e duke.getTaskStorage().size()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            throw new DukeException(\"There\u0027s no task with that index!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        Task selectedTask \u003d duke.getTaskStorage().get(index - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        selectedTask.markComplete();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        duke.getIo().say(\"Nice! I\u0027ve marked this task as done:\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                \"  \" + selectedTask);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 28
    }
  },
  {
    "path": "src/main/java/org/duke/cmd/EventTaskHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.cmd;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.task.EventTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "@Handler.Binding(\"event\")"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "@Handler.Description(value \u003d \"Create a event task\", argument \u003d \"Description of task\")"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "@Handler.NamedArgument(value \u003d \"at\", description \u003d \"Time of event\")"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class EventTaskHandler extends Handler {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    protected void handleNoExit(Duke duke, Command command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        String description \u003d command.getArguments();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        String timing \u003d command.getNamedArguments().get(\"at\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        if (timing \u003d\u003d null) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            timing \u003d \"unknown\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        EventTask task \u003d new EventTask(description, timing);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        duke.addTask(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 21
    }
  },
  {
    "path": "src/main/java/org/duke/cmd/FindHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.cmd;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.ui.DukeIO;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.util.CounterDecorator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "@Handler.Binding(\"find\")"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "@Handler.Description(value \u003d \"Find tasks that match.\", argument \u003d \"String to search for\")"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class FindHandler extends Handler {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    protected void handleNoExit(Duke duke, Command command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        DukeIO io \u003d duke.getIo();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        io.say(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        String target \u003d command.getArguments().toLowerCase();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        io.say(duke.getTaskStorage().stream()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                .map(new CounterDecorator\u003c\u003e(1))"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                .filter(taskpair -\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        taskpair.value.getDescription().toLowerCase().contains(target))"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                .map(Object::toString)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                .iterator());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 22
    }
  },
  {
    "path": "src/main/java/org/duke/cmd/Handler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.cmd;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.lang.annotation.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public abstract class Handler {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private static final Map\u003cClass\u003c? extends Handler\u003e, String\u003e descriptionCache \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private static final Map\u003cClass\u003c? extends Handler\u003e, String\u003e syntaxCache \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public boolean handle(Duke duke, Command command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        handleNoExit(duke, command);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    protected void handleNoExit(Duke duke, Command command) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public final String getDescriptionLine() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return descriptionCache.computeIfAbsent(this.getClass(),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                clazz -\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    StringBuilder firstLine \u003d new StringBuilder();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    for (Binding bind : this.getBindings()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        firstLine.append(bind.value()).append(\u0027 \u0027);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    firstLine.append(\"- \").append(this.getDescriptionText().value());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    return firstLine.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                );"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public final String getSyntaxLine() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return syntaxCache.computeIfAbsent(this.getClass(),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                clazz -\u003e {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    String primaryBind \u003d this.getPrimaryBinding();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    StringBuilder secondLine \u003d new StringBuilder(primaryBind);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    String argumentDesc \u003d this.getDescriptionText().argument();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    if (!argumentDesc.isEmpty()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        secondLine.append(\" \u003c\").append(argumentDesc).append(\u0027\u003e\u0027);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    for (NamedArgument arg : this.getNamedArguments()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        secondLine.append(\" [ /\")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                                .append(arg.value())"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                                .append(\" (\")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                                .append(arg.description())"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                                .append(\") ]\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    return secondLine.toString();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                });"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public final String getPrimaryBinding() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return this.getBindings()[0].value();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private Binding[] getBindings() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return this.getClass().getAnnotationsByType(Binding.class);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private Description getDescriptionText()  {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return this.getClass().getAnnotation(Description.class);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private NamedArgument[] getNamedArguments() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return this.getClass().getAnnotationsByType(NamedArgument.class);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Retention(RetentionPolicy.RUNTIME)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Target(ElementType.TYPE)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Repeatable(Bindings.class)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public @interface Binding {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        String value();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Retention(RetentionPolicy.RUNTIME)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Target(ElementType.TYPE)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public @interface Bindings {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        Binding[] value();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Retention(RetentionPolicy.RUNTIME)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Target(ElementType.TYPE)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public @interface Description {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        String value();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        String argument() default \"\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Retention(RetentionPolicy.RUNTIME)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Target(ElementType.TYPE)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Repeatable(NamedArguments.class)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public @interface NamedArgument {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        String value();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        String description();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Retention(RetentionPolicy.RUNTIME)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Target(ElementType.TYPE)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public @interface NamedArguments {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        NamedArgument[] value();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 105
    }
  },
  {
    "path": "src/main/java/org/duke/cmd/HelpHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.cmd;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.ui.DukeIO;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "@Handler.Binding(\"help\")"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "@Handler.Description(\"Shows command help\")"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class HelpHandler extends Handler {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    protected void handleNoExit(Duke duke, Command command) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        DukeIO io \u003d duke.getIo();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        for (Handler handler : duke.getDispatcher().getHandlers()) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            io.say(handler.getDescriptionLine(), handler.getSyntaxLine());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 16
    }
  },
  {
    "path": "src/main/java/org/duke/cmd/ListHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.cmd;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.ui.DukeIO;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.util.CounterDecorator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "@Handler.Binding(\"list\")"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "@Handler.Description(\"Lists all tasks\")"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class ListHandler extends Handler {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    protected void handleNoExit(Duke duke, Command command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        DukeIO io \u003d duke.getIo();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        io.say(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        io.say(duke.getTaskStorage().stream()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                .map(new CounterDecorator\u003c\u003e(1))"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                .map(Object::toString)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                .iterator());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 19
    }
  },
  {
    "path": "src/main/java/org/duke/cmd/TodoTaskHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.cmd;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "@Handler.Binding(\"todo\")"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "@Handler.Description(value \u003d \"Creates a todo task\", argument \u003d \"Description of task\")"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class TodoTaskHandler extends Handler {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    protected void handleNoExit(Duke duke, Command command) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        duke.addTask(new Task(command.getArguments()));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 13
    }
  },
  {
    "path": "src/main/java/org/duke/json/ArrayHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.json;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * This is a structure capable of receiving consecutive JSON values from a JSON array,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * and finally producing a T value."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * @param \u003cT\u003e Value to produce"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public interface ArrayHandler\u003cT\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    static \u003cT\u003e ValueHandler\u003cArrayList\u003cT\u003e\u003e listOf(ValueHandler\u003cT\u003e valueHandler) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return new ValueHandler\u003cArrayList\u003cT\u003e\u003e() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            public ArrayHandler\u003cArrayList\u003cT\u003e\u003e handleArray() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                return new ListValue\u003c\u003e(valueHandler);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        };"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Handle one new JSON value in the JSON array."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param receiver {@link ValueHandler} callback"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    void handleElement(Receiver receiver);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Handle the end of the array, and return the final value."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @return Completed value"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    T handleEnd();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    class ListValue\u003cT\u003e implements ArrayHandler\u003cArrayList\u003cT\u003e\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        private final ArrayList\u003cT\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        private final ValueHandler\u003cT\u003e valueHandler;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public ListValue(ValueHandler\u003cT\u003e valueHandler) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.valueHandler \u003d valueHandler;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public void handleElement(Receiver receiver) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            T elem \u003d receiver.receive(valueHandler);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            list.add(elem);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public ArrayList\u003cT\u003e handleEnd() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 51
    }
  },
  {
    "path": "src/main/java/org/duke/json/JsonException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.json;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * Exception representing JSON parse/write errors."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class JsonException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public JsonException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public JsonException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public JsonException(String format, Object... args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        super(String.format(format, args));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public JsonException(String format, Throwable cause, Object... args) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        super(String.format(format, args), cause);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 22
    }
  },
  {
    "path": "src/main/java/org/duke/json/JsonParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.json;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.io.PushbackReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.io.Reader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * This class reads JSON objects off a {@link Reader}."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class JsonParser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private final PushbackReader reader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private JsonParser(Reader reader) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.reader \u003d new PushbackReader(new BufferedReader(reader));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Given a input {@param reader}, and a way to extract a value ({@param handler}),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * parse out a JSON value from the input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param r       Input reader"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param handler JSON Value handler"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param \u003cT\u003e     Return type"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @return Parsed value"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public static \u003cT\u003e T parse(Reader r, ValueHandler\u003cT\u003e handler) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        JsonParser p \u003d new JsonParser(r);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return p.readValue(handler);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private char next() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            int c \u003d this.reader.read();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            if (c \u003d\u003d -1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                throw new JsonException(\"Unexpected end of input\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return (char) c;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            throw new JsonException(\"Unexpected IO error\", e);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private void unread(char c) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.reader.unread(c);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            throw new JsonException(\"Unable to pushback character, this should not happen!\", e);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private void eatWhitespace() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            char c \u003d this.next();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            if (!Character.isWhitespace(c)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                this.unread(c);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private \u003cT\u003e T readObjectFields(ObjectHandler\u003cT\u003e handler) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        CommaState commaState \u003d CommaState.Empty;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        boolean reachedEnd \u003d false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        while (!reachedEnd) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.eatWhitespace();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            char first \u003d this.next();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            switch (first) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            case \u0027\"\u0027:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                if (commaState \u003d\u003d CommaState.ReadElement) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    throw new JsonException(\"Missing comma between fields\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                String fieldName \u003d this.readString();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                this.eatWhitespace();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                this.expect(\":\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                this.eatWhitespace();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                handler.handleField(fieldName, this::readValue);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                this.eatWhitespace();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                commaState \u003d CommaState.ReadElement;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            case \u0027,\u0027:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                if (commaState !\u003d CommaState.ReadElement) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    throw new JsonException(\"Extra commas in object\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                commaState \u003d CommaState.ReadComma;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            case \u0027}\u0027:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                if (commaState \u003d\u003d CommaState.ReadComma) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    throw new JsonException(\"Extra commas in object\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                reachedEnd \u003d true;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                throw new JsonException(\"Unknown character when reading object\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return handler.handleEnd();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private \u003cT\u003e T readArrayElems(ArrayHandler\u003cT\u003e handler) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        CommaState commaState \u003d CommaState.Empty;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        boolean reachedEnd \u003d false;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        while (!reachedEnd) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.eatWhitespace();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            char first \u003d this.next();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            switch (first) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            case \u0027,\u0027:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                if (commaState !\u003d CommaState.ReadElement) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    throw new JsonException(\"Extra commas in array\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                commaState \u003d CommaState.ReadComma;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            case \u0027]\u0027:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                if (commaState \u003d\u003d CommaState.ReadComma) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    throw new JsonException(\"Extra commas in array\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                reachedEnd \u003d true;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                this.unread(first);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                handler.handleElement(this::readValue);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                commaState \u003d CommaState.ReadElement;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return handler.handleEnd();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private void readEscape(StringBuilder sb) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        char c \u003d this.next();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        switch (c) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        case \u0027\\\\\u0027:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        case \u0027\\\"\u0027:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        case \u0027/\u0027:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            sb.append(c);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        case \u0027b\u0027:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            sb.append(\u0027\\b\u0027);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        case \u0027f\u0027:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            sb.append(\u0027\\f\u0027);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        case \u0027n\u0027:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            sb.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        case \u0027r\u0027:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            sb.append(\u0027\\r\u0027);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        case \u0027t\u0027:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            sb.append(\u0027\\t\u0027);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        case \u0027u\u0027:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            char[] code \u003d new char[4];"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            for (int i \u003d 0; i \u003c 4; i++) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                code[i] \u003d this.next();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            String codeString \u003d new String(code);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                int codePoint \u003d Integer.parseInt(codeString, 16);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                sb.append(Character.toChars(codePoint));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                throw new JsonException(\"Bad unicode escape %s\", e, codeString);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            throw new JsonException(\"Unknown escape %c\", c);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private String readString() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            char c \u003d this.next();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            if (c \u003d\u003d \u0027\"\u0027) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            if (c \u003d\u003d \u0027\\\\\u0027) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                this.readEscape(sb);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                sb.append(c);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private double readNumber() {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        //TODO proper handling"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            char c \u003d this.next();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            if (Character.isWhitespace(c)) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            if (!(Character.isDigit(c) || c \u003d\u003d \u0027.\u0027 || c \u003d\u003d \u0027-\u0027)) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                this.unread(c);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            sb.append(c);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return Double.parseDouble(sb.toString());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private void expect(String target) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.eatWhitespace();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        for (int i \u003d 0; i \u003c target.length(); i++) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            char c \u003d this.next();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            if (c !\u003d target.charAt(i)) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                throw new JsonException(\"Unexpected character %c, expected %c\", c, target.charAt(i));"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private \u003cT\u003e T readValue(ValueHandler\u003cT\u003e handler) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.eatWhitespace();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        char first \u003d this.next();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        switch (first) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        case \u0027{\u0027:"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return this.readObjectFields(handler.handleObject());"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        case \u0027[\u0027:"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return this.readArrayElems(handler.handleArray());"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        case \u0027\"\u0027:"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return handler.handleString(this.readString());"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        case \u0027t\u0027:"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.expect(\"rue\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return handler.handleBoolean(true);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        case \u0027f\u0027:"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.expect(\"alse\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return handler.handleBoolean(false);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        case \u0027n\u0027:"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.expect(\"ull\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return handler.handleNull();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            //TODO: Avoid unicode points"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            if (!Character.isDigit(first)) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                throw new JsonException(\"Unknown character %c reading JSON value!\", first);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.unread(first);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return handler.handleNumber(this.readNumber());"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private enum CommaState {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        Empty,"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        ReadElement,"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        ReadComma"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 248
    }
  },
  {
    "path": "src/main/java/org/duke/json/JsonWriter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.json;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.io.Writer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.function.BiConsumer;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * This class handles serialization of Java values into JSON values."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class JsonWriter implements AutoCloseable {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private final Writer writer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private int indentationLevel \u003d 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private ValueContext valueContext \u003d new ValueContext();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Constructs a JsonWriter wrapping a output writer."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param writer Output writer"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public JsonWriter(Writer writer) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.writer \u003d new BufferedWriter(writer);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private static String escapeString(String unescaped) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        for (int i \u003d 0; i \u003c unescaped.length(); i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            char c \u003d unescaped.charAt(i);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            switch (c) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            case \u0027\\\\\u0027:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            case \u0027\\\"\u0027:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            case \u0027/\u0027:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                sb.append(\"\\\\\").append(c);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            case \u0027\\b\u0027:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                sb.append(\"\\\\b\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            case \u0027\\f\u0027:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                sb.append(\"\\\\f\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            case \u0027\\n\u0027:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                sb.append(\"\\\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            case \u0027\\r\u0027:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                sb.append(\"\\\\r\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            case \u0027\\t\u0027:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                sb.append(\"\\\\t\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                sb.append(c);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Writes a JSON value, given a function expecting a {@link ValueContext}."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param coder Encoding function."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public void writeValue(Consumer\u003cValueContext\u003e coder) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        coder.accept(this.valueContext);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Writes the given value, using a handler from {@link Registry}."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param value Java value to write"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param \u003cT\u003e   Type of value"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public \u003cT\u003e void writeValue(T value) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.valueContext.writeValue(value);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private JsonWriter beginLine() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.writer.write(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            for (int i \u003d 0; i \u003c this.indentationLevel; i++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                this.writer.write(\u0027\\t\u0027);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            throw new JsonException(\"IO error\", e);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private JsonWriter appendQuoted(String unescaped) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            String escaped \u003d JsonWriter.escapeString(unescaped);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.writer.write(\u0027\"\u0027);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.writer.write(escaped);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.writer.write(\u0027\"\u0027);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            throw new JsonException(\"IO error\", e);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private JsonWriter append(String literal) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.writer.write(literal);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            throw new JsonException(\"IO error\", e);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private JsonWriter append(char literal) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.writer.write(literal);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            throw new JsonException(\"IO error\", e);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Flushes the underlying Writer."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public void flush() throws IOException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.writer.flush();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public void close() throws Exception {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.writer.close();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * This represents the context, of currently reading a JSON value."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public class ValueContext {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public void writeString(String s) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            JsonWriter.this.appendQuoted(s);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public void writeNumber(double d) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            JsonWriter.this.append(Double.toString(d));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public void writeBoolean(boolean b) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            JsonWriter.this.append(Boolean.toString(b));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public void writeNull() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            JsonWriter.this.append(\"null\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public void writeArray(Consumer\u003cArrayContext\u003e coder) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            try (ArrayContext a \u003d new ArrayContext()) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                coder.accept(a);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public void writeObject(Consumer\u003cObjectContext\u003e coder) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            try (ObjectContext o \u003d new ObjectContext()) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                coder.accept(o);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public \u003cT\u003e void writeValue(T value) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            if (value \u003d\u003d null) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                this.writeNull();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.writeValue(value, value.getClass());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public \u003cT\u003e void writeValue(T value, Class\u003c? extends T\u003e clazz) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            BiConsumer\u003cValueContext, T\u003e coder \u003d Registry.getEncoder(clazz);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            coder.accept(this, value);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public \u003cT\u003e void writeValues(Iterator\u003cT\u003e it, BiConsumer\u003cValueContext, T\u003e coder) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.writeArray(ctx -\u003e {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                while (it.hasNext()) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    T value \u003d it.next();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    ctx.writeElem(vctx -\u003e coder.accept(vctx, value));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            });"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public \u003cK, T\u003e void writeDict(Map\u003cK, T\u003e it, BiConsumer\u003cValueContext, T\u003e coder) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.writeObject(ctx -\u003e {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                for (Map.Entry\u003cK, T\u003e entry : it.entrySet()) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    T value \u003d entry.getValue();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    ctx.writeField(entry.getKey().toString(),"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                            vctx -\u003e coder.accept(vctx, value));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            });"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private abstract class BlockContext implements AutoCloseable {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        private static final String separator \u003d \",\";"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        private boolean hasPrev \u003d false;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        protected BlockContext() {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            JsonWriter.this.append(this.blockStart());"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            JsonWriter.this.indentationLevel++;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            JsonWriter.this.beginLine();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        protected abstract char blockStart();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        protected abstract char blockEnd();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        protected void startObject() {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            if (this.hasPrev) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                JsonWriter.this.append(separator).beginLine();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                this.hasPrev \u003d true;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public void close() {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            JsonWriter.this.indentationLevel--;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            JsonWriter.this.beginLine().append(this.blockEnd());"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * This represents the context, of currently reading a JSON object."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public class ObjectContext extends BlockContext {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        protected char blockStart() {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return \u0027{\u0027;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        protected char blockEnd() {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return \u0027}\u0027;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public void writeField(String name, Consumer\u003cValueContext\u003e coder) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.startObject();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            JsonWriter.this.appendQuoted(name).append(\": \");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            coder.accept(JsonWriter.this.valueContext);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public \u003cT\u003e void writeField(String name, T value) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.writeField(name, vctx -\u003e vctx.writeValue(value));"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * This represents the context, of currently reading a JSON array."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public class ArrayContext extends BlockContext {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        protected char blockStart() {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return \u0027[\u0027;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        protected char blockEnd() {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return \u0027]\u0027;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public \u003cT\u003e void writeElem(Consumer\u003cValueContext\u003e coder) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.startObject();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            coder.accept(JsonWriter.this.valueContext);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 270
    }
  },
  {
    "path": "src/main/java/org/duke/json/ObjectHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.json;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.function.Function;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * This is a structure capable of receiving consecutive JSON fields from a JSON object,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * and finally producing a T value."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * @param \u003cT\u003e Value to produce"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public interface ObjectHandler\u003cT\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    static \u003cT\u003e ValueHandler\u003cMap\u003cString, T\u003e\u003e mapOf(ValueHandler\u003cT\u003e valueHandler) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return new ValueHandler\u003c\u003e() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            public ObjectHandler\u003cMap\u003cString, T\u003e\u003e handleObject() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                return new DictValue\u003c\u003e(valueHandler);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        };"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Handles a JSON object field name + value pair."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param name     Field name"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param receiver {@link ValueHandler} callback, for field value"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    void handleField(String name, Receiver receiver);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Handle the end of the object, and return the final value."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @return Completed value"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    T handleEnd();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Converts a {@link ObjectHandler} returning {@param \u003cT\u003e} to a {@link ObjectHandler} returning {@param \u003cU\u003e}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param function Mapping function"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param \u003cU\u003e      Target output type"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @return Wrapped {@link ObjectHandler} returning a processed {@param \u003cU\u003e} value."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    default \u003cU\u003e ObjectHandler\u003cU\u003e map(Function\u003cT, U\u003e function) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return new ObjectHandler\u003c\u003e() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            public void handleField(String name, Receiver receiver) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                ObjectHandler.this.handleField(name, receiver);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            public U handleEnd() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                return function.apply(ObjectHandler.this.handleEnd());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        };"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    class DictValue\u003cT\u003e implements ObjectHandler\u003cMap\u003cString, T\u003e\u003e {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        private final HashMap\u003cString, T\u003e map \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        private final ValueHandler\u003cT\u003e valueHandler;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public DictValue(ValueHandler\u003cT\u003e valueHandler) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.valueHandler \u003d valueHandler;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public static DictValue\u003cObject\u003e basicDict() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return new DictValue\u003c\u003e(ValueHandler.ObjectValue.INSTANCE);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public void handleField(String name, Receiver receiver) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            T elem \u003d receiver.receive(this.valueHandler);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.map.put(name, elem);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public Map\u003cString, T\u003e handleEnd() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return map;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 77
    }
  },
  {
    "path": "src/main/java/org/duke/json/Receiver.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.json;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * Represents a way to construct any value, while reading a JSON value."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "@FunctionalInterface"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public interface Receiver {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Given a handler extracting a {@param \u003cT\u003e} value, run it in a context of a JSON value."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param handler Value extractor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param \u003cT\u003e     Return type"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @return Extracted value"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    \u003cT\u003e T receive(ValueHandler\u003c? extends T\u003e handler);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 16
    }
  },
  {
    "path": "src/main/java/org/duke/json/Registry.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.json;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.function.BiConsumer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * Registry mapping Java classes to appropriate JSON encoder functions."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class Registry {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private static HashMap\u003cClass\u003c?\u003e, BiConsumer\u003cJsonWriter.ValueContext, ?\u003e\u003e encoderMap"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private static HashMap\u003cClass\u003c?\u003e, BiConsumer\u003cJsonWriter.ValueContext, ?\u003e\u003e encoderCache"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        register(List.class, (ctx, list) -\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                ctx.writeValues("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        ((List\u003c?\u003e) list).iterator(),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        JsonWriter.ValueContext::writeValue));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        register(Iterable.class, (ctx, itb) -\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                ctx.writeValues("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        ((Iterable\u003c?\u003e) itb).iterator(),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        JsonWriter.ValueContext::writeValue));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        register(Map.class, (ctx, map) -\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                ctx.writeDict("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        (Map\u003c?, ?\u003e) map,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        JsonWriter.ValueContext::writeValue));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        register(Number.class, (ctx, val) -\u003e ctx.writeNumber(val.doubleValue()));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        register(String.class, (ctx, str) -\u003e ctx.writeString(str));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        register(Boolean.class, (ctx, b) -\u003e ctx.writeBoolean(b));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        register(Object.class, (ctx, obj) -\u003e ctx.writeString(obj.toString()));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public static \u003cT\u003e void register("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            Class\u003cT\u003e clazz,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            BiConsumer\u003cJsonWriter.ValueContext, T\u003e encoder) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        encoderMap.put(clazz, encoder);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        encoderCache.clear();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private static \u003cT\u003e BiConsumer\u003cJsonWriter.ValueContext, T\u003e getEncoderInner(Class\u003c? extends T\u003e clazz) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        Class\u003c?\u003e current \u003d clazz;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        while (!Object.class.equals(current)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            BiConsumer\u003cJsonWriter.ValueContext, ?\u003e encoder \u003d encoderMap.get(current);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            if (encoder !\u003d null) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                return (BiConsumer\u003cJsonWriter.ValueContext, T\u003e) encoder;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            current \u003d current.getSuperclass();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        current \u003d clazz;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        while (!Object.class.equals(current)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            for (Type iface : current.getInterfaces()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                if (iface instanceof Class) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    Class\u003c?\u003e c \u003d (Class\u003c?\u003e) iface;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    BiConsumer\u003cJsonWriter.ValueContext, ?\u003e encoder \u003d encoderMap.get(c);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    if (encoder !\u003d null) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        return (BiConsumer\u003cJsonWriter.ValueContext, T\u003e) encoder;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            current \u003d current.getSuperclass();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        BiConsumer\u003cJsonWriter.ValueContext, ?\u003e encoder \u003d encoderMap.get(Object.class);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        if (encoder !\u003d null) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return (BiConsumer\u003cJsonWriter.ValueContext, T\u003e) encoder;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        throw new JsonException(\"No handler for class %s\", clazz);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public static \u003cT\u003e BiConsumer\u003cJsonWriter.ValueContext, T\u003e getEncoder(Class\u003c? extends T\u003e clazz) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        if (encoderCache.containsKey(clazz)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return (BiConsumer\u003cJsonWriter.ValueContext, T\u003e) encoderCache.get(clazz);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        BiConsumer\u003cJsonWriter.ValueContext, T\u003e encoder \u003d getEncoderInner(clazz);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        encoderCache.put(clazz, encoder);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return encoder;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 83
    }
  },
  {
    "path": "src/main/java/org/duke/json/ValueHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.json;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * Extracts a value given a JSON value context."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * @param \u003cT\u003e Type of value to extract"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public interface ValueHandler\u003cT\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    static \u003cT\u003e ValueHandler\u003cArrayList\u003cT\u003e\u003e listOf(ValueHandler\u003cT\u003e elemHandler) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return new ValueHandler\u003c\u003e() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            public ArrayHandler\u003cArrayList\u003cT\u003e\u003e handleArray() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                return new ArrayHandler.ListValue\u003cT\u003e(elemHandler);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        };"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Called when the JSON value is a boolean."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param val JSON value"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @return Extracted value"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    default T handleBoolean(boolean val) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        throw new UnsupportedOperationException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Called when the JSON value is a number."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param val JSON value"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @return Extracted value"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    default T handleNumber(double val) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        throw new UnsupportedOperationException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Called when the JSON value is a null."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @return Extracted value"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    default T handleNull() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        throw new UnsupportedOperationException();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Called when the JSON value is a string."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param val JSON value"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @return Extracted value"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    default T handleString(String val) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        throw new UnsupportedOperationException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Called when the JSON value is a JSON object."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @return Object-context value extractor"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    default ObjectHandler\u003c? extends T\u003e handleObject() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        throw new UnsupportedOperationException();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Called when the JSON value is a JSON object."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @return Array-context value extractor"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    default ArrayHandler\u003c? extends T\u003e handleArray() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        throw new UnsupportedOperationException();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    class BooleanValue implements ValueHandler\u003cBoolean\u003e {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public static final BooleanValue INSTANCE \u003d new BooleanValue();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public Boolean handleString(boolean val) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return val;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    class StringValue implements ValueHandler\u003cString\u003e {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public static final StringValue INSTANCE \u003d new StringValue();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public String handleString(String val) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return val;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    class ObjectValue implements ValueHandler\u003cObject\u003e {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public static final ObjectValue INSTANCE \u003d new ObjectValue();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public Object handleBoolean(boolean val) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return val;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public Object handleNumber(double val) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return val;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public Object handleNull() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public Object handleString(String val) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return val;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public ObjectHandler\u003cMap\u003cString, Object\u003e\u003e handleObject() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return new ObjectHandler.DictValue\u003c\u003e(INSTANCE);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public ArrayHandler\u003cArrayList\u003cObject\u003e\u003e handleArray() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return new ArrayHandler.ListValue\u003c\u003e(INSTANCE);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 120
    }
  },
  {
    "path": "src/main/java/org/duke/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.json.JsonWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.util.DateParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * Represents a task with a deadline attached."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private final LocalDateTime deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Constructs a {@link DeadlineTask} from a given description and deadline."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param task     Description"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param deadline Deadline date string"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public DeadlineTask(String task, String deadline) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.deadline \u003d DateParser.parse(deadline);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    DeadlineTask(Map\u003cString, Object\u003e dict) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        super(dict);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.deadline \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                .parse((String) dict.get(\"deadline\"), LocalDateTime::from);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    protected TaskType getTaskType() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return TaskType.Deadline;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        String baseDescription \u003d super.toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return String.format(\"%s (by: %s)\", baseDescription,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM).format(deadline));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    protected void toJson(JsonWriter.ObjectContext ctx) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        super.toJson(ctx);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        ctx.writeField(\"deadline\", DateTimeFormatter.ISO_LOCAL_DATE_TIME.format(this.deadline));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 52
    }
  },
  {
    "path": "src/main/java/org/duke/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.json.JsonWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.util.DateParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * Represents a event task, with a start timing attached."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private final LocalDateTime timing;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Constructs an {@link EventTask} from a task description and timing date string."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param task   Description of task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param timing Date string describing timing"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public EventTask(String task, String timing) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.timing \u003d DateParser.parse(timing);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    EventTask(Map\u003cString, Object\u003e dict) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        super(dict);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.timing \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                .parse((String) dict.get(\"timing\"), LocalDateTime::from);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    protected TaskType getTaskType() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return TaskType.Event;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        String baseDescription \u003d super.toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return String.format(\"%s (at: %s)\", baseDescription,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM).format(timing));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public void toJson(JsonWriter.ObjectContext ctx) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        super.toJson(ctx);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        ctx.writeField(\"timing\", DateTimeFormatter.ISO_LOCAL_DATE_TIME.format(this.timing));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 51
    }
  },
  {
    "path": "src/main/java/org/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.json.JsonWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.json.Registry;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * Represents a basic To-Do Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private static final String completedMarker \u003d \"[✓]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private static final String incompleteMarker \u003d \"[✗]\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        Registry.register(Task.class, Task::serialize);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private boolean completed;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this(description, false);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private Task(String description, boolean completed) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        if (description \u003d\u003d null || description.isEmpty()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            String message \u003d String.format(\"The description of a %s cannot be empty.\", this.getTaskType());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            throw new DukeException(message);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.completed \u003d completed;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    Task(Map\u003cString, Object\u003e dict) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this((String) dict.get(\"description\"),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                (Boolean) dict.getOrDefault(\"completed\", false));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public static void serialize(JsonWriter.ValueContext ctx, Task value) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        ctx.writeObject(value::toJson);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Mark this task as completed."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public void markComplete() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.completed \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Checks if the task is marked as complete."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @return Whether task has been marked as completed."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public boolean isCompleted() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return this.completed;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    protected String getTypeMarker() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return getTaskType().getMarker();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    protected TaskType getTaskType() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return TaskType.ToDo;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private String getCompleteMarker() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return this.completed ? completedMarker : incompleteMarker;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return String.format(\"[%s]%s %s\","
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                this.getTypeMarker(),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                this.getCompleteMarker(),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                this.description);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    protected void toJson(JsonWriter.ObjectContext ctx) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        ctx.writeField(\"type\", this.getTaskType());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        ctx.writeField(\"description\", this.description);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        ctx.writeField(\"completed\", this.completed);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 91
    }
  },
  {
    "path": "src/main/java/org/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.json.ObjectHandler;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.json.ValueHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.function.Function;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * Enumerates all known task types."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    ToDo(\"T\", Task::new),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    Deadline(\"D\", DeadlineTask::new),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    Event(\"E\", EventTask::new);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private final String marker;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private final Function\u003cMap\u003cString, Object\u003e, ? extends Task\u003e jsonConstructor;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    TaskType(String marker,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "             Function\u003cMap\u003cString, Object\u003e, ? extends Task\u003e jsonConstructor) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.marker \u003d marker;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.jsonConstructor \u003d jsonConstructor;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * From the given string, find the matching {@link TaskType} value."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Like {@link Enum#valueOf(Class, String)}, but case insensitive."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param value String to parse"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @return Matching {@link TaskType} value, or a default."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public static TaskType fromString(String value) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        for (TaskType t : TaskType.values()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            if (t.name().equalsIgnoreCase(value)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                return t;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return TaskType.ToDo;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Returns the short marker string associated with this task type."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @return Marker string for this type."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public String getMarker() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return marker;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public static class Builder implements ValueHandler\u003cTask\u003e {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public ObjectHandler\u003cTask\u003e handleObject() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return ObjectHandler.DictValue.basicDict().map(dict -\u003e {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                String typeString \u003d dict.getOrDefault(\"type\", \"ToDo\").toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                TaskType type \u003d TaskType.fromString(typeString);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                return type.jsonConstructor.apply(dict);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            });"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 61
    }
  },
  {
    "path": "src/main/java/org/duke/ui/DukeConsoleIO.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.cmd.CommandDispatcher;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.function.Supplier;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * CLI interface for Duke, wrapping standard input and output."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class DukeConsoleIO implements DukeIO {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private static final String lineRule \u003d"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            \"____________________________________________________________\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private final Scanner scanner;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private CommandDispatcher commandDispatcher;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private boolean printingDialogBlock;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Constructs a DukeIO instance wrapping standard input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private DukeConsoleIO() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Output several lines, in context of the current dialog block."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param lines Lines to print."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public void say(Iterator\u003cString\u003e lines) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        if (!this.printingDialogBlock) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            //Print start of reply line"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            System.out.println(lineRule);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.printingDialogBlock \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        //Print each given line"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        while (lines.hasNext()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            System.out.println(lines.next());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public \u003cT\u003e T withDialogBlock(Supplier\u003cT\u003e action, T fallback) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.printingDialogBlock \u003d false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return action.get();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.sayError(e);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return fallback;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            if (this.printingDialogBlock) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                //Print end of reply line, and extra empty line"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                System.out.println(lineRule);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        DukeConsoleIO io \u003d new DukeConsoleIO();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        Duke duke \u003d new Duke(io);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        duke.save();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Start running the listen loop, and respond to commands."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public void listen() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        if (commandDispatcher \u003d\u003d null) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.withDialogBlock(() -\u003e say(\"No command handlers configured!\"));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        //While there is still input from user"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            //Read single line of user input, and remove extra spaces"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            String userInput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            boolean shouldExit \u003d this.withDialogBlock("
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    () -\u003e commandDispatcher.dispatchCommand(userInput),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    false);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            if (shouldExit) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iltep64"
        },
        "content": "               break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public void setCommandDispatcher(CommandDispatcher commandDispatcher) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.commandDispatcher \u003d commandDispatcher;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 99
    }
  },
  {
    "path": "src/main/java/org/duke/ui/DukeIO.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.cmd.CommandDispatcher;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.function.Supplier;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * Abstract interface for Duke, providing a way to read user input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * and output messages."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public interface DukeIO {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Output several lines, in context of the current dialog block."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param lines Lines to print."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    void say(Iterator\u003cString\u003e lines);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Output several lines, in context of the current dialog block."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param lines Lines to print."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    default void say(String... lines) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        say(Arrays.asList(lines).iterator());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Output an error, in context of the current dialog block."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param e Exception to print"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    default void sayError(DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.say(String.format(\"☹ OOPS!!! %s\", e.getMessage()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Run an action in the context of a dialog block."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param action Action to run"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    default void withDialogBlock(Runnable action) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        withDialogBlock(() -\u003e {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            action.run();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }, null);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Run a value-returning function in the context of a dialog block"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param action   Function to run"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param fallback Value to return, on error"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param \u003cT\u003e      Return value type"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @return Result of function, or fallback if error encountered."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    \u003cT\u003e T withDialogBlock(Supplier\u003cT\u003e action, T fallback);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    void listen();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    void setCommandDispatcher(CommandDispatcher commandDispatcher);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 68
    }
  },
  {
    "path": "src/main/java/org/duke/ui/javafx/DukeFx.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.ui.javafx;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.animation.KeyFrame;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.animation.Timeline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.scene.layout.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.stage.WindowEvent;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.Duke;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.cmd.CommandDispatcher;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.ui.DukeIO;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.concurrent.ExecutionException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.concurrent.ExecutorService;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.concurrent.Executors;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.function.Supplier;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class DukeFx extends Application {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public static final Duration SCROLL_DELAY \u003d Duration.millis(200);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private final DukeFxIO io \u003d new DukeFxIO();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public static final Font BASE_FONT \u003d Font.font(20);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private static final BorderStroke stroke \u003d new BorderStroke(Color.BLACK,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            BorderStrokeStyle.SOLID, new CornerRadii(5), BorderWidths.DEFAULT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public static final Border MSGBOX_BORDER \u003d new Border(stroke);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private DukeRootPane root;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private Stage stage;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.stage \u003d stage;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        io.startDuke();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        stage.setOnCloseRequest("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                evt -\u003e io.shutdown());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        root \u003d new DukeRootPane();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        root.setInputHandler(io::sendCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        Scene scene \u003d new Scene(root);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private void startClose() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        KeyFrame shutdownFrame \u003d new KeyFrame(Duration.seconds(2),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                evt -\u003e {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    stage.fireEvent(new WindowEvent(stage, WindowEvent.WINDOW_CLOSE_REQUEST));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    stage.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                });"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        new Timeline(shutdownFrame).play();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public class DukeFxIO implements DukeIO {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        private final ExecutorService dukeExecutor;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        private final Duke duke;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        private CommandDispatcher dispatcher;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        private ArrayList\u003cString\u003e dialogLines;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        DukeFxIO() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            dukeExecutor \u003d Executors.newSingleThreadExecutor();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            duke \u003d new Duke(this);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        void shutdown() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                dukeExecutor.submit(duke::save).get();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            } catch (ExecutionException | InterruptedException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            dukeExecutor.shutdown();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        void startDuke() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            dukeExecutor.execute(duke::run);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        void sendCommand(String input) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            dukeExecutor.submit(() -\u003e {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                boolean shouldExit \u003d withDialogBlock("
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        () -\u003e dispatcher.dispatchCommand(input),"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        false);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                if (shouldExit) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    Platform.runLater(DukeFx.this::startClose);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            });"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public void say(Iterator\u003cString\u003e lines) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            while (lines.hasNext()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                dialogLines.add(lines.next());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public \u003cT\u003e T withDialogBlock(Supplier\u003cT\u003e action, T fallback) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            T ret \u003d fallback;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            dialogLines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                ret \u003d action.get();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                dialogLines.add(e.getMessage());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            ArrayList\u003cString\u003e lines \u003d dialogLines;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            dialogLines \u003d null;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            Platform.runLater(() -\u003e {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                for (String line : lines) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    sb.append(line).append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                if (!lines.isEmpty()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    //Delete trailing newline"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    sb.deleteCharAt(sb.length() - 1);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                root.displayMessage(UserInfo.DUKE, sb.toString());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            });"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return ret;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public void listen() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public void setCommandDispatcher(CommandDispatcher commandDispatcher) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.dispatcher \u003d commandDispatcher;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "iltep64": 141
    }
  },
  {
    "path": "src/main/java/org/duke/ui/javafx/DukeMain.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.ui.javafx;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class DukeMain {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        Application.launch(DukeFx.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 9
    }
  },
  {
    "path": "src/main/java/org/duke/ui/javafx/DukeRootPane.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.ui.javafx;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.animation.KeyFrame;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.animation.KeyValue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.animation.Timeline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.beans.property.Property;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.beans.property.SimpleObjectProperty;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.scene.control.TextArea;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.scene.input.KeyCode;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.scene.layout.BorderPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class DukeRootPane extends BorderPane {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private final Property\u003cConsumer\u003cString\u003e\u003e inputHandler"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            \u003d new SimpleObjectProperty\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private ScrollPane outputScroll;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private VBox outputCol;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private Button submitButton;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private TextArea inputBox;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public DukeRootPane() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        FXMLLoader loader \u003d new FXMLLoader(getClass().getResource(\"DukeRootPane.fxml\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        loader.setRoot(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        loader.setController(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            loader.load();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            throw new DukeException(e);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        submitButton.setOnAction(evt -\u003e onSubmit());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        inputBox.addEventFilter(KeyEvent.ANY, evt -\u003e {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            if (evt.getCode() \u003d\u003d KeyCode.ENTER || \"\\n\".equals(evt.getCharacter())) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                evt.consume();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                this.onSubmit();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        });"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        //Bind auto-scroll of message pane"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        Timeline scrollAnim \u003d new Timeline(60);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        scrollAnim.getKeyFrames().add(new KeyFrame(DukeFx.SCROLL_DELAY,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                new KeyValue(outputScroll.vvalueProperty(), 1)));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        outputCol.heightProperty().addListener(obs -\u003e scrollAnim.play());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private void onSubmit() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        String input \u003d inputBox.getText();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        if (!input.isEmpty()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            inputBox.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            displayMessage(UserInfo.USER, input);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            if (inputHandler.getValue() !\u003d null) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                inputHandler.getValue().accept(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public Consumer\u003cString\u003e getInputHandler() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return inputHandler.getValue();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public void setInputHandler(Consumer\u003cString\u003e value) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        inputHandler.setValue(value);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public Property\u003cConsumer\u003cString\u003e\u003e inputHandler() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return inputHandler;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public void displayMessage(UserInfo user, String message) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        Message msg \u003d new Message(user);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        msg.setText(message);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        outputCol.getChildren().add(msg);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 88
    }
  },
  {
    "path": "src/main/java/org/duke/ui/javafx/Message.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.ui.javafx;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.beans.property.StringProperty;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.geometry.HPos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class Message extends HBox {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private Label userIcon;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private Label messageText;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public Message(UserInfo user) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        FXMLLoader loader \u003d new FXMLLoader(getClass().getResource(\"Message.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        loader.setRoot(this);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        loader.setController(this);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            loader.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            throw new DukeException(e);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        userIcon.setText(user.getName());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        userIcon.setGraphic(new ImageView(user.getImage()));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        userIcon.setTextFill(user.getNameColor());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        Pos textAlignment \u003d user.getAlignmentPosition();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        messageText.setAlignment(textAlignment);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        userIcon.setAlignment(textAlignment);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        setAlignment(textAlignment);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        setBackground(user.getBackground());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        if (user.getAlignmentPosition().getHpos() \u003d\u003d HPos.LEFT) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.getChildren().addAll(userIcon, messageText);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.getChildren().addAll(messageText, userIcon);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public StringProperty textProperty() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return messageText.textProperty();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public String getText() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return messageText.getText();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public void setText(String value) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        messageText.setText(value);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 62
    }
  },
  {
    "path": "src/main/java/org/duke/ui/javafx/UserInfo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.ui.javafx;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.geometry.NodeOrientation;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class UserInfo {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public static final UserInfo DUKE \u003d new UserInfo(\"Duke\", Color.BLUE,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            Color.gray(0.9), Pos.CENTER_RIGHT, \"DaDuke.png\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public static final UserInfo USER \u003d new UserInfo(\"You\", Color.GREEN,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            Color.gray(0.8), Pos.CENTER_LEFT, \"DaUser.png\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private final Color nameColor;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private final Color backgroundColor;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private final Pos alignmentPosition;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private final Image image;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private UserInfo(String name, Color nameColor, Color backgroundColor,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                     Pos alignmentPosition, String imagePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.nameColor \u003d nameColor;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.alignmentPosition \u003d alignmentPosition;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.backgroundColor \u003d backgroundColor;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.image \u003d new Image(DukeFx.class.getResourceAsStream(imagePath));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public Color getNameColor() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return nameColor;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public Pos getAlignmentPosition() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return alignmentPosition;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public NodeOrientation getOrdering() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        switch (alignmentPosition.getHpos()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        case RIGHT:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        case LEFT:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return NodeOrientation.LEFT_TO_RIGHT;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public Background getBackground() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return new Background(new BackgroundFill("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                this.backgroundColor, CornerRadii.EMPTY, Insets.EMPTY"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public Image getImage() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return image;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 62
    }
  },
  {
    "path": "src/main/java/org/duke/util/CounterDecorator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.function.Function;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * Helper class to annotate sequential strings with a number prefix."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class CounterDecorator\u003cT\u003e implements Function\u003cT, CounterDecorator.IntPair\u003cT\u003e\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private int counter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public CounterDecorator(int start) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.counter \u003d start;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public IntPair\u003cT\u003e apply(T value) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return new CounterDecorator.IntPair\u003c\u003e(this.counter++, value);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public static class IntPair\u003cT\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public final int count;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public final T value;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public IntPair(int count, T value) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.count \u003d count;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            this.value \u003d value;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return String.format(\"%d: %s\", this.count, this.value);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 33
    }
  },
  {
    "path": "src/main/java/org/duke/util/DateParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.text.ParsePosition;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.time.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.time.format.DateTimeFormatterBuilder;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.time.format.TextStyle;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.time.temporal.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": " * Helper class to parse rough date/time strings."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class DateParser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private static final DateTimeFormatter weekdayFormatter \u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            new DateTimeFormatterBuilder()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    .parseCaseInsensitive().parseLenient()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    .optionalStart()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    .appendText(ChronoField.DAY_OF_WEEK, TextStyle.SHORT)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    .optionalEnd()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    .optionalStart()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    .appendText(ChronoField.DAY_OF_WEEK, TextStyle.FULL)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    .optionalEnd()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    .toFormatter();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private static final DateTimeFormatter dmFormatter \u003d"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            new DateTimeFormatterBuilder()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    .parseLenient()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    .appendValue(ChronoField.DAY_OF_MONTH)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    .appendLiteral(\u0027 \u0027)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    .appendText(ChronoField.MONTH_OF_YEAR, TextStyle.SHORT).toFormatter();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private static final DateTimeFormatter mdFormatter \u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            new DateTimeFormatterBuilder()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    .parseLenient()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    .appendText(ChronoField.MONTH_OF_YEAR, TextStyle.SHORT)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    .appendLiteral(\u0027 \u0027)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    .appendValue(ChronoField.DAY_OF_MONTH).toFormatter();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private static final DateTimeFormatter[] dateFormatters \u003d new DateTimeFormatter[]{"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            dmFormatter, addYear(dmFormatter),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            mdFormatter, addYear(mdFormatter),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            DateTimeFormatter.ISO_LOCAL_DATE"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    };"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private static final DateTimeFormatter[] timeFormatters \u003d new DateTimeFormatter[]{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            DateTimeFormatter.ofLocalizedTime(FormatStyle.MEDIUM),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            DateTimeFormatter.ofPattern(\"kkmm\u0027h\u0027\"),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            new DateTimeFormatterBuilder()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    .appendPattern(\"h[[\u0027:\u0027][\u0027.\u0027]mm][\u0027 \u0027]\")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    .parseCaseInsensitive()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    .optionalStart().appendText(ChronoField.AMPM_OF_DAY).optionalEnd()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    .toFormatter(),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            DateTimeFormatter.ISO_LOCAL_TIME"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    };"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private String text;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private ParsePosition pos;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private DateParser(String input) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.text \u003d input;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        this.pos \u003d new ParsePosition(0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private static DateTimeFormatter addYear(DateTimeFormatter fmt) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return new DateTimeFormatterBuilder()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                .append(fmt)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                .parseLenient()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                .appendLiteral(\u0027 \u0027)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                .appendValueReduced(ChronoField.YEAR, 2, 4, 2000)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                .toFormatter();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Given an input string describing a date+time, return a {@link java.time.LocalDateTime} representing it."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * If the input specifies a specific date, we use that date."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * Else, it returns the next matching date in the future."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @param input Rough date input"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     * @return {@link java.time.LocalDateTime} object, or null if no valid parse."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iltep64"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public static LocalDateTime parse(String input) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return new DateParser(input).parseDateTime();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private void eatWhitespace() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        for (i \u003d pos.getIndex(); i \u003c text.length(); i++) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            if (!Character.isWhitespace(text.charAt(i))) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        pos.setIndex(i);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private \u003cR\u003e R tryParse(DateTimeFormatter formatter,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                           TemporalQuery\u003cR\u003e query) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        eatWhitespace();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        int ix \u003d pos.getIndex(), errIx \u003d pos.getErrorIndex();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            TemporalAccessor parsed \u003d formatter.parse(text, pos);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            R value \u003d query.queryFrom(parsed);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            if (value \u003d\u003d null) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                pos.setIndex(ix);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                pos.setErrorIndex(errIx);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return value;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            pos.setIndex(ix);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            pos.setErrorIndex(errIx);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @SafeVarargs"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private \u003cR\u003e R tryParses(DateTimeFormatter formatter,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                            TemporalQuery\u003cR\u003e... queries) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return tryParse(formatter, parsed -\u003e {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            for (TemporalQuery\u003cR\u003e q : queries) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    R value \u003d q.queryFrom(parsed);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    if (value !\u003d null) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        return value;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        });"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private Stream\u003cLocalDate\u003e parseWeekday(DayOfWeek weekday) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        TemporalAdjuster nextOrSameWeekday \u003d TemporalAdjusters.nextOrSame(weekday);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        TemporalAdjuster nextWeekday \u003d TemporalAdjusters.next(weekday);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        LocalDate first \u003d LocalDate.now().with(nextOrSameWeekday);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return Stream.iterate(first, prev -\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                LocalDate.from(nextWeekday.adjustInto(prev))"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        );"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private Stream\u003cLocalDate\u003e parseMonthDay(MonthDay md) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        LocalDate now \u003d LocalDate.now();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        int startYear \u003d now.getYear();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        IntStream yearStream \u003d IntStream.range(startYear, 9999);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        if (md.equals(MonthDay.of(2, 29))) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            yearStream \u003d yearStream.filter(y -\u003e Year.of(y).isLeap());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return yearStream.mapToObj(y -\u003e md.atYear(y))"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                .filter(date -\u003e date.isAfter(now));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private LocalDateTime tryDates(Stream\u003cLocalDate\u003e possibleDates, LocalTime exactTime) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        if (possibleDates \u003d\u003d null || exactTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return possibleDates.map(d -\u003e d.atTime(exactTime))"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                .filter(d -\u003e d.isAfter(now))"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                .findFirst().orElse(null);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public LocalDateTime parseDateTime() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        for (DateTimeFormatter dt : dateFormatters) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            LocalDateTime date \u003d tryParses(dt,"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    acc -\u003e {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        LocalDate exactDate \u003d LocalDate.from(acc);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        if (exactDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                            return null;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        LocalTime exactTime \u003d parseTime();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        if (exactTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                            return null;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        return exactDate.atTime(exactTime);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    },"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    acc -\u003e {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        Stream\u003cLocalDate\u003e possibleDates \u003d parseMonthDay(MonthDay.from(acc));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        LocalTime exactTime \u003d parseTime();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        return tryDates(possibleDates, exactTime);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    });"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            if (date !\u003d null) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                return date;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        for (DateTimeFormatter dt : dateFormatters) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            LocalDateTime date \u003d tryParses(dt,"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    acc -\u003e {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        LocalDate exactDate \u003d LocalDate.from(acc);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        if (exactDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                            return null;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        return exactDate.atTime(LocalTime.MIDNIGHT);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    },"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    acc -\u003e {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        Stream\u003cLocalDate\u003e possibleDates \u003d parseMonthDay(MonthDay.from(acc));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        return tryDates(possibleDates, LocalTime.MIDNIGHT);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    });"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            if (date !\u003d null) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                return date;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        Stream\u003cLocalDate\u003e possibleDates \u003d tryParse(weekdayFormatter,"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                acc -\u003e parseWeekday(DayOfWeek.from(acc))"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        );"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        LocalTime exactTime \u003d parseTime();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        if (exactTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            exactTime \u003d LocalTime.MIDNIGHT;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return tryDates(possibleDates, exactTime);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    private LocalTime parseTime() {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        for (DateTimeFormatter dt : timeFormatters) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            LocalTime time \u003d tryParse(dt, LocalTime::from);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            if (time !\u003d null) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                return time;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 219
    }
  },
  {
    "path": "src/main/resources/org/duke/ui/javafx/DukeRootPane.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\u003c?import org.duke.ui.javafx.DukeFx?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml\" type\u003d\"javafx.scene.layout.BorderPane\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    \u003ccenter\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"outputScroll\" hbarPolicy\u003d\"NEVER\" fitToWidth\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            \u003cVBox fx:id\u003d\"outputCol\" spacing\u003d\"50\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                \u003cpadding\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    \u003cInsets topRightBottomLeft\u003d\"100\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                \u003c/padding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    \u003c/center\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    \u003cbottom\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        \u003cBorderPane\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            \u003ccenter\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                \u003cTextArea fx:id\u003d\"inputBox\" maxWidth\u003d\"Infinity\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        \u003cDukeFx fx:constant\u003d\"BASE_FONT\"/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                \u003c/TextArea\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            \u003c/center\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            \u003cright\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                \u003cButton fx:id\u003d\"submitButton\" defaultButton\u003d\"true\" maxHeight\u003d\"Infinity\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    \u003cfont\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        \u003cDukeFx fx:constant\u003d\"BASE_FONT\"/\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    \u003c/font\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                    Submit"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                \u003c/Button\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            \u003c/right\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        \u003c/BorderPane\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    \u003c/bottom\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "iltep64": 36
    }
  },
  {
    "path": "src/main/resources/org/duke/ui/javafx/Message.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\u003c?import org.duke.ui.javafx.DukeFx?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml\" type\u003d\"javafx.scene.layout.HBox\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    \u003cfx:define\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        \u003cLabel fx:id\u003d\"userIcon\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                \u003cDukeFx fx:constant\u003d\"BASE_FONT\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            \u003ccontentDisplay\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                \u003cContentDisplay fx:constant\u003d\"TOP\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            \u003c/contentDisplay\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            \u003cunderline\u003etrue\u003c/underline\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        \u003cLabel fx:id\u003d\"messageText\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                \u003cDukeFx fx:constant\u003d\"BASE_FONT\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    \u003c/fx:define\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    \u003cspacing\u003e10.0\u003c/spacing\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        \u003cInsets topRightBottomLeft\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    \u003cborder\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        \u003cDukeFx fx:constant\u003d\"MSGBOX_BORDER\"/\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    \u003c/border\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iltep64"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "iltep64": 30
    }
  },
  {
    "path": "src/test/java/org/duke/ui/CommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.duke.cmd.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class CommandTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public void testBasicCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        Command c \u003d Command.parse(\"hello world\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        assertNotNull(c);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        assertEquals(c.getType(), \"hello\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        assertEquals(c.getArguments(), \"world\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        assertTrue(c.getNamedArguments().isEmpty());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public void testSwitchCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        Command c \u003d Command.parse(\"one two three /four /five six\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        assertNotNull(c);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        assertEquals(c.getType(), \"one\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        assertEquals(c.getArguments(), \"two three\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        assertEquals(c.getNamedArguments().size(), 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        assertEquals(c.getNamedArguments().get(\"four\"), \"\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        assertEquals(c.getNamedArguments().get(\"five\"), \"six\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 28
    }
  },
  {
    "path": "src/test/java/org/duke/util/DateParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iltep64"
        },
        "content": "package org.duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iltep64"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iltep64"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iltep64"
        },
        "content": "public class DateParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    public void exactDateTimeTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iltep64"
        },
        "content": "        assertEquals(DateParser.parse(\"1 May 2019 12AM\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                LocalDate.of(2019, Month.MAY, 1)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iltep64"
        },
        "content": "                        .atTime(LocalTime.MIDNIGHT));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iltep64"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iltep64"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iltep64": 18
    }
  }
]
