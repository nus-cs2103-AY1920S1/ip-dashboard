[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": "group \u0027src.main.java\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    mainClassName \u003d \u0027Duke\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 2,
      "-": 18
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neoshh"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "neoshh": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    private String action;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    private String nameOfTask; "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    private String dateStr;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    private String wordToFind;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\tprivate boolean exit \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\tpublic Command(String action, int index, String nameOfTask, String dateStr, String wordToFind) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\tthis.action \u003d action;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\tthis.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\tthis.nameOfTask \u003d nameOfTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        this.dateStr \u003d dateStr;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        this.wordToFind \u003d wordToFind;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * Executes command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * @param tasks Access of the TaskList"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * @param ui Access of Ui"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * @param storage Access of storage to save tasks list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\tpublic void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        if (action.equals(\"list\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            tasks.printList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } else if (action.equals(\"delete\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"     Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"       \" + tasks.get(index));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            tasks.delete(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"     Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } else if (action.equals(\"done\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            tasks.done(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } else if (action.equals(\"bye\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            exit \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } else if (action.equals(\"todo\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            Task newTask \u003d new ToDo(nameOfTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"       \" + newTask);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            tasks.add(newTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } else if (action.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            Task newTask \u003d new Deadline(nameOfTask, dateStr);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"       \" + newTask);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            tasks.add(newTask);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } else if (action.equals(\"event\")){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            Task newTask \u003d new Event(nameOfTask, dateStr);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"       \" + newTask);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            tasks.add(newTask);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            tasks.printListWithKeyword(wordToFind);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        storage.save(tasks.getList());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * Returns the state of exit"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\treturn exit;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 72
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * Returns the format of the String to be saved in txt file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public String taskSavedTextFormat() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        String done \u003d \"0\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        if (super.isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            done \u003d \"1\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return \"D | \" + done + \" | \" + super.description + \" | \" + by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 25
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * Runs Duke.java"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        new Duke(\"/Users/sihao/Desktop/NUS AY19:20 Sem 1/CS2103/Duke/Data/Duke.txt\").run();  "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 38,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\tpublic DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * Returns the format of the String to be saved in txt file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public String taskSavedTextFormat() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        String done \u003d \"0\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        if (super.isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            done \u003d \"1\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return \"E | \" + done + \" | \" + super.description + \" | \" + at;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 25
    }
  },
  {
    "path": "src/main/java/IncompleteCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class IncompleteCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public IncompleteCommandException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 5
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 5
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\tprivate static String action;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    private static int index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    private static String nameOfTask; "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    private static String dateStr;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    private static String wordToFind;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t * Returns the correct command from user input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t * If command is invalid or incomplete, throw exception"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t * @param fullCommand String of command read from user input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t * @return Command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t * @throws DukeException If invalid or incomplete command is parsed"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \taction \u003d fullCommand.split(\" \")[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \tif (action.equals(\"list\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            index \u003d -1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            nameOfTask \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            dateStr \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\t\twordToFind \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t} else if (action.equals(\"delete\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            nameOfTask \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            dateStr \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\t\twordToFind \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\ttry {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                index \u003d Integer.parseInt(fullCommand.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t} catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                throw new InvalidCommandException(\"Invalid Command\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t} catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t\tthrow new IncompleteCommandException(\"Incomplete Command\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t} else if (action.equals(\"done\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            nameOfTask \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            dateStr \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\t\twordToFind \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\ttry {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                index \u003d Integer.parseInt(fullCommand.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t} catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                throw new InvalidCommandException(\"Invalid Command\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t} catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t\tthrow new IncompleteCommandException(\"Incomplete Command\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t} else if (action.equals(\"bye\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\tindex \u003d -1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            nameOfTask \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            dateStr \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\t\twordToFind \u003d \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t} else if (action.equals(\"todo\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\tindex \u003d -1;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            dateStr \u003d \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\t\twordToFind \u003d \"\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\ttry {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t\tnameOfTask \u003d fullCommand.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t} catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t\tthrow new IncompleteCommandException(\"Incomplete Command\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t} else if (action.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\tindex \u003d -1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\t\twordToFind \u003d \"\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\ttry {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t\tnameOfTask \u003d fullCommand.split(\" \", 2)[1].split(\"/by\")[0];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t\tdateStr \u003d fullCommand.split(\" \", 2)[1].split(\"/by\")[1];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t} catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t\tthrow new IncompleteCommandException(\"Incomplete Command\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t}    \t\t"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t} else if (action.equals(\"event\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\tindex \u003d -1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\t\twordToFind \u003d \"\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\ttry {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t\tnameOfTask \u003d fullCommand.split(\" \", 2)[1].split(\"/by\")[0];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t\tdateStr \u003d fullCommand.split(\" \", 2)[1].split(\"/at\")[1];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t} catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t\tthrow new IncompleteCommandException(\"Incomplete Command\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t} "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t} else if (action.equals(\"find\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\t\tindex \u003d -1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\t\tnameOfTask \u003d \"\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\t\tdateStr \u003d \"\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\t\ttry {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\t\t\twordToFind \u003d fullCommand.split(\" \")[1];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\t\t} catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\t\t\tthrow new IncompleteCommandException(\"Incomplete Command\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\tthrow new InvalidCommandException(\"Invalid Command\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t}"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        String d \u003d dateStr;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \tif (!d.equals(\"\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\ttry {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\").parse(dateStr);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t} catch (ParseException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t\tthrow new DukeException(\"Wrong date and time format\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t\t}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \t}"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return new Command(action, index, nameOfTask, dateStr, wordToFind);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 108
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\tprivate String filePath;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\tpublic Storage(String filePath) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t\tthis.filePath \u003d filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * Loads task list from txt file into ArrayList"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * @throws DukeException If list cannot be loaded"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        \tFile file \u003d new File(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            String taskString;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            while ((taskString \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                String[] taskStringArray \u003d taskString.split(\"\\\\|\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                if (taskStringArray[0].trim().equals(\"T\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    Task task \u003d new ToDo(taskStringArray[2].trim());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    if (taskStringArray[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        task.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    taskList.add(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                } else if (taskStringArray[0].trim().equals(\"D\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    Task task \u003d new Deadline(taskStringArray[2].trim(), taskStringArray[3].trim());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    if (taskStringArray[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        task.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    taskList.add(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    Task task \u003d new Event(taskStringArray[2].trim(), taskStringArray[3].trim());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    if (taskStringArray[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                        task.isDone \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                    taskList.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            throw new DukeException(\"File not found\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * Saves the task list in a txt file"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * @param list List of all the tasks"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            File file \u003d new File(\"/Users/sihao/Desktop/NUS AY19:20 Sem 1/CS2103/Duke/Data/Duke.txt\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file.getAbsoluteFile());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            for (Task t : list) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                bw.write(t.taskSavedTextFormat() + \"\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 69
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * Returns the status icon of the tasks (done or not done)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * Marks task as done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                + \"       [\\u2713] \" + description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * Returns the format of the String to be saved in txt file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public abstract String taskSavedTextFormat();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 35
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    private ArrayList\u003cTask\u003e list; "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \tthis.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \tthis.list \u003d list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * Returns the task stored in the list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * @param index Index of the task in the list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \treturn this.list.get(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * Deletes the task stored in the list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * @param index Index of the task in the list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \tthis.list.remove(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * Marks the task stored in the list as done"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * @param index Index of the task in the list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public void done(int index) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        this.list.get(index).markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * Returns the list for read only access"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * Adds the task to the list"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * @param task Task object to be added"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \tthis.list.add(task);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * Returns the size of the list"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * Prints all the tasks in the list"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \tSystem.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            System.out.println(\"     \" + i + \".\" + list.get(i - 1));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * Prints all the tasks in the list that have matching keyword"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * @param keyword Keyword to search for"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public void printListWithKeyword(String keyword) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        int num \u003d 1;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            if (list.get(i).toString().contains(keyword)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                System.out.println(\"     \" + num + \".\" + list.get(i));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "neoshh"
        },
        "content": "                num++;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 90
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * Returns the format of the String to be saved in txt file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public String taskSavedTextFormat() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        String done \u003d \"0\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        if (super.isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neoshh"
        },
        "content": "            done \u003d \"1\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        return \"T | \" + done + \" | \" + super.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 22
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neoshh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neoshh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * Prints welcome message when Duke.java is run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * Prints loading error message"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \tSystem.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"     No task to load\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * Prints the divider line"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * Prints out error message after exception is caught"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * @param errorMessage Message of exception that is caught"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neoshh"
        },
        "content": "        System.out.println(\"     \" + errorMessage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neoshh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * Returns user input as a String"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     * @return User input as String"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neoshh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \tScanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    \treturn sc.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neoshh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neoshh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neoshh": 49
    }
  }
]
