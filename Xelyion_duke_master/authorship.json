[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "group \u0027src.main.java\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 26,
      "-": 18
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "To-Do    | Not done | task1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "Event    | Done     | task2 /at 11pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "Deadline | Not done | task3 /by Wed Dec 11 18:00:00 SGT 2019"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "End of file"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 4
    }
  },
  {
    "path": "dukeArchive.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "To-Do    | Not done | task1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "Event    | Done     | task2 /at 11pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "Deadline | Not done | task3 /by Wed Dec 11 18:00:00 SGT 2019"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "End of file"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 4
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents an adding to task list command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Commands include adding Deadlines, Events and ToDos to the task list."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tpublic AddCommand(String type, String command) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        super(type, command);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Executes the AddCommand."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Adds Deadlines: \"deadline\"."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Adds Events: \"event\"."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Adds ToDos: \"todo\"."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param ui       The Ui currently running."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param taskList The TaskList Class containing the task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param storage  The Storage class containing the name of file the be read."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return output The String output for GUI message."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws DukeException If unable to identify command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String execute(Ui ui, TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        switch (this.type) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            newTask \u003d new Deadline(command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                newTask.understandDate();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            TaskList.tasks.add(newTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            newTask \u003d new Event(command);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                newTask.understandDate();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            TaskList.tasks.add(newTask);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            newTask \u003d new ToDo(command);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            TaskList.tasks.add(newTask);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(\"AddCommand Exception: Unable to identify command\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task:\\n\" + newTask + \"\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        output +\u003d \"Now you have \" + TaskList.tasks.size() + \" tasks in the list\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 60
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * An abstract class command, created from the Parser."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains Strings to store the command and type of command."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected static boolean isExit \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Command(String type, String fullCommand) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.command \u003d fullCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String execute(Ui ui, TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 21
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents a task with a deadline."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains a description of the task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains the time of the deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Deadline(String descriptionAndTime) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        super(descriptionAndTime);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String[] splitString \u003d descriptionAndTime.split(\"/by\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.description \u003d splitString[0].substring(1, splitString[0].length() - 1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.time \u003d splitString[1].substring(1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Returns the time of the Task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return timeToGet String containing the time of the Task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return (\" /by \" + this.time);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Determines date from time input if format fits \"DD/MM/YYYY HHMM\"."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws Exception If date is unable to be understood or parsed."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public void understandDate() throws Exception {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String[] splitString \u003d this.time.split(\" \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        //If time input is split exactly into date and time"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (splitString.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            //If time input has exactly 4 digits"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            if (splitString[1].length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy\").parse(splitString[0]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                long hour \u003d Long.parseLong(splitString[1].substring(0, 2));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                long min \u003d Long.parseLong(splitString[1].substring(2, 4));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                date.setTime(date.getTime() + ((hour * 60 + min) * 60000));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                this.time \u003d date.toString();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                throw new DukeException(\"Time is not in the correct format\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(\"Date is not in the format: (DD/MM/YYYY HHMM)\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d \"[D][\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        output +\u003d \" (by: \" + this.time + \")\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 62
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\tFXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\tfxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\tfxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\tfxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\te.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tdialog.setText(text);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tdisplayPicture.setImage(img);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate void flip() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tCollections.reverse(tmp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tgetChildren().setAll(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tsetAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tpublic static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\treturn new DialogBox(text, img);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tpublic static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tvar db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tdb.flip();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\treturn db;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 58
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.storage \u003d new Storage(\"duke.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            taskList \u003d storage.displayTaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Receives input from the GUI as user input and sends it to be parsed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Places the user input and response in a DialogBoxes and display them."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param stage The stage of the GUI."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    private void handleUserInput(Stage stage) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String userText \u003d (userInput.getText());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String dukeText \u003d (getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                DialogBox.getUserDialog(userText, user),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, duke)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Sends user input to be parsed into a Command, which is then executed."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Returns message to be placed in Dialog Box for Duke\u0027s response."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param fullCommand The String from user input."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return output The output message after parsing the command through Duke."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected String getResponse(String fullCommand) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            Command command \u003d parser.parse(fullCommand);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            output \u003d command.execute(ui, taskList, storage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            output \u003d e.toString();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 66,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * The DukeException returns a message detailing the exceptions thrown in the Duke program."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected String message;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 17
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents an event to be completed."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains a description of the task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains the time of the event."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Event(String descriptionAndTime) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        super(descriptionAndTime);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String[] splitString \u003d descriptionAndTime.split(\"/at\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.description \u003d splitString[0].substring(1, splitString[0].length() - 1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.time \u003d splitString[1].substring(1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Determines date from time input if format fits \"DD/MM/YYYY HHMM\"."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws Exception If date is unable to be understood or parsed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public void understandDate() throws Exception {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String[] splitString \u003d this.time.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        //If time input is split exactly into date and time"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (splitString.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            //If time input has exactly 4 digits"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            if (splitString[1].length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy\").parse(splitString[0]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                long hour \u003d Long.parseLong(splitString[1].substring(0, 2));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                long min \u003d Long.parseLong(splitString[1].substring(2, 4));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                date.setTime(date.getTime() + ((hour * 60 + min) * 60000));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                this.time \u003d date.toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                throw new DukeException(\"Time is not in the correct format\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(\"Date is not in the format: (DD/MM/YYYY HHMM)\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Returns the time of the Task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return timeToGet String containing the time of the Task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String timeToGet \u003d (\" /at \" + this.time);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return timeToGet;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d \"[E][\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        output +\u003d \" (at: \" + this.time + \")\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 63
    }
  },
  {
    "path": "src/main/java/ExceptionCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents the Exception command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Returns the exception as a string to be displayed in DialogBox"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class ExceptionCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tpublic ExceptionCommand(String type, String command) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tsuper(type, command);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * Executes the ExceptionCommand."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * @param ui       The Ui currently running."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * @param taskList The TaskList Class containing the task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * @param storage  The Storage class containing the name of file the be read."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * @return output The String output for GUI message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tpublic String execute(Ui ui, TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tString output \u003d this.command;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\treturn output;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 24
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents the exit command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Sets the boolean flag isExit to true for Ui to exit loop."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public ExitCommand(String type, String command) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        super(type, command);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Executes the ExitCommand."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Sets static boolean variable isExit to \"true\"."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param ui       The Ui currently running."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param taskList The TaskList Class containing the task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param storage  The Storage class containing the name of file the be read."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return output The String output for GUI message."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String execute(Ui ui, TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d ui.showFarewell();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 26
    }
  },
  {
    "path": "src/main/java/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents the help command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Displays the list of keywords that can be invoked."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tpublic HelpCommand(String type, String command) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tsuper(type, command);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * Executes the HelpCommand."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * @param ui       The Ui currently running."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * @param taskList The TaskList Class containing the task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * @param storage  The Storage class containing the name of file the be read."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * @return output The message detailing the keywords that can be invoked."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tpublic String execute(Ui ui, TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tString output \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\toutput +\u003d \"The following details functions and the command to invoke them:\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\toutput +\u003d \"  --Add a task: deadline/event/todo\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\toutput +\u003d \"  --Display current task list: list\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\toutput +\u003d \"  --Mark a task as done: done\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\toutput +\u003d \"  --Delete a task: delete\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\toutput +\u003d \"  --Search for a task by keyword: find\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\toutput +\u003d \"  --Save the current task list to backup: save\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\toutput +\u003d \"  --Clear the current task list: clear\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\toutput +\u003d \"  --Exit the program: bye\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\toutput +\u003d \"Please use the respective keywords for more information\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\treturn output;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 34
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tpublic static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tApplication.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tpublic void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\tFXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\tAnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\tScene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\tstage.setScene(scene);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\tfxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\tstage.show();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\te.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 28
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import javafx.stage.WindowEvent;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tpublic void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tscrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tdialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\t\tDialogBox.getDukeDialog(new Ui().showWelcome(), dukeImage)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tpublic void setDuke(Duke d) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tduke \u003d d;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t@FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\tprivate void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tString input \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tString response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tdialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\t\tDialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\t\tDialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tuserInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\tif (response.equals(new Ui().showFarewell())) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\tStage primaryStage \u003d (Stage) scrollPane.getScene().getWindow();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\tprimaryStage.fireEvent(new WindowEvent("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\t\t\tprimaryStage,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\t\t\tWindowEvent.WINDOW_CLOSE_REQUEST"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t\t));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 62
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents a Parser."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Determines the type of the task to create an appropriate command."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Splits the full command into keyword and description based on keywords."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Creates and returns a Command object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * The following types are AddCommands: \"deadline\", \"event\", \"todo\"."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * The follow type is a HelpCommand: \"help\"."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * The following type is an ExitCommand: \"exit\"."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * The following types are StorageCommands: \"archive\", \"save\"."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * The following types are TaskListCommands: \"clear\", \"delete\", \"done\", \"find\", \"list\"."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * The HelpCommand is returned by default if no keyword is detected."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param fullCommand The full command input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return command A Command Class to be executed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws DukeException If fullCommand entered does not adhere to specifications of each type."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String type \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            if (fullCommand.contains(\"find\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                command \u003d parseFind(fullCommand);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else if (fullCommand.equals(\"clear\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                command \u003d parseClear(fullCommand);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                command \u003d parseExit(fullCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else if (fullCommand.equals(\"save\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                command \u003d parseSave(fullCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else if (fullCommand.contains(\"archive\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                command \u003d parseArchive(fullCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                command \u003d parseList(fullCommand);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else if (fullCommand.contains(\"delete\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                command \u003d parseDelete(fullCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else if (fullCommand.contains(\"done\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                command \u003d parseMarkDone(fullCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else if (fullCommand.contains(\"event\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                command \u003d parseAddCommand(fullCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else if (fullCommand.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                command \u003d parseAddCommand(fullCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else if (fullCommand.contains(\"todo\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                command \u003d parseAddCommand(fullCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                command \u003d new HelpCommand(\"help\", fullCommand);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            command \u003d new ExceptionCommand(\"DukeException\" ,e.toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Parses commands containing the keyword \"find\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param fullCommand The full command input."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return outputCommand A TaskListCommand Class to be executed."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws DukeException If fullCommand entered does not adhere to specifications."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Command parseFind(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        Command outputCommand;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        fullCommand \u003d fullCommand.substring(4);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (fullCommand.isEmpty()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            errorMessage +\u003d \"Parser Exception: Please specify keyword for search in the format:\\n\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            errorMessage +\u003d \"find -YourKeywordHere-\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        outputCommand \u003d new TaskListCommand(\"find\", fullCommand);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return outputCommand;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Parses commands containing the keyword \"clear\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param fullCommand The full command input."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return outputCommand A TaskListCommand Class to be executed."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Command parseClear(String fullCommand) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        Command outputCommand \u003d new TaskListCommand(\"clear\", fullCommand);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return outputCommand;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Parses commands containing the keyword \"bye\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param fullCommand The full command input."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return outputCommand An ExitCommand Class to be executed."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Command parseExit(String fullCommand) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        Command  outputCommand \u003d new ExitCommand(\"exit\", fullCommand);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return outputCommand;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Command parseSave(String fullCommand) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        Command outputCommand \u003d new StorageCommand(\"save\", fullCommand);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return outputCommand;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Parses commands containing the keyword \"archive\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param fullCommand The full command input."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return outputCommand An StorageCommand Class to be executed."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws DukeException If fullCommand entered does not adhere to specifications."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Command parseArchive(String fullCommand) throws DukeException{"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        fullCommand \u003d fullCommand.substring(7);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (fullCommand.isEmpty()) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            String errorMessage \u003d \"Parser Exception: Please specify archive command in the format:\\n\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            errorMessage +\u003d \"archive save: Saves the task list to archive and clears it.\\n\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            errorMessage +\u003d \"archive load: Load the task list from archive\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            fullCommand.substring(1);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            Command outputCommand \u003d new StorageCommand(\"archive\", fullCommand);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            return outputCommand;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Parses commands containing the keyword \"archive\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param fullCommand The full command input."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return outputCommand A TaskListCommand Class to be executed."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Command parseList(String fullCommand) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        Command outputCommand \u003d new TaskListCommand(\"list\", fullCommand);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return outputCommand;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Parses commands containing the keyword \"delete\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param fullCommand The full command input."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return outputCommand A TaskListCommand Class to be executed."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws DukeException If fullCommand entered does not adhere to specifications."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Command parseDelete(String fullCommand) throws DukeException{"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        fullCommand \u003d fullCommand.substring(6);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (fullCommand.isEmpty()) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            errorMessage +\u003d \"Parser Exception: Please specify keyword for deletion in the format:\\n\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            errorMessage +\u003d \"delete -YourKeywordHere-\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        fullCommand \u003d fullCommand.substring(1);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        char firstChar \u003d fullCommand.charAt(0);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (firstChar \u003c 0 || firstChar \u003e \u00279\u0027) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            errorMessage +\u003d \"Parser Exception: Please specify a number to be deleted\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        Command outputCommand \u003d new TaskListCommand(\"delete\", fullCommand);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return outputCommand;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Parses commands containing the keyword \"done\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param fullCommand The full command input."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return outputCommand A TaskListCommand Class to be executed."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws DukeException If fullCommand entered does not adhere to specifications."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Command parseMarkDone(String fullCommand) throws DukeException{"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        fullCommand \u003d fullCommand.substring(4);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (fullCommand.isEmpty()) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(\"Parser Exception: OOPS!! Please specify which task is done\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        fullCommand \u003d fullCommand.substring(1);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (fullCommand.charAt(0) \u003c \u00270\u0027 || fullCommand.charAt(0) \u003e \u00279\u0027) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(\"Parser Exception: OOPS!! Please enter a number for task number that is done\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        Command outputCommand \u003d new TaskListCommand(\"done\", fullCommand);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return outputCommand;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Parses commands containing the keyword \"deadline\" or \"event\" or \"todo\"."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param fullCommand The full command input."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return outputCommand An AddCommand Class to be executed."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws DukeException If fullCommand entered does not adhere to specifications."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public static Command parseAddCommand(String fullCommand) throws DukeException{"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String type \u003d \"\";"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (fullCommand.contains(\"/at\")) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            type \u003d \"event\";"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            fullCommand \u003d fullCommand.substring(5);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            if (fullCommand.isEmpty()) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                errorMessage +\u003d \"Parser Exception: Please specify event according to the format:\\n\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                errorMessage +\u003d \"event -InsertEventHere- /at DD/MM/YYYY HHMM\\n\";"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                errorMessage +\u003d \"E.g. (event MyEvent /at 11/12/2019 1830)\";"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else if (fullCommand.contains(\"/by\")) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            type \u003d \"deadline\";"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            fullCommand \u003d fullCommand.substring(8);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            if (fullCommand.isEmpty()) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                errorMessage +\u003d \"Parser Exception: Please specify deadline according to the format:\\n\";"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                errorMessage +\u003d \"event -InsertDeadlineHere- /by DD/MM/YYYY HHMM\\n\";"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                errorMessage +\u003d \"E.g. (deadline MyDeadline /at 11/12/2019 1830)\";"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else if (fullCommand.contains(\"todo\")) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            type \u003d \"todo\";"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            fullCommand \u003d fullCommand.substring(4);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            if (fullCommand.isEmpty()) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                errorMessage +\u003d \"Parser Exception: Please specify todo according to the format:\\n\";"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                errorMessage +\u003d \"event -InsertToDoHere- \\n\";"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                errorMessage +\u003d \"E.g. (todo MyToDo)\";"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(\"Parser Exception: Unable to identify AddCommand\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        Command outputCommand \u003d new AddCommand(type, fullCommand);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return outputCommand;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 228
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents a storage file."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains a file name to read and write from."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains an archive file name to read and write from."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains a boolean that decides if the archive file should be used."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected String fileName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected String archiveFileName \u003d \"dukeArchive.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected String initialTaskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected boolean hasInitialized \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected boolean isArchive \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Storage(String fileName) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Writes the contents of the task list onto the file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param tasks The task list to get tasks from."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return output Message indicating that task list has been saved."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws Exception If unable to write to file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String saveTaskList(ArrayList\u003cTask\u003e tasks) throws Exception{"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String strLine \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            String fileToOpen \u003d this.fileName;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            if (isArchive) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                fileToOpen \u003d archiveFileName;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            FileWriter fw \u003d new FileWriter(fileToOpen, false);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            //Appends the string to the file"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            for (Task x : tasks) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                String type \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                switch (x.type) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                        type \u003d \"To-Do   \";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                        type \u003d \"Event   \";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                        type \u003d \"Deadline\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                String isDone \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                if (x.isDone) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    isDone \u003d \"Done    \";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    isDone \u003d \"Not done\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                String description \u003d x.description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                String time \u003d x.getTime();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                strLine \u003d type + \" | \" + isDone + \" | \" + description + time + \"\\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                fw.write(strLine);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            fw.write(\"End of file\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            if (isArchive) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                output +\u003d \"Archive task list has been saved! Current task list has been cleared.\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                output +\u003d \"Task list has been saved!\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            System.err.println(\"IOException: \" + ioe.getMessage());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(\"Storage Exception: Error when writing to file.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Reads the file to add tasks to the task list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param fileInput The String read from file."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param taskList  The task list to get tasks from."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return taskList The updated task list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public TaskList loadFromFile(String fileInput, TaskList taskList) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        boolean isDone \u003d true;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (fileInput.contains(\"Not done\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            isDone \u003d false;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String newCommand \u003d fileInput.substring(22);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (fileInput.contains(\"/by\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            newCommand \u003d \" \" + newCommand;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            Task newDeadline \u003d new Deadline(newCommand);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            newDeadline.isDone \u003d isDone;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            TaskList.tasks.add(newDeadline);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else if (fileInput.contains(\"/at\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            newCommand \u003d \" \" + newCommand;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            Task newEvent \u003d new Event(newCommand);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            newEvent.isDone \u003d isDone;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            TaskList.tasks.add(newEvent);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            newCommand \u003d \" \" + newCommand;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            Task newToDo \u003d new ToDo(newCommand);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            newToDo.isDone \u003d isDone;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            TaskList.tasks.add(newToDo);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Loads from the specified file for initialization."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Saves the task list to the Storage object."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Does not load from file if already initialized."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return taskList The updated task list."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws DukeException If file is empty."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public TaskList displayTaskList() throws DukeException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String fileToOpen \u003d fileName;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (isArchive) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            fileToOpen \u003d archiveFileName;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String strLine \u003d \"\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String printQueue \u003d \"\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(fileToOpen));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            //read the file content"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            printQueue +\u003d (\"Here is your task list file:\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            while (strLine !\u003d null) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                sb.append(strLine);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                sb.append(System.lineSeparator());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                strLine \u003d br.readLine();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                if (strLine.contains(\"End of file\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                if (!this.hasInitialized) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    loadFromFile(strLine, taskList);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                printQueue +\u003d strLine;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            this.hasInitialized \u003d true;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            System.err.println(\"IOException: \" + ioe.getMessage());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(\"Storage Exception: Error when reading \" + fileToOpen);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        initialTaskList \u003d printQueue;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Writes the contents of the task list onto the archive file."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param tasks The task list to get tasks from."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return output Message indicating that archive task list has been saved."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String archiveSaveTaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            isArchive \u003d true;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            output +\u003d saveTaskList(tasks);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            isArchive \u003d false;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public TaskList archiveLoadTaskList() throws DukeException{"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        isArchive \u003d true;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            isArchive \u003d true;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            hasInitialized \u003d false;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            TaskList output \u003d displayTaskList();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            isArchive \u003d false;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(\"Storage Exception: Error when loading from archive\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 191
    }
  },
  {
    "path": "src/main/java/StorageCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents a storage command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Commands include \"save\", \"archive\"."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * As well as searching task list and marking task as done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class StorageCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public StorageCommand(String type, String command) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        super(type, command);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Executes the Storage command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Saving task list to file: \"save\"."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Load file to new task list and display: \"display\"."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param ui       The Ui currently running."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param taskList The TaskList Class containing the task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param storage  The Storage class containing the name of file the be read."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws DukeException If command is not identified."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return output The String output for GUI message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String execute(Ui ui, TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (this.type.equals(\"save\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                output \u003d storage.saveTaskList(TaskList.tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                output +\u003d e;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else if (this.type.equals(\"display\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            storage.displayTaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            output \u003d \"The following is your saved task list\\n\" + taskList.toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else if (this.type.equals(\"archive\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                assert (this.command.equals(\"save\") || this.command.equals(\"load\")) : \"assertionError\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                if (this.command.contains(\"save\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    output \u003d storage.archiveSaveTaskList(TaskList.tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    taskList.clearTaskList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                } else if (this.command.contains(\"load\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    taskList \u003d storage.archiveLoadTaskList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    output \u003d \"The archived task list has been loaded\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    throw new DukeException(\"Storage Exception: TaskListCommand not identified.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } catch (AssertionError e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                String assertionError \u003d \"Assertion Error\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                output \u003d assertionError;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 58
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains the description and type of the task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains boolean flag to determine if task has been done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.type \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Determines if task is done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return O if done, X if not done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return (isDone ? \"O\" : \"X\"); //return tick or X symbols"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Gets time of the task for Events and Deadlines."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Does nothing for ToDos or Tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return time Time of the event or deadline."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Parses the time input the understand date."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Does nothing for ToDos or Tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws Exception If unable to understand date."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public void understandDate() throws Exception {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 49
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents a task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains a description of the task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains the list of tasks in an ArrayList"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param command Command that includes the index of task to be marked."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return output Message to indicate task that has been done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws DukeException If unable to locate index of task to be marked as done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String markAsDone(String command) throws DukeException{"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        int completedTaskNumber \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (completedTaskNumber \u003e tasks.size()){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(\"TaskList Exception: Index of task not found\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        tasks.get(completedTaskNumber - 1).isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String markedDoneMessage \u003d \"Nice! I\u0027ve marked this task as done:\\n\" +  tasks.get(completedTaskNumber - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return markedDoneMessage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Prints the entire task list with index."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return output The printed task list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String printTaskList() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        for (Task x : tasks) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            output +\u003d (\"\\n\" + x);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Clears the task list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return clearListMessage The message to indicate task list has been cleared."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String clearTaskList() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String clearListMessage \u003d  \"The task list has been cleared!\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return clearListMessage;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Deletes a task from the task list, and returns a string to update on remaining tasks."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param command The index of the task to be deleted, starts from 1."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return output Message to update on remaining tasks."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws DukeException If unable to locate index of task to be deleted."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String deleteTask(String command) throws DukeException{"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        int index \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (index \u003c\u003d tasks.size() \u0026\u0026 index \u003e 0) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            Task removedTask \u003d tasks.remove(index - 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            output +\u003d  (\"Noted. I\u0027ve removed this task:\\n\" + removedTask);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            output +\u003d (\"\\nNow you have \" + tasks.size() + \" tasks left in the list\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                output +\u003d (\"Congratulations, your last task has been deleted!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(\"TaskList Exception: Index of task to be deleted not found.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Searches the task list with a keyword and prints all that matches."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Prints \"There are no matching tasks in your list\" if no match is found."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param command Command that includes the keyword to be searched for."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return output The string containing the located task/s or error message."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String searchByKeyword(String command) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        command \u003d command.substring(1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        boolean hasMatch \u003d false;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        for (Task x : tasks) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            if (x.description.contains(command)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                int index \u003d tasks.indexOf(x) + 1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                if (!hasMatch) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    output +\u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                    hasMatch \u003d true;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                output +\u003d (\"\\n\" + index + \".\" + x);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (!hasMatch) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            output +\u003d \"There are no matching tasks in your list\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 104
    }
  },
  {
    "path": "src/main/java/TaskListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents a task list command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Types of command include \"clear\", \"delete\", \"done\", \"find\", \"list\"."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class TaskListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public TaskListCommand(String type, String command) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        super(type, command);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Executes the TaskList command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Deletes all tasks from task list: \"clear\"."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Deletes a task from task list: \"delete\"."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Mark a task as done: \"done\"."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Search for a task: \"find\"."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Displays the task list: \"list\"."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param ui       The Ui currently running."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param taskList The TaskList Class containing the task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @param storage  The Storage class containing the name of file the be read."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return output The String output for GUI message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @throws DukeException If unable to identify command/"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String execute(Ui ui, TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        if (type.equals(\"clear\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            output \u003d taskList.clearTaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else if (type.equals(\"delete\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            output \u003d taskList.deleteTask(this.command);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else if (type.equals(\"done\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            output \u003d taskList.markAsDone(this.command);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else if (type.equals(\"find\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            output \u003d taskList.searchByKeyword(this.command);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else if (type.equals(\"list\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            if (TaskList.tasks.isEmpty()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                output \u003d \"Congratulations! You have no tasks remaining!\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                output \u003d taskList.printTaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            throw new DukeException(\"TaskListCommand Exception: Command not identified.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    return output;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 47
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents a task to be completed."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains a description of the task."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        super(description.substring(1));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String output \u003d \"[T][\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 18
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Represents the user interface."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " * Contains a set of display messages."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    protected Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Returns the welcome message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return welcome The welcome message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String welcome \u003d  \"Yoda, I am. Help you, how can I?\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return welcome;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Returns the farewell message and closes the scanner."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return farewell The farewell message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String showFarewell() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        input.close();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String farewell \u003d  \"Bye. Hope to see you again!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return farewell;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * Reads system input and returns it as String."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     * @return fullCommand The full command as input by the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        String fullCommand \u003d input.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        return fullCommand;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Xelyion": 41
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" graphicTextGap\u003d\"10.0\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Xelyion"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Xelyion"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Xelyion": 19
    }
  }
]
