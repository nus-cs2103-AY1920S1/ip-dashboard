[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 24,
      "-": 18
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.text.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Duke Constructor that takes in a filePath where application data would be stored."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param filePath Path of storage file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            ui.setTasks(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        Duke newDuke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        newDuke.run();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Main run method. Application is in a constant loop until bye command changes isExit to true and"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * break out of the loop."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 56,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    Task task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        ui.showAddTaskMsg(task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 21
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class ByeCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        ui.showByeMsg();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 14
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    protected boolean isExit \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Getter for variable isExit."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @return Whether program should exit."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Execute the command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param tasks List of tasks in memory"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param ui Ui instance"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param storage Storage instance"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @throws DukeException If command word is invalid"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 30
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        Task task \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        ui.showTaskDelMsg(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 22
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        task.setDone();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        ui.showTaskDoneMsg(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 23
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        ui.showTasks();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Default constructor."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Default constructor with error message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param msg Error message"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 19
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    String gap \u003d \"  \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Initialize a Storage object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param filePath Path of file whether data is stored."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Load data from file specified by filePath."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @return ArrayList of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @throws DukeException If no file is found at FilePath."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        String[] inputs;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        boolean isDone;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        ui.showLoadTaskMsg();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        task \u003d new Task(\"\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        inputs \u003d new String[5];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            if (!sc.hasNext()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                ui.noRecordsFoundMsg();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                inputs \u003d sc.nextLine().split(gap);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                isDone \u003d inputs[1].equals(\"1\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                switch (inputs[0]) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    task \u003d new Todo(inputs[2], isDone);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    task \u003d new Deadline(inputs[2], LocalDateTime.parse(inputs[3]), isDone);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    task \u003d new Event(inputs[2], LocalDateTime.parse(inputs[3]), LocalDateTime.parse(inputs[4]), isDone);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        ui.showDataLoadedMsg(tasks.size());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Save program data to file at filePath."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param taskList List of tasks to be written to file."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void save(TaskList taskList) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        String type;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        String isDone;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        String desc;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        String time;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        if (!taskList.isEmpty()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            ui.showSaveDataMsg();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            ui.showNothingToSaveMsg();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            for (Task t : taskList.getTasks()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                type \u003d t instanceof Todo ? \"T\" : t instanceof Deadline ? \"D\" : \"E\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                isDone \u003d t.isDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                desc \u003d t.getDesc();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                time \u003d t instanceof Todo ? \"\" :"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        t instanceof Deadline ? String.valueOf(((Deadline) t).getDateBy()) :"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                                ((Event) t).getStartDate() + gap + ((Event) t).getEndDate();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                fw.write(type + gap + isDone + gap + desc + (time.equals(\"\") ? \"\" : gap) + time + \"\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            ui.showDataSavedMsg();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            ui.showSaveErrMsg();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 115
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    private static final Pattern PAT \u003d Pattern.compile(\"(.+) /by (.+)\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    private static final DateTimeFormatter readFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    private static final DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"d MMMM yyyy HH:mm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public Deadline(String desc) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public Deadline(String desc, boolean done) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(desc, done);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Constructor method."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param desc Task description"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param by Task deadline"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public Deadline(String desc, LocalDateTime by) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Constructor method."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param desc Task description"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param by Task deadline"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param done Task done state"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public Deadline(String desc, LocalDateTime by, boolean done) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(desc, done);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static Task parse(String commandContent) throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        Matcher matcher \u003d PAT.matcher(commandContent);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            throw new DukeException(\"OOPS!!! Arguments is in wrong format\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            LocalDateTime dueDate \u003d LocalDateTime.parse(matcher.group(2), readFormatter);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            Task task \u003d new Deadline(matcher.group(1), dueDate);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            throw new DukeException(\"OOPS!!! The date inputted is not in \u0027DD/MM/YYYY HHmm\u0027 format\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Getter for by variable."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @return Date of deadline"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public LocalDateTime getDateBy() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Setter for by variable."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param by Date of deadline"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void setDateBy(LocalDateTime by) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.getDateBy().format(displayFormatter) + \")\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 86
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    private static final Pattern PAT \u003d Pattern.compile(\"(.+) /at (.+)  (.+)\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    private static final DateTimeFormatter readFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    private static final DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"d MMMM yyyy HH:mm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    protected LocalDateTime startDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    protected LocalDateTime endDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Constructor method."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param desc Event description"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param startDate Event start datetime"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param endDate Event end datetime"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public Event(String desc, LocalDateTime startDate, LocalDateTime endDate) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        if (startDate.isAfter(endDate)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            throw new DukeException(\"OOPS!!! StartDate \u003e EndDate\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Constructor method."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param desc Event description"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param startDate Event start datetime"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param endDate Event end datetime"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param done Event done state"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public Event(String desc, LocalDateTime startDate, LocalDateTime endDate, boolean done) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(desc, done);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static Task parse(String commandContent) throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        Matcher matcher \u003d PAT.matcher(commandContent);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            throw new DukeException(\"OOPS!!! Arguments is in wrong format\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            LocalDateTime startDate \u003d LocalDateTime.parse(matcher.group(2), readFormatter);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            LocalDateTime endDate \u003d LocalDateTime.parse(matcher.group(3), readFormatter);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            return new Event(matcher.group(1), startDate, endDate);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            throw new DukeException(\"OOPS!!! The date inputted is not in \u0027DD/MM/YYYY HHmm\u0027 format\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Getter for startDate variable."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @return Start date of event."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public LocalDateTime getStartDate() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return startDate;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Setter for startDate variable."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param startDate Start date of event."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void setStartDate(LocalDateTime startDate) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Getter for endDate variable."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @return End date of event."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public LocalDateTime getEndDate() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return endDate;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Setter for endDate variable."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param endDate End date of event."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void setEndDate(LocalDateTime endDate) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" +"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                this.getStartDate().format(displayFormatter) + \" to \" +"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                this.getEndDate().format(displayFormatter) + \")\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 107
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    protected String desc;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    static String gap \u003d \"  \";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Initialize a Task object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param desc User inputted description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public Task(String desc) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Initialize a Task object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param desc User inputted description."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param done true if task is done, default is false."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public Task(String desc, boolean done) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Getter method for variable desc."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @return Task description."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return desc;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Setter method for variable desc."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param desc Task description."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void setDesc(String desc) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Getter method for done variable."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @return True if task is done, false if task is not done."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Setter method for done variable."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Set task to done."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        setDone(true);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Setter method for done variable."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param done Done state of task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Returns done status of task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @return Tick if done, cross if not done."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String getDoneStatus() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return isDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return \"[\" + this.getDoneStatus() + \"] \" + getDesc();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 86
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    protected List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Getter for list of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @return List of tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Getter for size variable."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @return Size of task list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Returns if TaskList is empty."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @return true if no task in list, true if there are tasks in list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return tasks.isEmpty();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Returns index of a task if task is in list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param t Task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @return Index of task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @throws DukeException If task not in taskList"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public int indexOf(Task t) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        if (this.getTasks().contains(t)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            return tasks.indexOf(t);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            throw new DukeException(\"Task not in taskList.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Get Task from list at index."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param index Index of task in list"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @return Task at index"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @throws DukeException If index is out of range of list"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public Task get(int index) throws DukeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        if (isValidIndex(index)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            return tasks.get(index - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            throw new DukeException(\"OOPS!!! There is no task at index \" + index + \".\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Add task to list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param t Task to be added to list"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Remove task from task list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param t Task to be removed"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @throws DukeException If task is not in task list"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void remove(Task t) throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        if (tasks.contains(t)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            tasks.remove(t);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            throw new DukeException(\"OOPS!!! There is no such task in taskList.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Remove task at index from list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param index Index at which to remove task"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @return Removed task"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @throws DukeException If index is out of range of list"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public Task remove(int index) throws DukeException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        if (isValidIndex(index)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            task \u003d tasks.remove(index - 1);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            throw new DukeException(\"OOPS!!! There is no such task in taskList.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    private boolean isValidIndex(int index) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d tasks.size();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public List\u003cTask\u003e find(String keyword) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.getTasks().forEach(x -\u003e {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            if (x.desc.contains(keyword)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                tasks.add(x);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 129
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public Todo(String desc) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public Todo(String desc, boolean done) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super(desc, done);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static Task parse(String commandContent) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return new Todo(commandContent);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 21
    }
  },
  {
    "path": "src/main/java/duke/text/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.text;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    private static final Pattern PAT \u003d Pattern.compile(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    String keyWord;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public FindCommand(String keyWord) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.keyWord \u003d keyWord;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        List\u003cTask\u003e foundTasks \u003d PAT.splitAsStream(keyWord)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                .map(x -\u003e tasks.find(x))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                .flatMap(x -\u003e x.stream())"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                .distinct()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        ui.showFoundTasks(foundTasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 32
    }
  },
  {
    "path": "src/main/java/duke/text/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.text;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Parse input string fullCommand, checks for invalid input format, and return a validated command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param fullCommand Raw input string"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @return Initialized Command instance"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @throws DukeException If input string is of an invalid format."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        String[] fullCommandSplit \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        String commandWord \u003d fullCommandSplit[0];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        int taskListIndex;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            if (fullCommandSplit.length \u003e 1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                throw new DukeException(\"No parameters expected\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            command \u003d new ListCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            if (fullCommandSplit.length \u003e 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                throw new DukeException(\"No parameters expected\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            command \u003d new ByeCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            command \u003d new AddCommand(Todo.parse(fullCommandSplit[1]));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            command \u003d new AddCommand(Deadline.parse(fullCommandSplit[1]));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            command \u003d new AddCommand(Event.parse(fullCommandSplit[1]));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            if (fullCommandSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                throw new DukeException(\"OOPS!!! The index of \" + commandWord"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        + \" operation cannot be empty.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            if (!fullCommandSplit[1].matches(\"(0|[1-9]\\\\d*)\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                throw new DukeException(\"OOPS!!! The index of \" + commandWord"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        + \" operation must be a positive integer.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            taskListIndex \u003d Integer.parseInt(fullCommandSplit[1]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            command \u003d new DoneCommand(taskListIndex);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            if (fullCommandSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                throw new DukeException(\"OOPS!!! The index of \" + commandWord + \" operation cannot be empty.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            if (!fullCommandSplit[1].matches(\"(0|[1-9]\\\\d*)\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                throw new DukeException(\"OOPS!!! The index of \" + commandWord"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                        + \" operation must be a positive integer.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            taskListIndex \u003d Integer.parseInt(fullCommandSplit[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            command \u003d new DeleteCommand(taskListIndex);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            if (fullCommandSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                throw new DukeException(\"OOPS!!! The object to find cannot be empty.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            command \u003d new FindCommand(fullCommandSplit[1]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 100
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    protected Scanner sc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String line \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String indent \u003d \"     \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String hiMsg \u003d \"Hello! I\u0027m Duke\" + \"\\n\" + indent + \"What can I do for you?\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String byeMsg \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String addMsg \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String doneMsg \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String delMsg \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String emptyListMsg \u003d \"You have no task in the list\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Initialize a Ui object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Read a line of input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @return Line of input."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @throws DukeException If no next line."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public String readCommand() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        if (sc.hasNext()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            return sc.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            throw new DukeException(\"Scanner failed to get next line\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void showMsg(String msg) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        System.out.println(indent + msg);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showMsg(message);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void showHiMsg() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showMsg(hiMsg);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void showByeMsg() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showMsg(byeMsg);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Show add task message."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param t Task to be shown"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void showAddTaskMsg(Task t) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showMsg(addMsg);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showTask(t);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showListSize();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void showTaskDoneMsg(Task t) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showMsg(doneMsg);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showTask(t);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Show message when task is deleted."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @param t Task to be shown"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void showTaskDelMsg(Task t) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showMsg(delMsg);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showTask(t);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showListSize();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void showEmptyListMsg() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showMsg(emptyListMsg);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Show Welcome text."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showHiMsg();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Shows all tasks in task list."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * @throws DukeException If there is no task in task list"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void showTasks() throws DukeException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        if (!tasks.isEmpty()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            showMsg(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            for (Task t: tasks.getTasks()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                showMsg((tasks.indexOf(t) + 1) + \". \" + t);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            showEmptyListMsg();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     * Shows size of list."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void showListSize() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        if (!tasks.isEmpty()) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            showMsg(\"Now you have \" + tasks.size() + \" task\" + (tasks.size() \u003d\u003d 1 ? \"\" : \"s\") + \" in the list\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            showEmptyListMsg();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void showTask(Task task) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showMsg(\"  \" + task);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void setTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void showLoadTaskMsg() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showMsg(\"Loading data from file...\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void noRecordsFoundMsg() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showMsg(\"No Records Found\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void showSaveDataMsg() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showMsg(\"Saving data...\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void showNothingToSaveMsg() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showMsg(\"Nothing to save.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void showSaveErrMsg() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showMsg(\"Error saving to file\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void showDataSavedMsg() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showMsg(\"Data saved successfully\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void showDataLoadedMsg(int size) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showMsg(size + \" tasks loaded\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showMsg(\"Error loading tasks from file\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    public void showFoundTasks(List\u003cTask\u003e foundTasks) throws DukeException {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        if (!foundTasks.isEmpty()) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            showMsg(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            for (Task t: foundTasks) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                showMsg((foundTasks.indexOf(t) + 1) + \". \" + t);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "            showNothingFoundMsg();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    private void showNothingFoundMsg() {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        showMsg(\"No tasks found.\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 184
    }
  },
  {
    "path": "src/test/java/duke/command/CommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class CommandTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 4
    }
  },
  {
    "path": "src/test/java/duke/storage/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 9
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 5
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    void event_initialise_success() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        Event event \u003d new Event(\"test event\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                LocalDateTime.parse(\"2019-07-06T18:00\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "                LocalDateTime.parse(\"2019-07-06T20:00\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        assertEquals(LocalDateTime.parse(\"2019-07-06T18:00\"), event.getStartDate());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        assertEquals(LocalDateTime.parse(\"2019-07-06T20:00\"), event.getEndDate());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        event.setStartDate(LocalDateTime.parse(\"2019-08-06T20:00\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        event.setEndDate(LocalDateTime.parse(\"2019-09-06T20:00\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        assertEquals(LocalDateTime.parse(\"2019-08-06T20:00\"), event.getStartDate());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        assertEquals(LocalDateTime.parse(\"2019-09-06T20:00\"), event.getEndDate());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        assertEquals(\"[E][0] test event (at: 2019-08-06T20:00 to 2019-09-06T20:00)\", event.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 24
    }
  },
  {
    "path": "src/test/java/duke/task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 4
    }
  },
  {
    "path": "src/test/java/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 4
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        Todo todo \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "        assertEquals(\"[T][0] test\", todo.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 13
    }
  },
  {
    "path": "src/test/java/duke/text/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.text;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 4
    }
  },
  {
    "path": "src/test/java/duke/ui/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xinmingzh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xinmingzh": 8
    }
  }
]
