[
  {
    "path": "list.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "E | 0 | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "T | 1 | join sports club"
      }
    ],
    "authorContributionMap": {
      "dalsontws": 4
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    protected Date dateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    // List of acceptable date formats (for this case, just choosing two common patterns)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    protected List\u003cString\u003e dateFormats \u003d Arrays.asList(\"dd/MM/yyyy HHmm\", \"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        for (String pattern : dateFormats) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            SimpleDateFormat dateTime \u003d new SimpleDateFormat(pattern);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                this.dateTime \u003d dateTime.parse(by);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            } catch (ParseException e) {}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        if (dateTime !\u003d null)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        else"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public String toSave() { return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + this.description + \" | \" + this.by; }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalsontws": 34
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    // String Constants used for Duke output"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private static final String SEPARATOR \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    int size;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            tasks \u003d new TaskList(storage.loadFile()); // add existing tasks from txt file onto ArrayList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            size \u003d tasks.getSize(); // get existing size of list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            storage.closeFile();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            ui.loadError();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            ui.createFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            tasks \u003d new TaskList(list);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        // Store command-line input as String"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        Storage storage \u003d this.storage;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        TaskList tasks \u003d this.tasks;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        // Create new user interface object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        // Set index of number of task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        int n;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        // Null task for exception"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        Task t \u003d null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        // Read command-line input with Scanner"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        // Initial opening introduction and prompt for user input"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        ui.openingStatement();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        // Check for last statement"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            // Get entire line of input from command-line"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            input \u003d scanner.nextLine().trim(); //Remove blank space"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            // Store whatever text entered, except \"bye\", exit loop"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            if (input.equals(\"bye\")) break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            ui.separator();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                ui.showList();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                tasks.getList();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    //Mark task as done"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    tasks.doneTask(input);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                catch (NullPointerException err){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    ui.invalidEntry();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    //Mark task as done"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    tasks.deleteTask(input);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                catch (NullPointerException err){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    ui.invalidEntry();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            else if (input.contains(\"todo\") || input.contains(\"deadline\") || input.contains(\"event\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    String action \u003d parser.parseAction(input);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    ui.addTask();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    tasks.addTask(action, input);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                } catch (DukeException err) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "               // Do not fit any commands"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    t \u003d new Task(input, 0);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                catch (DukeException err) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    ui.separator();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    System.out.println(\"\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                storage.saveFile(tasks, this.storage.getFilePath());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            catch (DukeException e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                ui.saveError();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        // Closing statement"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        ui.closingStatement();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        new Duke(\"list.txt\").run();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "dalsontws": 127,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "// Custom exception class for Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "class DukeException extends Exception {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalsontws": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    protected Date dateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    // List of acceptable date formats (for this case, just choosing two common patterns)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    protected List\u003cString\u003e dateFormats \u003d Arrays.asList(\"dd/MM/yyyy HHmm\", \"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        for (String pattern: dateFormats) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            SimpleDateFormat dateTime \u003d new SimpleDateFormat(pattern);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                this.dateTime \u003d dateTime.parse(at);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            } catch (ParseException e) {}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        if (dateTime !\u003d null)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            return \"[E]\" + super.toString() + \" (at: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        else"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public String toSave() { return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + this.description + \" | \" + this.at; }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalsontws": 34
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public Parser() {};"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    protected String action;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    protected Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public String parseAction(String input) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        String[] substrings \u003d input.split(\" \");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        String action \u003d substrings[0];"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        if (substrings.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            throw new DukeException(\"    ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"); //no valid command given"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        } else if (substrings.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            throw new DukeException(\"    ☹ OOPS!!! The description of a \"+ action +\" cannot be empty.\"); //empty description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        return action;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public String parseToDo(String action, String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        String description \u003d input.replace(action, \"\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        return description.trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public String parseDescription(String input, String action) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        String substring \u003d input.replace(action, \"\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        //Split task and deadline"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        String[] parts \u003d substring.split(\"\\\\/..\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        String description \u003d parts[0].trim(); // Remove blank spaces"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public String parseDateTime(String input, String action) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        String substring \u003d input.replace(action, \"\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        //Split task and deadline"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        String[] parts \u003d substring.split(\"\\\\/..\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        String dateTime \u003d parts[1].trim(); // Remove blank spaces"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalsontws": 45
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        private Scanner file;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        private String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        private int index \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        public Storage(String filePath) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                // Delimiters are \"|\" and a new line"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                file \u003d new Scanner(new File(filePath)).useDelimiter(\"[|\\\\n]\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            catch (Exception e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "//                File file \u003d new File(filePath); // create new file if file does not exist"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "//                throw new DukeException(\"\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "//                ui.loadError();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        public String getFilePath() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            return this.filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        public ArrayList loadFile() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                if (!file.hasNext()) // Check if file is empty"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    throw new DukeException(\"empty file\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                throw new DukeException(\"empty file\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "//                ui.loadError();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "//                System.out.println(\"here\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            while(file.hasNext()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                String action \u003d file.next().trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                if (action.equals(\"T\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    String status \u003d file.next();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    String description \u003d file.next().trim();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    list.add(new ToDo(description));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    if (status.contains(\"1\"))"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                        list.get(index).isDone \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    index +\u003d 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    String status \u003d file.next();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    String description \u003d file.next().trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    String time \u003d file.next().trim();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    if (action.equals(\"E\"))"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                        list.add(new Event(description, time));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    else if (action.equals(\"D\"))"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                        list.add(new Deadline(description, time));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    if (status.contains(\"1\"))"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                        list.get(index).isDone \u003d true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    index +\u003d 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        public void closeFile() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        public void saveFile(TaskList tasks, String saveFile) throws DukeException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                FileWriter fw \u003d new FileWriter(saveFile);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                BufferedWriter output \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                int size \u003d tasks.getSize();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    output.write(tasks.get(i).toSave());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                    output.newLine();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                output.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                throw new DukeException(\"\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalsontws": 92
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    // Invalid task throws DukeException"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public Task(String action, int size) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        if (size \u003d\u003d 0) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            throw new DukeException(\"    ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"); //no valid command given"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        } else if (size \u003d\u003d 1) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            throw new DukeException(\"    ☹ OOPS!!! The description of a \"+ action +\" cannot be empty.\"); //empty description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public String toSave() { return (isDone ? \"1\" : \"0\") + \" | \" + this.description; }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalsontws": 29
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public TaskList() {};"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    protected ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    protected Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    protected Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        return list.get(index);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public void getList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        int size \u003d this.list.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            System.out.print(\"     \" + (i+1) + \".\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            System.out.println(list.get(i));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public void doneTask(String input) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        // Assumption: fixed format - remove first 4 characters to get index. i.e. \"done\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        String value \u003d input.substring(4);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        // Get integer found in user input"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            int index \u003d Integer.parseInt(value.trim()); //Remove any blank space"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            list.get(index-1).isDone \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            ui.completedTask();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            System.out.println(list.get(index-1));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            ui.invalidEntry();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public void deleteTask(String input) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        // Assumption: fixed format - remove first 6 characters to get index. i.e. \"delete\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        String value \u003d input.substring(6);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        // Get integer found in user input"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            int index \u003d Integer.parseInt(value.trim()); //Remove any blank space"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            Task delete \u003d list.get(index-1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            // Remove task from list"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            list.remove(index-1); //index start from 0"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            ui.deleteTask();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            System.out.println(delete); //index start from 0"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            int n \u003d this.getSize();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            ui.numTasks(n);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            ui.invalidEntry();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public void addTask(String action, String input) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        switch(action) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                String description1 \u003d parser.parseToDo(action, input);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                list.add(new ToDo(description1)); //Remove blank spaces"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                String description2 \u003d parser.parseDescription(action, input);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                list.add(new Deadline(description2, parser.parseDateTime(action, input)));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                String description3 \u003d parser.parseDescription(action, input);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                list.add(new Event(description3,parser.parseDateTime(action, input)));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        int n \u003d this.getSize();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(this.list.get(n-1));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        ui.numTasks(n);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "}"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "dalsontws": 90
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public String toSave() { return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + this.description; }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalsontws": 16
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private static final String INTRODUCTION \u003d \"     Hello! I\u0027m Duke\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private static final String USER_PROMPT \u003d \"     What can I do for you?\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private static final String SEPARATOR \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private static final String CREATE_FILE \u003d \"     Creating new file.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private static final String SHOW_LIST \u003d \"     Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private static final String INVALID_LIST_ENTRY \u003d \"     List entry does not exist!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private static final String LOAD_ERROR \u003d \"     Error loading file.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private static final String SAVE_ERROR \u003d \"     Error saving file.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private static final String MARK_TASK_COMPLETE \u003d \"     Nice! I\u0027ve marked this task as done: \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private static final String ADD_TASK \u003d \"     Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private static final String REMOVE_TASK \u003d \"     Noted. I\u0027ve removed this task: \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    private static final String CLOSING_STATEMENT \u003d \"     Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public Ui() {}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public void openingStatement() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(INTRODUCTION);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(USER_PROMPT);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(\"\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public void closingStatement() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(CLOSING_STATEMENT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public void invalidEntry() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(INVALID_LIST_ENTRY);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public void createFile() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(CREATE_FILE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public void loadError() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(LOAD_ERROR);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public void saveError() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(SAVE_ERROR);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public void completedTask() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(MARK_TASK_COMPLETE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.print(\"       \"); //indentation"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public void addTask() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(ADD_TASK);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.print(\"       \"); // indentation"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public void deleteTask() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(REMOVE_TASK);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.print(\"       \"); //indentation"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public void showList() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(SHOW_LIST);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public void separator() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(SEPARATOR);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    public void numTasks(int n) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "        System.out.println(\"     Now you have \" + (n) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dalsontws": 80
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalsontws"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "       [T][?] borrow book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "dalsontws": 18
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "todo borrow book"
      }
    ],
    "authorContributionMap": {
      "dalsontws": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dalsontws"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dalsontws"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "dalsontws": 25
    }
  }
]
