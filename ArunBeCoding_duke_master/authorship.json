[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    private String midcommand; private String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    public Deadline(String command){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        String[]splitteddate \u003d command.split(\"/\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        date \u003d splitteddate[1];"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        midcommand \u003d splitteddate[0];"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    public String printer(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        if(done){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            String result \u003d \"[D][✓] \" + midcommand + \"(by: \" + date.substring(3) + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            String result \u003d \"[D][✗] \" + midcommand + \"(by: \" + date.substring(3) + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    public void taskDone(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ArunKumarr": 24
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        System.out.println(line + \"\\n\" + \"Hello! I\u0027m Duke\" + \"\\n\" + \"What can I do for you?\" + \"\\n\" + line);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        ArrayList\u003cTask\u003eallcoms \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        while(true){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            String[]words \u003d command.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            if(command.equals(\"bye\")){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                System.out.println(line + \"\\n\" + \"Bye. Hope to see you again soon!\" + \"\\n\" + line);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            }else if((words.length\u003d\u003d2)\u0026\u0026(words[0].equals(\"done\"))\u0026\u0026(isNumeric(words[1]))){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                    int val \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                    allcoms.get(val - 1).taskDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                    System.out.println(line + \"\\n\" + \"Nice! I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                            allcoms.get(val - 1).printer() + \"\\n\" + line);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                }catch(Exception e){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                    System.out.println(\"Error, you have entered an invalid number\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            }else if((words.length\u003d\u003d2)\u0026\u0026(words[0].equals(\"delete\"))\u0026\u0026(isNumeric(words[1]))){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                    int val \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                    System.out.println(line + \"\\n\" + \"Noted. I\u0027ve removed this task:\"+ \"\\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                            allcoms.get(val - 1).printer() + \"\\n\"+ \"Now you have \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                            + (allcoms.size()-1) + \" tasks in the list.\"+ \"\\n\" + line);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                    allcoms.remove(val - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                }catch(Exception e){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                    System.out.println(\"Error, you have entered an invalid number\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            }else if(command.equals(\"list\")){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                for(int i\u003d1; i\u003c\u003dallcoms.size(); i++){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                    System.out.println(i + \". \" + allcoms.get(i-1).printer());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                String[]splitwords \u003d command.trim().split(\"\\\\s\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                    if (splitwords[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                        String midcommand \u003d command.trim().substring(5);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                        if (midcommand.length() !\u003d 0) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                            allcoms.add(new ToDo(midcommand));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                            throw new NullPointerException();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                    } else if (splitwords[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                        String midcommand \u003d command.trim().substring(9);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                        if (midcommand.length() !\u003d 0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                            allcoms.add(new Deadline(midcommand));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                            throw new NullPointerException();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                    } else if (splitwords[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                        String midcommand \u003d command.trim().substring(6);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                        if (midcommand.length() !\u003d 0) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                            allcoms.add(new Event(midcommand));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                            throw new NullPointerException();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                        throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                /*allcoms.add(new Task(command));*/"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                System.out.println(line + \"\\n\" + \"Got it. I\u0027ve added this task:\" + \"\\n\" +"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                                            allcoms.get(allcoms.size()-1).printer() + \"\\n\" + \"Now you have \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                                                + allcoms.size() + \" tasks in the list.\"+ \"\\n\" + line);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                }catch(IllegalArgumentException e){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                    System.out.println(line + \"\\n\" + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-()\" + \"\\n\" + line);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                }catch(Exception e){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                    System.out.println(line + \"\\n\" + \"☹ OOPS!!! The description of a event cannot be empty.\"+ \"\\n\" + line);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    public static boolean isNumeric(String str) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            Integer.parseInt(str);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        } catch(NumberFormatException e){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArunKumarr": 87,
      "Jeffry Lum": 1,
      "-": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    private String midcommand; private String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    public Event(String command){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        String[]splitteddate \u003d command.split(\"/\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        date \u003d splitteddate[1];"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        midcommand \u003d splitteddate[0];"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    public String printer(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        if(done){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            String result \u003d \"[E][✓] \" + midcommand + \"(at: \" + date.substring(3) + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            String result \u003d \"[E][✗] \" + midcommand + \"(at: \" + date.substring(3) + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    public void taskDone(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArunKumarr": 22
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    public String command; public Boolean done;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    public Task(String command){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    public String printer(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        if(done){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            String result \u003d \"[✓] \" + command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            String result \u003d \"[✗]\" + command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    public void taskDone(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArunKumarr": 20
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    //protected Boolean done;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    public ToDo(String command){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    public String printer(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        if(done){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            String result \u003d \"[T][✓] \" + command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            String result \u003d \"[T][✗] \" + command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    public void taskDone(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ArunKumarr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ArunKumarr": 19
    }
  }
]
