[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    mainClassName \u003d \"controller.Launcher\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.1.0\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.1.0\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garylyp"
        },
        "content": "test {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 45,
      "-": 15
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "E | 1 | happy | sad"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": "D | 0 | d3 | 22/09/2019 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "D | 0 | karate proposal | 27/08/2019 0132"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "E | 1 | karate welcome tea | mpsh2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "T | 0 | hello"
      }
    ],
    "authorContributionMap": {
      "garylyp": 5
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "### Task Adding"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Allows the addition of tasks to a list that will be stored on your local list for persistent usage."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "### `todo taskname` - todo task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Adds a standard task item to the todo list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "### `deadline taskname /by dd/mm/yyyy hhmm` - deadline task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Adds a deadline task to the todo list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "### `event eventname /by dd/mm/yyyy hhmm` - event task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Adds a event task to the todo list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "todo CS2105 Assignment 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "```"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "```"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "[T} ✘ CS2105 Assignment 1"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Now you have X tasks in your list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "```"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "### Listing tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "List all existing tasks in the list. "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "### `list` - List all tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "```"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "list"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "```"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "```"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "1. [T} ✘ CS2105 Assignment 1"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "2. [E] ✘ Mid Autumn Festival /at 14/09/2019 1900"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "```"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": "### Marking Task as Done"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Mark a task as done in the list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garylyp"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garylyp"
        },
        "content": "### `done n` - Marks the n-th task in the list as done"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garylyp"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garylyp"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garylyp"
        },
        "content": "```"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garylyp"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garylyp"
        },
        "content": "[T} ✓ CS2105 Assignment 1"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garylyp"
        },
        "content": "```"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garylyp"
        },
        "content": "### Listing tasks"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garylyp"
        },
        "content": "List all existing tasks in the list. "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garylyp"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garylyp"
        },
        "content": "### `list` - List all tasks"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garylyp"
        },
        "content": "```"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garylyp"
        },
        "content": "list"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garylyp"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garylyp"
        },
        "content": "```"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garylyp"
        },
        "content": "1. [T} ✘ CS2105 Assignment 1"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garylyp"
        },
        "content": "2. [E] ✘ Mid Autumn Festival /at 14/09/2019 1900"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garylyp"
        },
        "content": "```"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garylyp"
        },
        "content": "### Help Menu"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Shows all available commands Duke is capable of."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garylyp"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garylyp"
        },
        "content": "### `help` - List all commands and the argument format"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garylyp"
        },
        "content": "```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garylyp"
        },
        "content": "help"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garylyp"
        },
        "content": "```"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "garylyp"
        },
        "content": "```"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "garylyp"
        },
        "content": "List of commands:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "garylyp"
        },
        "content": "bye:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Exits from the program"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "garylyp"
        },
        "content": "list:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "garylyp"
        },
        "content": "List all existing tasks"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "garylyp"
        },
        "content": "help:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Prints the list of commands"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "garylyp"
        },
        "content": "done n:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Marks the n-th task on the list as done"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "garylyp"
        },
        "content": "delete n:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Deletes the n-th task on the list"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "garylyp"
        },
        "content": "todo taskName :"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Adds a new Todo task with the given \"taskName\"."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "garylyp"
        },
        "content": "event taskName /at DD/MM/YYYY HHmm :"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Adds a new Event task with the deadline in the given format."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "garylyp"
        },
        "content": "deadline taskName /by DD/MM/YYYY HHmm :"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Adds a new Deadline task with the deadline in the given format."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "garylyp"
        },
        "content": "undo:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Undoes the most recent action."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "garylyp"
        },
        "content": "find keyword :"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Returns a list of task with names containing the \"keyword\"."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "garylyp"
        },
        "content": "sort category r:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Sorts and returns the list of tasks. Category can be one of \"name\", \"deadline\", \"type\", \"status\"."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Optional argument \"r\" sorts list in reverse order."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "garylyp"
        },
        "content": "```"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "garylyp"
        },
        "content": "# About Duke"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Duke is a simple chatbot that helps you track your todo list. Relying on JavaFX GUI, it provides an "
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "garylyp"
        },
        "content": "interactive and intuitive user experience that makes the monitoring of task status convenient and "
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "garylyp"
        },
        "content": "easy to handle."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "garylyp"
        },
        "content": "## Getting Started"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "garylyp"
        },
        "content": "These instructions will get you a copy of the project up and running on your local machine for development and testing purposes. "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "garylyp"
        },
        "content": "See deployment for notes on how to deploy the project on a live system."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "garylyp"
        },
        "content": "### Prerequisites"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "garylyp"
        },
        "content": "JDK 11 required. Go to Environment Variables and set JAVA_HOME variable to the address where JDK software is located."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "garylyp"
        },
        "content": "## Deployment"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Simply download the Jar file and run it for instant usage."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "garylyp"
        },
        "content": "## Built With"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "garylyp"
        },
        "content": "* [Gradle](https://gradle.org/) - Dependency Management"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "garylyp"
        },
        "content": "## Authors"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "garylyp"
        },
        "content": "* **Gary Lim** - *Initial work* - [Jeffry Lum](https://github.com/j-lum)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "garylyp"
        },
        "content": "See also the list of [contributors](https://github.com/your/project/contributors) who participated in this project."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "garylyp"
        },
        "content": "## Acknowledgments"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "garylyp"
        },
        "content": "* A big thank you to Jeffry Lum our most respected and honourable TA who helped prepare the entire Duke package "
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "garylyp"
        },
        "content": "for our learning. It was such a life-changing and eye-opening experience. I truly can\u0027t imagine a world without "
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Jeffry Lum."
      }
    ],
    "authorContributionMap": {
      "garylyp": 176,
      "-": 14
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * Represents a single command that can only execute a single action."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    void execute();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "garylyp": 10
    }
  },
  {
    "path": "src/main/java/command/CommandCentre.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import utils.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class CommandCentre {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * A collection to store and map command names to their"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * respective Command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private HashMap\u003cString, Command\u003e commands;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * A stack to store all the opposite commands of previously executed commands. The opposite of"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * the most recently executed command will be at the top of the stack."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private Stack\u003cCommand\u003e commandHistory;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Manages all commands in the app."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public CommandCentre() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commands \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandHistory \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void setUi(Ui ui) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Adds a new Command with its command name into the collection of commands."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param commandName The name of the command to be registered."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param command     The Command object this commandName will map to."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void register(String commandName, Command command) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commands.put(commandName, command);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Executes the command given by the command name."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param commandName The name of the command to be executed."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void execute(String commandName) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Command command \u003d commands.get(commandName);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        command.execute();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Checks whether the Command Centre contains a Command with the specified"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * command name."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param commandName The command name to be checked for."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return True if command is found, false otherwise."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public boolean contains(String commandName) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return commands.containsKey(commandName);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void addToHistory(Command command) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandHistory.push(command);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Undoes the latest command that has been executed."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * If there are no more latest commands, ui responds with a warning message."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void undo() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (!commandHistory.isEmpty()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            commandHistory.pop().execute();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            ui.printUndoNotAllowedMessage();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Initialize dummy commands for Junit test."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void initializeDummyCommands() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        register(\"bye\", new Command() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            public void execute() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        register(\"help\", new Command() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            public void execute() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        register(\"list\", new Command() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            public void execute() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        register(\"done\", new Command() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            public void execute() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        register(\"delete\", new Command() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            public void execute() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        register(\"todo\", new Command() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            public void execute() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        register(\"deadline\", new Command() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            public void execute() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        register(\"event\", new Command() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            public void execute() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        register(\"find\", new Command() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            public void execute() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 135
    }
  },
  {
    "path": "src/main/java/controller/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s profile image"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * and a label containing text from the speaker."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static final Background USER_BACKGROUND \u003d new Background(new BackgroundFill("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            Color.rgb(152, 251, 152), CornerRadii.EMPTY, Insets.EMPTY));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static final Background DUKE_BACKGROUND \u003d new Background(new BackgroundFill("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            Color.rgb(255, 255, 255), CornerRadii.EMPTY, Insets.EMPTY));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Constructs a dialog box with the ImageView on the right and the text on the left."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param text  The view object that contains the message string."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param image The image representing the user profile."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private DialogBox(String text, Image image) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        dialog.setWrapText(true);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        dialog.setPadding(new Insets(0, 8, 0, 8));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        displayPicture.setImage(image);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Returns a new dialog box with the specified message and image for the user."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param label     The view object that contains the string of text sent by the user."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param imageView The image representing the user profile."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return A Dialog box with the user\u0027s imageView on the right and text on the left."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public static DialogBox getUserDialog(String label, Image imageView) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        DialogBox dialogBox \u003d new DialogBox(label, imageView);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        dialogBox.setBackground(USER_BACKGROUND);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return dialogBox;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Returns a new dialog box with the specified message and image for Duke."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param label     The view object that contains the string of text sent by Duke."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param imageView The image representing Duke\u0027s profile."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return A Dialog box with Duke\u0027s imageView on the left and text on the right."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public static DialogBox getDukeDialog(String label, Image imageView) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        var dialogBox \u003d new DialogBox(label, imageView);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        dialogBox.setBackground(DUKE_BACKGROUND);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        dialogBox.flip();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return dialogBox;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 99
    }
  },
  {
    "path": "src/main/java/controller/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import main.Main;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 13
    }
  },
  {
    "path": "src/main/java/controller/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.scene.Group;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import main.Duke;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * Controller class for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void setDuke(Duke duke) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        this.duke \u003d duke;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Prints a welcome message by Duke. Used in main.Main when Duke is started up."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String response \u003d duke.getWelcomeMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Duke\u0027s reply and then appends them to the dialog container. Clears the"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * user input after processing."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String input \u003d userInput.getText() + \"\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                new Group(DialogBox.getUserDialog(input, userImage)),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                new Group(DialogBox.getDukeDialog(response, dukeImage))"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        );"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (response.equals(Duke.EXIT_MESSAGE)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            Stage stage \u003d (Stage) dialogContainer.getScene().getWindow();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            stage.close();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 70
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class DukeException extends RuntimeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 7
    }
  },
  {
    "path": "src/main/java/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public EmptyDescriptionException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 7
    }
  },
  {
    "path": "src/main/java/exception/InvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class InvalidArgumentException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public InvalidArgumentException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 7
    }
  },
  {
    "path": "src/main/java/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public InvalidCommandException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 7
    }
  },
  {
    "path": "src/main/java/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import command.CommandCentre;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import utils.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import utils.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import utils.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static final String ROOT \u003d Paths.get(System.getProperty(\"user.home\")).toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static final String STORAGE_PATH \u003d \"\\\\duke.txt\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static final Logger LOGGER \u003d Logger.getLogger(Duke.class.getName());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public static final String EXIT_MESSAGE \u003d \"main.Duke.EXIT_MESSAGE\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static final boolean RESET_TASK_LIST \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private final CommandCentre commandCentre;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private boolean isExiting;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Initializes TaskList, Storage, Ui, Parser objects. Initializes all"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * commands. Clears the existing TaskList in Storage if RESET_TASK_LIST"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * is true."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        taskList \u003d TaskList.newInstance();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        LOGGER.info(\"Storage directory: \"+ ROOT);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        storage \u003d new Storage(ROOT + STORAGE_PATH);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandCentre \u003d new CommandCentre();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandCentre.setUi(ui);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.setCommandCentre(commandCentre);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        isExiting \u003d false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        initializeCommands();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (RESET_TASK_LIST) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            taskList.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            storage.deleteData();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Commands Duke to respond based on the given user input."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param input The user input in this particular communication."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.setUi(ui);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String action \u003d parser.getNextAction(input + \"\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (action !\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            commandCentre.execute(action);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (isExiting) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return EXIT_MESSAGE;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String output \u003d ui.getOutputAndClearBuilder();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Gets a String of the Duke welcome message."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return The String containing the message."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String output \u003d ui.getOutputAndClearBuilder();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Initialize all commands with their command names and store"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * them to command centre."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private void initializeCommands() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandCentre.register(\"bye\", () -\u003e {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            ui.printByeMessage();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            isExiting \u003d true;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandCentre.register(\"help\", ui::printHelpMessage);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandCentre.register(\"list\", () -\u003e {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                ui.printEmptyTaskListMessage();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                ui.printTaskList(taskList.getTasks(), Ui.LIST_ACTION_TITLE);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandCentre.register(\"done\", () -\u003e {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            Integer idx \u003d parser.parseTaskIdx();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (idx !\u003d null) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    taskList.markAsDone(idx);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                } catch (InvalidArgumentException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    ui.appendMessage(e.getMessage());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                storage.updateData();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                ui.printMarkedAsDoneMessage(taskList.get(idx));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                commandCentre.addToHistory(() -\u003e {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    taskList.markAsNotDone(idx);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    storage.updateData();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    ui.printUndoMessage();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    ui.printMarkedAsNotDoneMessage(taskList.get(idx));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                });"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandCentre.register(\"delete\", () -\u003e {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            Integer idx \u003d parser.parseTaskIdx();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (idx !\u003d null) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                Task task \u003d taskList.deleteTask(idx);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                storage.updateData();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                ui.printTaskDeletedMessage(task, taskList.size());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                commandCentre.addToHistory(() -\u003e {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    taskList.insertTask(task, idx);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    storage.updateData();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    ui.printUndoMessage();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    ui.printTaskAddedMessage(task, taskList.size());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                });"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandCentre.register(\"todo\", () -\u003e {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            String taskName \u003d parser.parseTodoDetail();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (taskName !\u003d null) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                Task task \u003d taskList.addNewTodoTask(taskName, false);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                storage.updateData();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                ui.printTaskAddedMessage(task, taskList.size());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                commandCentre.addToHistory(generateDeleteTaskCommand(taskList.size()-1, true));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandCentre.register(\"deadline\", () -\u003e {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            String[] taskInfo \u003d parser.parseDeadlineDetail();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (taskInfo !\u003d null) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                Task newTask \u003d taskList.addNewDeadlineTask(taskInfo[0], taskInfo[1], false);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                storage.updateData();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                ui.printTaskAddedMessage(newTask, taskList.size());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                commandCentre.addToHistory(generateDeleteTaskCommand(taskList.size()-1, true));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandCentre.register(\"event\", () -\u003e {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            String[] taskInfo \u003d parser.parseEventDetail();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (taskInfo !\u003d null) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                Task newTask \u003d taskList.addNewEventTask(taskInfo[0], taskInfo[1], false);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                storage.updateData();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                ui.printTaskAddedMessage(newTask, taskList.size());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                commandCentre.addToHistory(generateDeleteTaskCommand(taskList.size()-1, true));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandCentre.register(\"find\", () -\u003e {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            String keyword \u003d parser.parseKeyword();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (keyword !\u003d null) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                List\u003cTask\u003e findResult \u003d taskList.generateListByKeyword(keyword);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                ui.printTaskList(findResult, Ui.FIND_ACTION_TITLE);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandCentre.register(\"undo\", commandCentre::undo);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandCentre.register(\"sort\", new Command() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            public void execute() {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                String[] sortInfo \u003d parser.parseSortInfo();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                String keyword \u003d sortInfo[0];"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                int sortCategory \u003d parser.parseKeywordAsSortCategory(keyword);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                boolean isReversed \u003d sortInfo[1].equals(\"r\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                boolean isSuccessful \u003d taskList.sort(sortCategory, isReversed);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                if (isSuccessful) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    ui.printListSortedMessage();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    ui.printTaskList(taskList.getTasks(), Ui.LIST_ACTION_TITLE);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        });"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private Command generateDeleteTaskCommand(int idx, boolean isUndo) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return () -\u003e {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            Task task \u003d taskList.deleteTask(idx);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            storage.updateData();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (isUndo) ui.printUndoMessage();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            ui.printTaskDeletedMessage(task, taskList.size());"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        };"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 208
    }
  },
  {
    "path": "src/main/java/main/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import controller.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * The application entry point for Duke GUI."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().printWelcomeMessage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 34
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * A Task that has a deadline in the format DD/MM/YYYY HHmm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * as its additional info."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private String additionalInfo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    Deadline(String name, String additionalInfo) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        this.additionalInfo \u003d additionalInfo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String getAdditionalInfo() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return additionalInfo;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected String getTypeSymbol() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected String getAdditionalInfoForDisplay() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return String.format(\"(by: %s)\", additionalInfo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String getStorageStringFormat() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return \"D\" + \" | \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                + getStatus() + \" | \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                + getName() + \" | \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                + getAdditionalInfo();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 42
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * A Task that has a additional info component (that is usually"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * a venue)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * The additional info of an Event task. It is the content that is"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * passed in after the \"/at\" keyword when interacting with the UI"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * with \"event\" action."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private String additionalInfo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    Event(String name, String additionalInfo) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        this.additionalInfo \u003d additionalInfo;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String getAdditionalInfo() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return additionalInfo;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected String getTypeSymbol() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected String getAdditionalInfoForDisplay() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return String.format(\"(at: %s)\", additionalInfo);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String getStorageStringFormat() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return \"E\" + \" | \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                + getStatus() + \" | \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                + getName() + \" | \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                + getAdditionalInfo();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 47
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public static final int NOT_DONE \u003d 0;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public static final int DONE \u003d 1;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public static final int NAME_CATEGORY \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public static final int DEADLINE_CATEGORY \u003d 1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public static final int TYPE_CATEGORY \u003d 2;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public static final int STATUS_CATEGORY \u003d 3;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static final String TICK_SYMBOL \u003d \"\\u2713\"; // \"✓\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static final String CROSS_SYMBOL \u003d \"\\u2718\"; // \"✘\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static final String DATE_FORMATTER_PATTERN \u003d \"dd/MM/yyyy HHmm\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private int status;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Represents a single Task object in TaskList. Newly created Tasks are"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * set to NOT_DONE by default."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param name The name of the Task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    Task(String name) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        this.status \u003d NOT_DONE;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Returns a single character representing the icon for the task type."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return The task icon for the type of task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected abstract String getTypeSymbol();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Returns additional information that is passed into the task object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return The additional information of the task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @see Deadline"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @see Event"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public abstract String getAdditionalInfo();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Returns the additional info in a manner used for printing directly"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * to the UI."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return The additional information of the task in formatted style."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected abstract String getAdditionalInfoForDisplay();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public abstract String getStorageStringFormat();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected void setDone() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        this.status \u003d DONE;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected void setNotDone() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        this.status \u003d NOT_DONE;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public int getStatus() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return status;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private String getStatusSymbol() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (status \u003d\u003d DONE) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return TICK_SYMBOL;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return CROSS_SYMBOL;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public boolean isAssociated(String keyword) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return name.contains(keyword)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                || getAdditionalInfo().contains(keyword);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public Calendar getDeadlineFromAdditionalInfo() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(DATE_FORMATTER_PATTERN);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        sdf.setLenient(false);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            cal.setTime(sdf.parse(getAdditionalInfo()));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return cal;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return String.format(\"%s%s %s %s\", getTypeSymbol(),"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                getStatusSymbol(),"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                name,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                getAdditionalInfoForDisplay());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 108
    }
  },
  {
    "path": "src/main/java/task/TaskComparatorFactory.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "class TaskComparatorFactory {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     static Comparator\u003cTask\u003e getNameComparator(boolean isReversed) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return (t1, t2) -\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            int output \u003d t1.getName().compareToIgnoreCase(t2.getName());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return isReversed ? -output : output;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        };"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    static Comparator\u003cTask\u003e getDeadlineComparator(boolean isReversed) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return (t1, t2) -\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            int output;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (t1 instanceof Todo \u0026\u0026 t2 instanceof Todo) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                output \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            } else if (t1 instanceof Todo) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                output \u003d Integer.MAX_VALUE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            } else if (t2 instanceof Todo) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                output \u003d Integer.MIN_VALUE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                output \u003d t1.getDeadlineFromAdditionalInfo().compareTo(t2.getDeadlineFromAdditionalInfo());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return isReversed ? -output : output;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        };"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    static Comparator\u003cTask\u003e getTypeComparator(boolean isReversed) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return (t1, t2) -\u003e {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            int output \u003d t1.getTypeSymbol().compareToIgnoreCase(t2.getTypeSymbol());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return isReversed ? -output : output;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        };"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    static Comparator\u003cTask\u003e getStatusComparator(boolean isReversed) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return (t1, t2) -\u003e {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            int output;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (t1.getStatus() \u003d\u003d t2.getStatus()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                output \u003d 0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            } else if (t1.getStatus() \u003e t2.getStatus()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                output \u003d 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                output \u003d -1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return isReversed ? -output : output;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        };"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 50
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * A singleton that helps to manage the list of tasks and provides"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * various operations on tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (tasks \u003d\u003d null) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Returns a new TaskList object that holds a reference to the"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * working list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return an instance of a TaskList object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public static TaskList newInstance() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public Task get(int idx) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return tasks.get(idx);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return tasks.isEmpty();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Adds a new Todo Task to TaskList with the given task name and"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * done status."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param taskName The task name of the task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param isDone   The done status of the newly added task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return The new Todo task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public Task addNewTodoTask(String taskName, boolean isDone) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Task newTask \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        setDoneStatus(newTask, isDone);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Adds a new Event Task to TaskList with the given task name, additional"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * info and done status."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param taskName       The task name of the task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param additionalInfo The additional info of the Event task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param isDone         The done status of the newly added task."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return The new Event task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public Task addNewEventTask(String taskName, String additionalInfo, boolean isDone) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assert !additionalInfo.isEmpty() : \"Additional info of Event task cannot be empty.\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Task newTask \u003d new Event(taskName, additionalInfo);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        setDoneStatus(newTask, isDone);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Adds a new Deadline Task to TaskList with the given task name, additional"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * info and done status."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param taskName       The task name of the task."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param additionalInfo The additional info of the Deadline task in \"DD/MM/YYYY HHmm\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *                       format."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param isDone         The done status of the newly added task."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return The new Deadline task."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public Task addNewDeadlineTask(String taskName, String additionalInfo, boolean isDone) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assert !additionalInfo.isEmpty() : \"Additional info of Deadline task cannot be empty.\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Task newTask \u003d new Deadline(taskName, additionalInfo);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        setDoneStatus(newTask, isDone);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Deletes a task from task list by index."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param idx The index of the task in task list."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return The deleted task."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public Task deleteTask(int idx) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Task task \u003d tasks.remove(idx);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Deletes a task from task list by index."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param idx The index of the task in task list."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return The deleted task."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void insertTask(Task task, int idx) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        tasks.add(idx, task);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Marks a task from task list as done."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param idx The index of the task in task list."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void markAsDone(int idx) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (tasks.get(idx).getStatus() \u003d\u003d Task.DONE) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            throw new InvalidArgumentException("
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    String.format(\"Task %d is already done.\", idx + 1));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        tasks.get(idx).setDone();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Marks a task from task list as not done."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param idx The index of the task in task list."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void markAsNotDone(int idx) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (tasks.get(idx).getStatus() \u003d\u003d Task.NOT_DONE) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            throw new InvalidArgumentException("
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    String.format(\"Task %d is already not done.\", idx + 1));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        tasks.get(idx).setNotDone();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Finds all tasks whose task name or additional info contains the keyword."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param keyword The word or phrase to be searched for."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return The list of tasks that are associated with the keyword."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public List\u003cTask\u003e generateListByKeyword(String keyword) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assert !keyword.isEmpty() : \"Find keyword cannot be empty\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        List\u003cTask\u003e findResult \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (task.isAssociated(keyword)) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                findResult.add(task);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return findResult;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public boolean sort(int sortCategory, boolean isReversed) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Comparator\u003cTask\u003e comparator;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        switch (sortCategory) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        case Task.NAME_CATEGORY:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            comparator \u003d TaskComparatorFactory.getNameComparator(isReversed);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        case Task.DEADLINE_CATEGORY:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            comparator \u003d TaskComparatorFactory.getDeadlineComparator(isReversed);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        case Task.TYPE_CATEGORY:"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            comparator \u003d TaskComparatorFactory.getTypeComparator(isReversed);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        case Task.STATUS_CATEGORY:"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            comparator \u003d TaskComparatorFactory.getStatusComparator(isReversed);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        tasks.sort(comparator);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Marks the status of a given task as done or not depending on the isDone argument."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param newTask The task whose status needs to be fixed."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param isDone Whether the task is already done or not."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private void setDoneStatus(Task newTask, boolean isDone) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            newTask.setDone();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            newTask.setNotDone();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return tasks.equals(((TaskList) obj).getTasks());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 213
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * A standard Task with a name and no additional info."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    Todo(String name) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String getAdditionalInfo() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected String getTypeSymbol() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    protected String getAdditionalInfoForDisplay() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String getStorageStringFormat() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return \"T\" + \" | \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                + getStatus() + \" | \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                + getName();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 33
    }
  },
  {
    "path": "src/main/java/utils/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import command.CommandCentre;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import exception.InvalidCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * Helps to scan user input and process them into information."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public static final String DATE_FORMATTER_PATTERN \u003d \"dd/MM/yyyy HHmm\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static final String EVENT_KEYWORD \u003d \"/at\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static final String DEADLINE_KEYWORD \u003d \"/by\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private CommandCentre commandCentre;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private String arguments;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void setScanner(Scanner sc) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        this.sc \u003d sc;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void setCommandCentre(CommandCentre commandCentre) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        this.commandCentre \u003d commandCentre;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void setUi(Ui ui) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Reads and returns the next action in the user input."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return The next action string."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String getNextAction(String input) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] inputArray \u003d parseRawInput(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String action \u003d inputArray[0].trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        arguments \u003d inputArray[1].trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (!commandCentre.contains(action)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                throw new InvalidCommandException(ui.buildInvalidCommandMessage());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            ui.appendMessage(e.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return action;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Reads and breaks down the content after the \"event\" action keyword."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Invalid input argument types or format will be highlighted to the"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * user."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return If successful, an array of String of length 2 consisting of the"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Event Task\u0027s name and deadline, a String in the format \"DD/MM/YYYY"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * HHmm\". Else, a null object."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String[] parseEventDetail() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String taskName \u003d arguments;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        // Separates a line \"taskName /at 20/08/2019 2100\" to"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        // {\"taskName\", \"20/08/2019 2100\"}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d taskName.split(\"\\\\s*\" + EVENT_KEYWORD + \"\\\\s*\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        boolean isValid \u003d validateTaskInfo(taskInfo);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (isValid) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return taskInfo;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Reads and breaks down the content after the \"deadline\" action keyword."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Invalid input argument types or format will be highlighted to the user."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return If successful, an array of String of length 2 consisting of the"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Deadline Task\u0027s name and deadline, a String in the format \"DD/MM/YYYY"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * HHmm\". Else, a null object."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String[] parseDeadlineDetail() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String taskName \u003d arguments;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        // Separates a line \"taskName /by 20/08/2019 2100\" to"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        // {\"taskName\", \"20/08/2019 2100\"}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d taskName.split(\"\\\\s*\" + DEADLINE_KEYWORD + \"\\\\s*\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        boolean isValid \u003d validateTaskInfo(taskInfo);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (isValid) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return taskInfo;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Reads and breaks down the content after the \"todo\" action keyword."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Invalid input argument types or format will be highlighted to the"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * user."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return If successful, a String representing the Task\u0027s name."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Else, a null object."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String parseTodoDetail() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String taskName \u003d arguments;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        boolean isValid \u003d validateDescriptionNotEmpty(taskName);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (isValid) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return taskName;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Reads the next integer from user input where the integer must be"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * a valid index for the tasks in TaskList."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return If successful, an Integer representing the task index. Else, a null object."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public Integer parseTaskIdx() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String infoString \u003d arguments;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        TaskList taskList \u003d TaskList.newInstance();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        int idx;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            idx \u003d Integer.parseInt(infoString) - 1;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            ui.appendMessage(ui.buildInvalidTaskListIndexMessage(taskList.size()));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            taskList.get(idx);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                ui.appendMessage(ui.buildEmptyTaskListMessage());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                ui.appendMessage(ui.buildInvalidTaskListIndexMessage(taskList.size()));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return idx;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Reads the remaining String from Scanner as the keyword for \u0027Find\u0027 action."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Invalid input argument types or format will be highlighted to the user."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return If successful, the String representation of the keyword. Else, a null object."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String parseKeyword() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String keyword \u003d arguments.trim();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        boolean isValid \u003d validateDescriptionNotEmpty(keyword);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (isValid) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return keyword;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String[] parseSortInfo() {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String keyword \u003d arguments.trim();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] sortInfo \u003d parseRawInput(keyword);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return sortInfo;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public int parseKeywordAsSortCategory(String keyword) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        switch (keyword) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        case \"name\":"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return Task.NAME_CATEGORY;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return Task.DEADLINE_CATEGORY;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        case \"type\":"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return Task.TYPE_CATEGORY;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        case \"status\":"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return Task.STATUS_CATEGORY;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                throw new InvalidArgumentException(ui.buildInvalidSortCategoryMessage());"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            } catch (InvalidArgumentException e) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                ui.appendMessage(e.getMessage());"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                return -1;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private boolean validateDescriptionNotEmpty(String keyword) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (keyword.isEmpty()) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                throw new EmptyDescriptionException(ui.buildEmptyDescriptionMessage());"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            ui.appendMessage(e.getMessage());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private boolean validateTaskInfo(String[] taskInfo) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String dateString;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (validateArgumentsNotBlank(taskInfo)) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                throw new EmptyDescriptionException(ui.buildEmptyDescriptionMessage());"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            dateString \u003d taskInfo[1];"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            ui.appendMessage(ui.buildIncorrectArgumentsMessage());"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            ui.appendMessage(e.getMessage());"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            validateDateFormat(dateString);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            ui.appendMessage(ui.buildIncorrectDateFormatMessage());"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private void validateDateFormat(String dateString) throws ParseException {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(DATE_FORMATTER_PATTERN);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        sdf.setLenient(false);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        cal.setTime(sdf.parse(dateString));"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private boolean validateArgumentsNotBlank(String[] taskInfo) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return taskInfo.length \u003d\u003d 0 || taskInfo[0].isBlank() || taskInfo[1].isBlank();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Splits the raw user input String into the first action keyword and its arguments."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param input The raw user input sent to the Duke chat bot via the javafx GUI."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @return An array of size two which contains the \"action\" as the first element and"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * \"arguments\" as the second element. If there are no additional arguments to the"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * action, the second element will simply be an empty string."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private String[] parseRawInput(String input) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        StringBuilder first \u003d new StringBuilder();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        StringBuilder second \u003d new StringBuilder();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        for (int i \u003d 0; i \u003c input.length(); i++) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            Character c \u003d input.charAt(i);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            if (c !\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                first.append(c);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                second.append(input.substring(i));"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return new String[]{first.toString(), second.toString().trim()};"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 277
    }
  },
  {
    "path": "src/main/java/utils/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * Manages the I/O for accessing and updating of a stored task list in"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * the file directory."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static final String SEPARATOR \u003d \" | \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static File file;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Loads data into the TaskList if the storage file already exists. Else"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * creates a new file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param absolutePathName The full path name of the file to specify its"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *                         stored location."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public Storage(String absolutePathName) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        file \u003d new File(absolutePathName);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        taskList \u003d TaskList.newInstance();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            loadData();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Deletes the storage file from its directory."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void deleteData() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        file.delete();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Parse the storage file and stores all the tasks listed within it"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * into TaskList."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private void loadData() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Scanner sc;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assert file.exists() : \"Storage file does not exist.\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            // Separates a line \"E | 0 | EventName | 20/08/2019 2100\" to"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            // {\"E\", \"0\", \"EventName\", \"20/08/2019 2100\"}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            String[] taskInfo \u003d sc.nextLine().split(\"\\\\s*\\\\|\\\\s*\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            addNewTaskToTaskList(taskInfo);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Rewrites the whole storage file based on the current TaskList"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * contents."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void updateData() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file.getAbsolutePath());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            TaskList taskList \u003d TaskList.newInstance();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                sb.append(task.getStorageStringFormat());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                sb.append(\"\\n\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            fw.write(sb.toString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private void addNewTaskToTaskList(String[] taskInfo) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        switch (taskInfo[0]) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            taskList.addNewTodoTask(taskInfo[2],"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    taskInfo[1].equals(Task.DONE + \"\"));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            taskList.addNewDeadlineTask(taskInfo[2],"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    taskInfo[3],"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    taskInfo[1].equals(Task.DONE + \"\"));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            taskList.addNewEventTask(taskInfo[2],"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    taskInfo[3],"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    taskInfo[1].equals(Task.DONE + \"\"));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 118
    }
  },
  {
    "path": "src/main/java/utils/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * A Ui class to manage all of Duke\u0027s output. It functions with a singleton"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * model so that at any point in time, only one copy of the output String is"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": " * being built."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public static final String LIST_ACTION_TITLE \u003d"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public static final String FIND_ACTION_TITLE \u003d"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static final String SAD_EMOTICON \u003d \"\\u2639\"; // \"☹\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static final String LOGO \u003d"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            \" ____        _        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private static final String HELP_MESSAGE \u003d"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            \"List of commands:\\n\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"bye:\\nExits from the program\\n\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"list:\\nList all existing tasks\\n\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"help:\\nPrints the list of commands\\n\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"done [n]:\\nMarks the n-th task on the list as done\\n\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"delete [n]:\\nDeletes the n-th task on the list\\n\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"todo [taskName] :\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"Adds a new Todo task with the given \\\"taskName\\\".\\n\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"event [taskName] /at [DD/MM/YYYY HHmm] :\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"Adds a new Event task with the deadline in the given format.\\n\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"deadline [taskName] /by [DD/MM/YYYY HHmm] :\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"Adds a new Deadline task with the deadline in the given format.\\n\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"undo:\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"Undoes the most recent action.\\n\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"find [keyword] :\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"Returns a list of task with names containing the \\\"keyword\\\".\\n\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"sort [category] r:\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"Sorts and returns the list of tasks. Category can be one of \\\"name\\\", \""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"\\\"deadline\\\", \\\"type\\\", \\\"status\\\".\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    + \"\\nOptional argument \\\"r\\\" sorts list in reverse order.\\n\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private StringBuilder outputBuilder;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Initializes StringBuilder on construction."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        outputBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Prints a hello message when program first initializes."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        outputBuilder.append(\"Hello! I\u0027m Duke\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        outputBuilder.append(\"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        outputBuilder.append(\"Enter \\\"help\\\" for a list of commands.\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Prints a list of actions that can be used."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void printHelpMessage() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        outputBuilder.append(HELP_MESSAGE);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Prints a message upon exit of the program."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void printByeMessage() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        outputBuilder.append(\"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Prints a message to indicate that is no existing task."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void printEmptyTaskListMessage() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        outputBuilder.append(\"You have no task at the moment.\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Prints all the tasks in the given task list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param taskList The list of tasks to be printed."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param title    The preamble to be printed before listing the tasks."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void printTaskList(List\u003cTask\u003e taskList, String title) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assert taskList !\u003d null : \"Task list not found and cannot be printed.\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        outputBuilder.append(title);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            outputBuilder.append(String.format(\"%d.\", i + 1));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            outputBuilder.append(String.format(\"%s\\n\", taskList.get(i)));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Prints a message that the given task is marked as done."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param task The task that is marked as done."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void printMarkedAsDoneMessage(Task task) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assert task !\u003d null : \"Done task not found and cannot be printed.\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        outputBuilder.append(\"Nice! I\u0027ve marked this task as done:\\n\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        outputBuilder.append(String.format(\"%s\\n\", task));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Prints a message that the given task is marked as not done."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param task The task that is marked as not done."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void printMarkedAsNotDoneMessage(Task task) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assert task !\u003d null : \"Task not found and cannot be printed.\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        outputBuilder.append(\"I\u0027ve marked this task as not done:\\n\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        outputBuilder.append(String.format(\"%s\\n\", task));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Prints a message to acknowledging the undo-ing of previous action."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void printUndoMessage() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        outputBuilder.append(\"Undo-ing previous action.\\n\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Prints a message to explain why undo is not allowed."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void printUndoNotAllowedMessage() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        outputBuilder.append(\"Undo not allowed as there is no earlier action.\\n\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Prints a message that the given task has been deleted and then"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * prints the total number of tasks remaining."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param task         The task that is deleted."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param taskListSize The total number of tasks remaining in the task list"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void printTaskDeletedMessage(Task task, int taskListSize) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assert task !\u003d null : \"Deleted task not found and cannot be printed.\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        outputBuilder.append(\"Noted. I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        outputBuilder.append(String.format(\"%s\\n\", task));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        printListSummary(taskListSize);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private void printListSummary(int taskListSize) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        outputBuilder.append(String.format(\"Now you have %d tasks in the list.\\n\", taskListSize));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * Prints a message that the given task has been added and then"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * prints the total number of tasks currently."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     *"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param task         The task that has been added."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     * @param taskListSize The total number of tasks currently in the task list."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void printTaskAddedMessage(Task task, int taskListSize) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assert task !\u003d null : \"Added task not found and cannot be printed.\";"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        outputBuilder.append(\"Got it. I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        outputBuilder.append(String.format(\"%s\\n\", task));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        printListSummary(taskListSize);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void printListSortedMessage() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        outputBuilder.append(\"Your list has been sorted.\\n\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String buildIncorrectArgumentsMessage() {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return String.format(\"%s OOPS!!! Incorrect number of arguments. Use the \\\"help\\\" command for guide.\\n\","
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                Ui.SAD_EMOTICON);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String buildEmptyDescriptionMessage() {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return String.format(\"%s OOPS!!! Description cannot be empty. Use the \\\"help\\\" command for guide.\\n\","
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                Ui.SAD_EMOTICON);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String buildIncorrectDateFormatMessage() {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return String.format(\"%s OOPS!!! Date must be valid and be in the format \\\"%s\\\"\\n\","
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                Ui.SAD_EMOTICON,"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                Parser.DATE_FORMATTER_PATTERN);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String buildInvalidCommandMessage() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return String.format(\"%s OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\","
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                SAD_EMOTICON);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String buildEmptyTaskListMessage() {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return String.format(\"%s OOPS!!! You have no task at the moment.\\n\","
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                Ui.SAD_EMOTICON);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String buildInvalidTaskListIndexMessage(int size) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return String.format(\"%s OOPS!!! Task index number must be a number from %d to %d.\\n\","
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                Ui.SAD_EMOTICON,"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                1,"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                size);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String buildInvalidSortCategoryMessage() {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return String.format(\"%s OOPS!!! Category must be one of the following: \\\"%s\\\", \\\"%s\\\", \\\"%s\\\", \\\"%s\\\".\""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                + \"\\nEnter \\\"help\\\" for illustration.\\n\","
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                Ui.SAD_EMOTICON,"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                \"name\","
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                \"deadline\","
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                \"type\","
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                \"status\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void appendMessage(String message) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        outputBuilder.append(message);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void resetOutputBuilder() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        outputBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public String getOutputAndClearBuilder() {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String output \u003d outputBuilder.toString();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        resetOutputBuilder();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 245
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "         maxHeight\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "         maxWidth\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "         prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "         xmlns\u003d\"http://javafx.com/javafx/8.0.171\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "               text\u003d\"Label\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "               wrapText\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                   fitHeight\u003d\"99.0\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                   fitWidth\u003d\"99.0\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                   pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                   preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                left\u003d\"5.0\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                right\u003d\"5.0\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "garylyp": 33
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            maxWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            minHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            xmlns\u003d\"http://javafx.com/javafx/8.0.171\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            fx:controller\u003d\"controller.MainWindow\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                   layoutY\u003d\"558.0\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                   onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                   prefHeight\u003d\"41.0\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                   prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                layoutX\u003d\"324.0\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                layoutY\u003d\"558.0\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                prefHeight\u003d\"41.0\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                prefWidth\u003d\"76.0\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                text\u003d\"Send\"/\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    hbarPolicy\u003d\"NEVER\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    hvalue\u003d\"1.0\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    prefHeight\u003d\"557.0\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                    vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                      prefHeight\u003d\"552.0\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "                      prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "garylyp": 47
    }
  },
  {
    "path": "src/test/java/task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void newInstance_sameTaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        TaskList taskList \u003d TaskList.newInstance();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(taskList, TaskList.newInstance());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void addNewTodoTask_doneTodo_doneTodoTask() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Task newTodo \u003d TaskList.newInstance().addNewTodoTask(\"Todo1\", true);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(Task.DONE, newTodo.getStatus());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void addNewTodoEvent_undoneEvent_undoneEventTask() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        Task newTodo \u003d TaskList.newInstance().addNewEventTask(\"Event1\", \"Event1Info\", false);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(Task.NOT_DONE, newTodo.getStatus());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void clear_emptyList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        TaskList taskList \u003d TaskList.newInstance();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        taskList.addNewTodoTask(\"Todo1\", false);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        taskList.addNewTodoTask(\"Todo2\", false);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        taskList.addNewTodoTask(\"Todo3\", false);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        taskList.clear();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(new ArrayList\u003cTask\u003e(), taskList.getTasks());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 39
    }
  },
  {
    "path": "src/test/java/utils/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import command.CommandCentre;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ParserTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        CommandCentre commandCentre \u003d new CommandCentre();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        commandCentre.initializeDummyCommands();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.setCommandCentre(commandCentre);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void parseEventDetail_withoutKeywordAt_null() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.getNextAction(\"event a string that does not contain the keyword\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d parser.parseEventDetail();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(null, taskInfo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void parseEventDetail_withoutDescription_null() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.getNextAction(\"event      /at additionalInfo\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d parser.parseEventDetail();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(null, taskInfo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void parseEventDetail_withoutAdditionalInfo_null() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.getNextAction(\"event event1 /at \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d parser.parseEventDetail();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(null, taskInfo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void parseEventDetail_withKeywordButWithoutDescAndInfo_null() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.getNextAction(\"event     /at  \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d parser.parseEventDetail();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(null, taskInfo);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void parseEventDetail_withAllNecessaryInfo_correctTaskInfo() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String action \u003d \"event \";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String taskName \u003d \"event1\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String additionalInfo \u003d \"20/11/2019 2214\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String input \u003d action + taskName + \" /at \" + additionalInfo;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.getNextAction(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] expectedTaskInfo \u003d new String[]{taskName, additionalInfo};"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d parser.parseEventDetail();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        for (int i \u003d 0; i \u003c taskInfo.length; i++) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            assertEquals(expectedTaskInfo[i], taskInfo[i]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void parseDeadlineDetail_withoutKeywordBy_null() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.getNextAction(\"deadline a string that does not contain the keyword\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d parser.parseDeadlineDetail();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(null, taskInfo);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void parseDeadlineDetail_withoutDescription_null() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.getNextAction(\"deadline     /by 25/08/2019 2156\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d parser.parseDeadlineDetail();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(null, taskInfo);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void parseDeadlineDetail_withoutAdditionalInfo_null() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.getNextAction(\"deadline deadline1 /by \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d parser.parseDeadlineDetail();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(null, taskInfo);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void parseDeadlineDetail_withKeywordButWithoutDescAndInfo_null() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.getNextAction(\"deadline     /by  \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d parser.parseDeadlineDetail();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(null, taskInfo);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void parseDeadlineDetail_withInvalidDateFormat_null() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.getNextAction(\"deadline deadline2 /by 22nd June\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d parser.parseDeadlineDetail();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(null, taskInfo);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void parseDeadlineDetail_withNonexistentDate_null() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.getNextAction(\"deadline deadline2 /by 99/99/2019 5400\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d parser.parseDeadlineDetail();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        assertEquals(null, taskInfo);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    public void parseDeadlineDetail_withAllNecessaryInfo_correctTaskInfo() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String action \u003d \"deadline \";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String taskName \u003d \"event1\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String additionalInfo \u003d \"25/08/2019 2156\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String input \u003d action + taskName + \" /by \" + additionalInfo;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        parser.getNextAction(input);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] expectedTaskInfo \u003d new String[]{taskName, additionalInfo};"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        String[] taskInfo \u003d parser.parseDeadlineDetail();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        for (int i \u003d 0; i \u003c taskInfo.length; i++) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "garylyp"
        },
        "content": "            assertEquals(expectedTaskInfo[i], taskInfo[i]);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "garylyp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "garylyp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garylyp": 120
    }
  },
  {
    "path": "text-ui-test/ACTUAL.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "\t Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "\t What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [T][✗] lalala "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [E][✗] happy (at: sad)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     ☹ OOPS!!! Date must be in the format \"dd/MM/yyyy HHmm\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    1.[T][✗] lalala "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    2.[E][✗] happy (at: sad)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [T][✗] dododo "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [E][✗] 456 (at: 789)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [D][✗] d3 (by: 22/09/2019 1800)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    1.[T][✗] lalala "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    2.[E][✗] happy (at: sad)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    3.[T][✗] dododo "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    4.[E][✗] 456 (at: 789)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    5.[D][✗] d3 (by: 22/09/2019 1800)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [E][✓] happy (at: sad)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [T][✓] dododo "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    1.[T][✗] lalala "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    2.[E][✓] happy (at: sad)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    3.[T][✓] dododo "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    4.[E][✗] 456 (at: 789)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    5.[D][✗] d3 (by: 22/09/2019 1800)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "garylyp": 70
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "﻿Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [T][✗] lalala "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [E][✗] happy (at: sad)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     ☹ OOPS!!! Date must be in the format \"dd/MM/yyyy HHmm\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    1.[T][✗] lalala "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    2.[E][✗] happy (at: sad)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [T][✗] dododo "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [E][✗] 456 (at: 789)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [D][✗] d3 (by: 22/09/2019 1800)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    1.[T][✗] lalala "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    2.[E][✗] happy (at: sad)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    3.[T][✗] dododo "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    4.[E][✗] 456 (at: 789)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    5.[D][✗] d3 (by: 22/09/2019 1800)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [E][✓] happy (at: sad)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garylyp"
        },
        "content": "       [T][✓] dododo "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    1.[T][✗] lalala "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    2.[E][✓] happy (at: sad)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    3.[T][✓] dododo "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    4.[E][✗] 456 (at: 789)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    5.[D][✗] d3 (by: 22/09/2019 1800)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garylyp"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "garylyp": 70
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "todo lalala"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": "event happy /at sad"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "deadline today /by tmr"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": "todo dododo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "event 456 /at 789"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "deadline d3 /by 22/09/2019 1800"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "garylyp": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garylyp"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garylyp"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garylyp"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garylyp"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garylyp"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garylyp"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garylyp"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garylyp"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garylyp"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garylyp"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garylyp"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garylyp"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garylyp"
        },
        "content": "java -classpath ..\\bin duke.main.Duke \u003c input.txt \u003e ACTUAL.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garylyp"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garylyp"
        },
        "content": "REM Check for differences in the two text files"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garylyp"
        },
        "content": "FC ACTUAL.txt EXPECTED.txt"
      }
    ],
    "authorContributionMap": {
      "garylyp": 21
    }
  }
]
