[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nishcafe": 16
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        ArrayList\u003cTask\u003e commands \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        while(scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            String command \u003d inputArr[0];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    scanner.close();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                } else if(command.equals(\"list\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    int count \u003d 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    for (Task s : commands) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        System.out.println(count + \". \" + s);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        count++;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        int index \u003d Integer.parseInt(inputArr[1]) - 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            Task doneTask \u003d commands.get(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            doneTask.markAsDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n  \" + doneTask);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        } catch(IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            throw new DukeException(\"OOPS!!! Index for done does not exist in the list.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    } catch(ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        throw new DukeException(\"OOPS!!! Index for done cannot be empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        String dL \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            String[] taskDeadLine \u003d dL.split(\" /by \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            String taskD \u003d taskDeadLine[0];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            String by \u003d taskDeadLine[1];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            Task tt \u003d new Deadline(taskD, by);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            commands.add(tt);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + tt"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                                    + \"\\nNow you have \" + commands.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            throw new DukeException(\"OOPS!!! The format for deadline is wrong. Please follow: \u003cdescription\u003e /by \u003ctime\u003e\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        throw new DukeException(\"OOPS!!! The description of deadline cannot be empty.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                } else if(command.equals(\"event\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        String eEvent \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            String[] taskEvent \u003d eEvent.split(\" /at \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            String taskE \u003d taskEvent[0];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            String at \u003d taskEvent[1];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            Task ee \u003d new Event(taskE, at);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            commands.add(ee);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + ee"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                                    + \"\\nNow you have \" + commands.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        } catch(ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            throw new DukeException(\"OOPS!!! The format for event is wrong. Please follow: \u003cdescription\u003e /at \u003ctime\u003e\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    } catch(ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        throw new DukeException(\"OOPS!!! The description of event cannot be empty.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                } else if(command.equals(\"todo\")){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        String todoT \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        Task t \u003d new Todo(todoT);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        commands.add(t);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + t"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                                + \"\\nNow you have \" + commands.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    } catch(ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                } else if(command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        int i \u003d Integer.parseInt(inputArr[1]) - 1;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            Task tt \u003d commands.remove(i);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            System.out.println(\"Noted. I\u0027ve removed this task:\\n  \" + tt +"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                                               \"\\nNow you have \" + commands.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                            throw new DukeException(\"OOPS!!! Index for delete does not exist in the list.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                        throw new DukeException(\"OOPS!!! Index for delete cannot be empty.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                    throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            } catch(DukeException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 100,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 22
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishcafe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishcafe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishcafe": 11
    }
  }
]
