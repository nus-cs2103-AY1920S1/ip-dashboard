[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return \"[D]\" + super.getStatusIcon() + \" \" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dandford"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dandford": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    private ArrayList\u003cTask\u003e textEntered;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public Duke(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        textEntered \u003d new ArrayList\u003cTask\u003e(100);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        Duke dukebot \u003d new Duke();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        dukebot.greetUser();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        dukebot.echoUser();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    private void greetUser(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    private void echoUser() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        String exceptionString;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        while(!input.equalsIgnoreCase(\"Bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                String[] inputsplit \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                if (inputsplit[0].equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                    printRecord();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                } else if (inputsplit[0].equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                    handleDone(input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                } else if (inputsplit[0].equalsIgnoreCase(\"todo\") || inputsplit[0].equalsIgnoreCase(\"deadline\") ||"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                    inputsplit[0].equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                    handleNewTask(inputsplit[0], input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                } else if (inputsplit[0].equalsIgnoreCase(\"delete\")){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                    handleDelete(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                    throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                System.out.println(e.getMessage() + \"\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            System.out.println(\"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    private void handleDone(String doneInfo) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        String[] inputsplit \u003d doneInfo.split(\" \", 2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        if(inputsplit.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of done must have a value.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        } else if (Integer.parseInt(inputsplit[1]) \u003e textEntered.size() || Integer.parseInt(inputsplit[1]) \u003c\u003d 0 ){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            throw new DukeException(\"OOPS!!! Invalid value for task done!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            int num \u003d Integer.parseInt(inputsplit[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            markTaskDone(num);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    private void handleDelete(String deleteInfo) throws DukeException{"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        String[] inputsplit \u003d deleteInfo.split(\" \", 2);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        if(inputsplit.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of delete must have a value.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        } else if (Integer.parseInt(inputsplit[1]) \u003e textEntered.size() || Integer.parseInt(inputsplit[1]) \u003c\u003d 0 ){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            throw new DukeException(\"OOPS!!! Invalid value for task delete!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            int num \u003d Integer.parseInt(inputsplit[1]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            Task t \u003d  textEntered.remove(num - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + \"  \" + t.toString() + \"\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Dandford"
        },
        "content": "                    + \"Now you have \" + textEntered.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    private void handleNewTask(String typeTask, String taskInfo) throws DukeException{"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        String[] inputsplit \u003d taskInfo.split(\" \", 2);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        if(inputsplit.length \u003c\u003d 1 ){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a \" + typeTask + \" cannot be empty.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        Task taskToAdd;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        if (typeTask.equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Dandford"
        },
        "content": "             taskToAdd \u003d new toDo(inputsplit[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        } else if (typeTask.equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            String[] descripSplit \u003d inputsplit[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Dandford"
        },
        "content": "             taskToAdd \u003d new Deadline(descripSplit[0], descripSplit[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            String[] descripSplit \u003d inputsplit[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Dandford"
        },
        "content": "             taskToAdd \u003d new Event(descripSplit[0], descripSplit[1]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        addToRecord(taskToAdd);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    private void addToRecord(Task t){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        this.textEntered.add(t);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        System.out.printf(\"Got it. I\u0027ve added this task: \\n  %s\\nNow you have %d tasks in the list.%n\", t.toString(), textEntered.size());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    private void markTaskDone(int num){"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        Task t \u003d  textEntered.get(num - 1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        t.markIsDone();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        System.out.println(\"  \" + t.getStatusIcon() + \" \" +  t.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    private void printRecord(){"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        for(int i \u003d 0; i \u003c textEntered.size(); i++){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Dandford"
        },
        "content": "            System.out.print((i + 1) + \".\" + textEntered.get(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dandford": 109,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    String message;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public DukeException(String errormsg){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        String modifiedMsg \u003d \"\\u2639 \" + errormsg;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        this.message \u003d modifiedMsg;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dandford"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dandford": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    protected String eventTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public Event(String description, String eventTime) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return \"[E]\" + super.getStatusIcon() + \" \" + super.toString() + \" (at: \" + eventTime + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dandford"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dandford": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public void markIsDone(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return (isDone ? \"[\" + \"\\u2713\" + \"]\" : \"[\" + \"\\u2718\" + \"]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dandford"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dandford": 25
    }
  },
  {
    "path": "src/main/java/toDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "public class toDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public toDo(String description){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": "        return \"[T]\" + super.getStatusIcon() + \" \" +  super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dandford": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "Dandford": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dandford"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dandford"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dandford"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dandford"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dandford"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dandford"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dandford"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dandford"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dandford"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dandford"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dandford"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dandford"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dandford"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dandford"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dandford"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dandford"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Dandford": 21
    }
  }
]
