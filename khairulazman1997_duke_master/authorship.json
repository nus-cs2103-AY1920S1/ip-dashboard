[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    archiveVersion \u003d \"0.2.0\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "test {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 28,
      "-": 15
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "E | 1 | 1UP Welcome Tea | 18th of September 1997, 6.00pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "D | 1 | UTS2101 paper | 28th of August 2019, 4.00pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "E | 1 | House Committea | 26th of August 2019, 10.00pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "T | 1 | Minh"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "E | 0 | Rally | 2nd of September 2019, 8.00pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "T | 1 | duke"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "E | 0 | sleep | 18th of September 1997, 6.00pm"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 8
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 84
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.MainWindow;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 62
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "//import javafx.application.Application;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "//import javafx.scene.Scene;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "//import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "//import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "//import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "//import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "//import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "//import javafx.stage.Stage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "//import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "//import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "//import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "//import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * Main class of Duke programme."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Inititalises the Duke class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String filePath \u003d \"C:\\\\Users\\\\Khairul\\\\Desktop\\\\Computing Resources\\\\CS2103T\\\\duke\\\\data\\\\duke.txt\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        assert storage !\u003dnull : \"storage should hold an actual Storage object.\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Gets a response in the form of a String after receiving user"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * input"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            assert c !\u003d null : \"c should hold an actual command object.\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            return c.execute(tasks, storage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 63,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.Main;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 13
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        showWelcome();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private void showWelcome(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String logo \u003d \" ____        _        \\n\" + \"|  _ \\\\ _   _| | _____ \\n\" + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String welcome \u003d  \"Hello! I\u0027m \\n\" + logo + \"What can I do for you?\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(welcome,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                dukeImage));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String byeMessage \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        if(response.equals(byeMessage)){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            delayedExit(1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private void delayedExit(int seconds) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        Timer timer \u003d new Timer();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        timer.schedule(new TimerTask() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            public void run() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }, new Date(System.currentTimeMillis() + seconds * 1000));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 79
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.formats.DateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * Represents the actions to execute when the command \u0027deadline\u0027 is triggered."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private Deadline deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Returns an AddDeadlineCommand object from the commandArray, an array of words"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * which make up the initial user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param commandArray Array of Strings that form the initial user input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @throws DukeException if input doesn\u0027t match the format expected"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public AddDeadlineCommand(String[] commandArray) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        StringBuilder deadlineNameBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        int arrayIndex \u003d 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        //adds all the words in the user input before the substring /by into deadlineNameBuilder"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        while (!commandArray[arrayIndex].equals(\"/by\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            if (arrayIndex \u003e\u003d commandArray.length - 1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The \u0027/by\u0027 sequence couldn\u0027t be found.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            deadlineNameBuilder.append(\" \" + commandArray[arrayIndex]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            arrayIndex++;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        deadlineNameBuilder.append(\" \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        arrayIndex++;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        // creates the due date string in the form of deadlineDueBuilder"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        StringBuilder deadlineDueBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        if (arrayIndex \u003e\u003d commandArray.length) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The deadline must be specified.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        boolean isFirstWord \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        while (arrayIndex \u003c commandArray.length) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            if (!isFirstWord) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                deadlineDueBuilder.append(\" \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            deadlineDueBuilder.append(commandArray[arrayIndex]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            arrayIndex++;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            isFirstWord \u003d false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String deadlineDue \u003d deadlineDueBuilder.toString();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        DateTime dateTime \u003d new DateTime(deadlineDue);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String deadlineName \u003d deadlineNameBuilder.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        this.deadline \u003d new Deadline(deadlineName, false, dateTime.toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Adds a Deadline object into the TaskList as per the command inputted."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param tasks   List of Tasks"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param storage External storage where the list of tasks is stored"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        assert deadline !\u003d null : \"deadline should hold an actual Deadline object.\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        tasks.addTask(deadline);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            storage.writeToFile(deadline.toFile());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            return \"Something went wrong: \" + e.getMessage();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                + \"  \" + deadline + \"\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                + \"Now you have \" + tasks.getSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 80
    }
  },
  {
    "path": "src/main/java/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.formats.DateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * Represents the actions to execute when the command \u0027event\u0027 is triggered."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private Event event;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Returns an AddEventCommand object from the commandArray, an array of words"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * which make up the initial user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param commandArray Array of Strings that form the initial user input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @throws DukeException if input doesn\u0027t match the format expected"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public AddEventCommand(String[] commandArray) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        StringBuilder eventNameBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        int arrayIndex \u003d 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        //creates name of event by appending all words before the substring /at"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        while (!commandArray[arrayIndex].equals(\"/at\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            if (arrayIndex \u003e\u003d commandArray.length - 1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The \u0027/at\u0027 sequence couldn\u0027t be found.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            eventNameBuilder.append(\" \" + commandArray[arrayIndex]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            arrayIndex++;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        eventNameBuilder.append(\" \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        arrayIndex++;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        StringBuilder eventDurationBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        //creates duration of event by appending all words after the substring /at"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        if (arrayIndex \u003e\u003d commandArray.length) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The event timing must be specified.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        boolean isFirstWord \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        while (arrayIndex \u003c commandArray.length) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            if (!isFirstWord) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                eventDurationBuilder.append(\" \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            eventDurationBuilder.append(commandArray[arrayIndex]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            arrayIndex++;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            isFirstWord \u003d false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String eventDuration \u003d eventDurationBuilder.toString();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        DateTime dateTime \u003d new DateTime(eventDuration);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String eventName \u003d eventNameBuilder.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        this.event \u003d new Event(eventName, false, dateTime.toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Adds an Event object into the TaskList as per the command inputted."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param tasks   List of Tasks"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param storage External storage where the list of tasks is stored"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        tasks.addTask(event);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        assert event !\u003d null : \"event should hold an actual Event object.\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            storage.writeToFile(event.toFile());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            return \"Something went wrong: \" + e.getMessage();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                + \"  \" + event + \"\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                + \"Now you have \" + tasks.getSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 80
    }
  },
  {
    "path": "src/main/java/duke/command/AddToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * Represents the actions to execute when the command \u0027todo\u0027 is triggered."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "public class AddToDoCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Returns an AddEventCommand object from the commandArray, an array of words"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * which make up the initial user input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param commandArray Array of Strings that form the initial user input"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public AddToDoCommand(String[] commandArray) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        StringBuilder taskNameBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        // creates a taskName string by appending all the words in the user input"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        for (int i \u003d 1; i \u003c commandArray.length; i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            taskNameBuilder.append(\" \" + commandArray[i]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String taskName \u003d taskNameBuilder.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        this.task \u003d new Task(taskName, false);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Adds a Task object into the TaskList as per the command inputted."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param tasks   List of Tasks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param storage External storage where the list of tasks is stored"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        assert task !\u003d null : \"task should hold an actual Task object.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            storage.writeToFile(task.toFile());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            return \"Something went wrong: \" + e.getMessage();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                + \"  \" + task + \"\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                + \"Now you have \" + tasks.getSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 52
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * Represents the actions to execute when the command \u0027bye\u0027 is"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * triggered."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Prints goodbye message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param tasks List of Tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param storage External storage where the list of tasks is stored"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Returns the boolean true to signal termination of program."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @return returns the boolean true to mark the end of the program"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 34
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * Represents an abstract class Command which executes certain actions based on"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * command type."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public abstract String execute(TaskList tasks, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Always returns false unless its a ByeCommand to signal programme hasn\u0027t"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * ended."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @return the boolean false"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 27
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * Represents the actions to execute when the command \u0027delete\u0027 is"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * triggered."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Returns an AddDeleteCommand object from the commandArray,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * an array of the command and an index which make up the initial user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param commandArray Array of the command and an index that from initial user input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public DeleteCommand(String[] commandArray) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String indexString \u003d commandArray[1];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        assert commandArray.length \u003d\u003d 2 : \"commandArray shouldn\u0027t be bigger than 2\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        this.index \u003d Integer.parseInt(indexString);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Deletes a task with specified index."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param tasks List of Tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param storage External storage where the list of tasks is stored"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @throws DukeException If the index doesn\u0027t correspond to a task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        if (index \u003c 1 || tasks.getSize() \u003c index) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! There is no available task in the given index.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        Task toRemove \u003d tasks.getTask(index - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        tasks.deleteTask(index - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            storage.updateFile(tasks);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            return \"Something went wrong: \" + e.getMessage();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                + \"  \" + toRemove + \"\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                + \"Now you have \" + tasks.getSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 54
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * Represents the actions to execute when the command \u0027done\u0027 is triggered."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Returns an AddDoneCommand object from the commandArray, an array of the"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * command and an index which make up the initial user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param commandArray Array of the command and an index that from initial user"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     *                     input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public DoneCommand(String[] commandArray) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String indexString \u003d commandArray[1];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        //parsing index of the Task that should be marked as done"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        this.index \u003d Integer.parseInt(indexString);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Marks a task with specified index as completed."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param tasks   List of Tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param storage External storage where the list of tasks is stored"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @throws DukeException If the index doesn\u0027t correspond to a task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        if (index \u003c 1 || tasks.getSize() \u003c index) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! There is no available task in the given index.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        Task doneTask \u003d tasks.getTask(index - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        doneTask.setDone(true);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            storage.updateFile(tasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            return \"Something went wrong: \" + e.getMessage();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                + \"  \" + doneTask;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 55
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * Represents the actions to execute when the command \u0027deadline\u0027 is triggered."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    String toFind;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Returns an FindCommand object from the commandArray, an array of words"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * which make up the initial user input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param commandArray Array of Strings that form the initial user input"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public FindCommand(String[] commandArray) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        StringBuilder stringToFindBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        boolean isFirst \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        for (int i \u003d 1; i \u003c commandArray.length; i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            if (!isFirst) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                toFind +\u003d commandArray[i];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                isFirst \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            stringToFindBuilder.append(\" \" + commandArray[i]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            this.toFind \u003d stringToFindBuilder.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Prints a list of tasks that contains a substring equal to the String inputted."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param tasks   List of Tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param storage External storage where the list of tasks is stored"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        assert toFind !\u003d null : \"toFind should contain an actual String\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        TaskList matchingTasks \u003d tasks.search(toFind);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return \"Here are the tasks in your list:\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                + matchingTasks;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 49
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * Represents the actions to execute when the command \u0027list\u0027 is"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * triggered."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Prints all the tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param tasks   List of Tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param storage External storage where the list of tasks is stored"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return tasks.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 24
    }
  },
  {
    "path": "src/main/java/duke/command/SnoozeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.formats.DateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "public class SnoozeCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private String newDateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public SnoozeCommand(String[] commandArray){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        this.index \u003d Integer.valueOf(commandArray[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        StringBuilder dateTimeBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        dateTimeBuilder.append(commandArray[2]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        dateTimeBuilder.append(\" \" + commandArray[3]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        DateTime dateTime \u003d new DateTime(dateTimeBuilder.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        this.newDateTime \u003d dateTime.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        if (index \u003c 1 || tasks.getSize() \u003c index) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! There is no available task in the given index.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        Task taskToChange \u003d tasks.getTask(index - 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        if(taskToChange instanceof Deadline){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            Deadline deadlineToChange \u003d (Deadline) taskToChange;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            deadlineToChange.setDeadline(newDateTime);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        } else if (taskToChange instanceof Event){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            Event eventToChange \u003d (Event) taskToChange;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            eventToChange.setDuration(newDateTime);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Operation cannot be executed for this Task type\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            storage.updateFile(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            return \"Something went wrong: \" + e.getMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return \"Nice! I\u0027ve changed the timing of this task :\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                + \"  \" + taskToChange;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 50
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * Represents exceptions that may arise when running the Duke programme."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    String exceptionString;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Constructs a DukeException object from an exception message string."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param exceptionString The exception message"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public DukeException(String exceptionString) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        this.exceptionString \u003d exceptionString;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Returns the DukeException message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @return DukeException message"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        assert exceptionString !\u003d null : \"exceptionString should contain an actual String\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return exceptionString;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 33
    }
  },
  {
    "path": "src/main/java/duke/formats/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke.formats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import java.text.DateFormatSymbols;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * Represents the Date and Time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private String day;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private String month;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private String year;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private String meridiem;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Constructs the DateTime object from a formatted String."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param toDateTime formatted string representing date and time"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public DateTime(String toDateTime) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String[] dateAndTime \u003d toDateTime.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String date \u003d dateAndTime[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String[] dayMonthYear \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        int dayInt \u003d Integer.valueOf(dayMonthYear[0]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        setDay(dayInt);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        int monthInt \u003d Integer.valueOf(dayMonthYear[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        this.month \u003d new DateFormatSymbols().getMonths()[monthInt - 1];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        this.year \u003d dayMonthYear[2];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String time \u003d dateAndTime[1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        int timeInt \u003d Integer.valueOf(time);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        setTime(timeInt);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Sets the day field of DateTime based on the day of the month"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * provided"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param dayInt"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private void setDay(int dayInt){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        assert dayInt \u003c\u003d 31 : \"day int can only go up to 31\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        switch (dayInt) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                this.day \u003d \"1st\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                this.day \u003d \"2nd\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                this.day \u003d \"3rd\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                this.day \u003d dayInt + \"th\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Sets the time of the DateTime object based on the timeInt provided"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param timeInt"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private void setTime(int timeInt){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        this.meridiem \u003d timeInt \u003e\u003d 1200 ? \"pm\" : \"am\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        int minutes \u003d timeInt % 100;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        int twentyFourHour \u003d (timeInt - minutes) / 100;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        int hours \u003d twentyFourHour % 12 \u003d\u003d 0 ? 12 : twentyFourHour % 12;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        this.time \u003d hours + \".\" + String.format(\"%02d\", minutes);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Returns a formatted String based on the required DateTime format."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @return formatted String"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return \" \" + day + \" of \" + month + \" \" + year + \", \" + time + meridiem;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 85
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * Represents a parser object that parses all the user input"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * and invoking the relevant commands."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Parses the user input in the form of a string and creating the corresponding"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * command object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param fullCommand User input"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @return corresponding command object"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @throws DukeException If input doesn\u0027t follow correct format"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String trimmedFullCommand \u003d fullCommand.trim();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String[] words \u003d trimmedFullCommand.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String command \u003d words[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            if (words.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            return new AddToDoCommand(words);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            if (words.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            return new AddDeadlineCommand(words);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            if (words.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            return new AddEventCommand(words);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            if (words.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The index of the task to mark as complete \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                        + \"must be specified\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            return new DoneCommand(words);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            if (words.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The index of the task to delete must be specified\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            return new DeleteCommand(words);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            if (words.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of the task to find must be specified\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            return new FindCommand(words);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        case \"snooze\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            if (words.length \u003c\u003d 3) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Please specify the new timing\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            return new SnoozeCommand(words);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 78
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import java.nio.file.StandardCopyOption;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * Represents the storage manager of Duke which maintains task data in a txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Constructs a storage object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param filePath the path to the txt file to be maintained"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Reads the information from the file specified by the filepath and turns it"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * into an ArrayList of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @return ArrayList of tasks"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @throws FileNotFoundException if filepath does not direct to a file"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        File taskFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        Scanner s \u003d new Scanner(taskFile);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            String[] details \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            switch (details[0]) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                String taskName \u003d \" \" + details[2];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                Task newTask \u003d new Task(taskName, details[1].equals(\"1\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                tasksList.add(newTask);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                String deadlineName \u003d \" \" + details[2] + \" \";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                String deadlineTime \u003d \" \" + details[3];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                Deadline deadline \u003d new Deadline(deadlineName, details[1].equals(\"1\"), deadlineTime);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                tasksList.add(deadline);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                String eventName \u003d \" \" + details[2] + \" \";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                String eventTime \u003d \" \" + details[3];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                Event event \u003d new Event(eventName, details[1].equals(\"1\"), eventTime);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                tasksList.add(event);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        s.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return tasksList;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Adds a Task into the txt file specified by filepath."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param text String representing tasks in file form"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @throws IOException if file cannot be found"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public void writeToFile(String text) throws IOException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String textToAppend \u003d text;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        File appendingFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        if (appendingFile.length() !\u003d 0) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            textToAppend \u003d System.lineSeparator() + text;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Adds a Task into the txt file specified by the pathName param."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param text     String representing tasks in file form"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param pathName txt file to write to"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @throws IOException if file cannot be found"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public void writeToFile(String text, String pathName) throws IOException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String textToAppend \u003d text;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        File appendingFile \u003d new File(pathName);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        if (appendingFile.length() !\u003d 0) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            textToAppend \u003d System.lineSeparator() + text;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        FileWriter fw \u003d new FileWriter(pathName, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Updates the txt file with the current TaskList."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param tasks most recent TaskList"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @throws IOException if file cannot be found"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public void updateFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String tempPath \u003d \"C:\\\\Users\\\\Khairul\\\\Desktop\\\\Computing Resources\\\\CS2103T\\\\duke\\\\data\\\\temp.txt\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        File tempFile \u003d new File(tempPath);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        tempFile.createNewFile();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        ArrayList\u003cTask\u003e tasksList \u003d tasks.getTasks();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        for (Task task : tasksList) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            writeToFile(task.toFile(), tempPath);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        Files.copy(Paths.get(tempPath), Paths.get(filePath), StandardCopyOption.REPLACE_EXISTING);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        Files.delete(Paths.get(tempPath));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 130
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * Represents a Deadline Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    String deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Creates a deadline object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param taskName name of the deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param isDone whether the deadline task has been completed"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param deadline due date of task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public Deadline(String taskName, boolean isDone, String deadline) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        super(taskName, isDone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public void setDeadline(String newDeadline){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        this.deadline \u003d newDeadline;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Returns a string to represent the deadline in the storage file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @return Deadline String in file form"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String mark \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return \"D | \" + mark + \" |\" + taskName + \"|\" + deadline;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Returns deadline in string form to be printed."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @return Deadline String in print form"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String mark \u003d isDone ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return \"[D][\" + mark + \"]\" + taskName"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                + \"(by:\" + deadline + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 50
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * Represents an Event Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    String duration;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Creates a deadline object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param taskName name of the event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param isDone whether the event has been completed"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param duration timing of event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public Event(String taskName, boolean isDone, String duration) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        super(taskName, isDone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public void setDuration(String newDuration){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        this.duration \u003d newDuration;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Returns a string to represent the event in the storage file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @return Event String in file form"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String mark \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return \"E | \" + mark + \" |\" + taskName + \"|\" + duration;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Returns event in string form to be printed."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @return Event String in print form"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String mark \u003d isDone ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return \"[E][\" + mark + \"]\" + taskName"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                + \"(at:\" + duration + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 49
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * Represents a Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    String taskName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Creates a task object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param taskName name of the task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param isDone   whether the deadline task has been completed"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public Task(String taskName, boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Sets isDone boolean."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param done boolean to set the isDone boolean to"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Returns a string to represent the task in the storage file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @return Task String in file form"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String mark \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return \"T | \" + mark + \" |\" + taskName;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Checks if the Task contains a substring with the same sequence as the string"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * toSearch."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param toSearch string to be searched in taskname"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @return true only if taskName String contains the toSearch subString"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public boolean contains(String toSearch) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return taskName.contains(toSearch);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public String getTaskName(){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return this.taskName;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Returns Task in string form to be printed."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @return Task String in print form"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        String mark \u003d isDone ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return \"[T][\" + mark + \"]\" + taskName;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 72
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " * Represents the object where tasks are store in during the programme."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Constructs the taskList from an ArrayList of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param tasksList ArrayList of tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasksList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        this.tasks \u003d tasksList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Constructs empty TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Adds a task into the TaskList."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param task task to be added into TaskList"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Removes a task from the TaskList with index corresponding to the parameter."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param index index of task to be removed from TaskList"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Returns a task with the specified index."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param index index of task to be returned"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @return Task with specified index"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Returns the number of Task in the TaskList."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @return number of Tasks in the TaskList"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * returns the TaskList in ArrayList format."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @return ArrayList of Tasks"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Searches the TaskList for any Task that contains the toSearch String and"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * returns a TaskList containing all these Tasks."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @param toSearch substring to be searched"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @return a TaskList of tasks with the toSearch substring"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public TaskList search(String toSearch) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            if (task.contains(toSearch)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                matchingTask.add(task);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return new TaskList(matchingTask);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * Returns the list of Tasks to be printed."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     * @return String of the list of task"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        StringBuilder toReturnBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        int length \u003d tasks.size();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        for (int i \u003d 0; i \u003c length; i++) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            int index \u003d i + 1;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            toReturnBuilder.append(index + \".\" + tasks.get(i) + \"\\n\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        return toReturnBuilder.toString();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 116
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 19
    }
  },
  {
    "path": "src/test/java/duke/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    String expectedToFile \u003d \"T | 0 | Ride a bike\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    String expectedToString \u003d \"[T][✓] Slept well\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public void testToString(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        Task task \u003d new Task(\" Slept well\", true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        assertEquals(expectedToString, task.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public void setExpectedToFile(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        Task task \u003d new Task(\" Ride a bike\", false);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        assertEquals(expectedToFile, task.toFile());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 27
    }
  },
  {
    "path": "src/test/java/duke/formats/DateTimeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "package duke.formats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "public class DateTimeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    String expectedToString \u003d \" 18th of September 1997, 8.00am\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    public void testToString(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        DateTime dateTime \u003d new DateTime(\"18/09/1997 0800\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "        assertEquals(expectedToString, dateTime.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 16
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "﻿Hello! I\u0027m"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "  [T][✗] borrow book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "  [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "  [E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "1.[T][✗] borrow book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "2.[D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "3.[E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "  [D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "1.[T][✗] borrow book"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "2.[D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "3.[E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 28
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "java -classpath ..\\src\\main\\java Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khairulazman1997"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "khairulazman1997": 23
    }
  }
]
