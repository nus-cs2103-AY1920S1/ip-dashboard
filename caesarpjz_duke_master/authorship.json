[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        String date \u003d formatDate(by);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        if (getIsCorrectFormat()) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            return \"[D]\" + super.toString() + description + \" (by: \" + date + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            return \"Invalid date format!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caesarpjz": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public Duke(String filepath) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        } catch (DukeException | FileNotFoundException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        ui.greeting();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        ui.nextCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public static void main(String[] args) throws IOException{"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        new Duke(\"todo.txt\").run();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caesarpjz": 30,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caesarpjz": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    protected String when;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    protected boolean isValid;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public Event(String description, String when) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        this.when \u003d when;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        String date \u003d formatDate(when);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        if (getIsCorrectFormat()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            return \"[E]\" + super.toString() + description + \" (at: \" + date + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            return \"Invalid date format!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caesarpjz": 24
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caesarpjz": 2
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    protected static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    protected static String file \u003d \"todo.txt\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public Storage(String file) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * Adds tasks to the file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * @param filepath File that the task is added to."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * @param textToAdd Tasks that needs to be added."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * @throws IOException If the named file exists but is a directory rather than a regular file,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * does not exist but cannot be created, or cannot be opened for any other reason"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public static void addToFile(String filepath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            FileWriter typer \u003d new FileWriter(filepath, true);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            typer.write(textToAdd + System.lineSeparator());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            typer.close();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * Writes task to a file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * Can be used as a way to overwrite tasks in the file as well."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * @param filepath File that the task is added to."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * @param textToAdd Tasks that needs to be added."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * @throws IOException If the named file exists but is a directory rather than a regular file,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * does not exist but cannot be created, or cannot be opened for any other reason."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public static void writeToFile(String filepath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        FileWriter typer \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        typer.write(textToAdd);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        typer.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * Counts the number of tasks in the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * @param filename File that the tasks are in."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * @return Returns the number of tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * @throws IOException If the named file exists but is a directory rather than a regular file,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * does not exist but cannot be created, or cannot be opened for any other reason."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public static int countLines(String filename) throws IOException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        try (InputStream inputs \u003d new BufferedInputStream(new FileInputStream(filename))) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            byte[] characters \u003d new byte[1024];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            int readCharacters \u003d inputs.read(characters);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            if (readCharacters \u003d\u003d -1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                // no lines to read"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                return 0;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            int count \u003d 0;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            while (readCharacters \u003d\u003d 1024) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                for (int i \u003d 0; i \u003c 1024; ) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                    if (characters[i++] \u003d\u003d \u0027\\n\u0027) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        ++count;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                readCharacters \u003d inputs.read(characters);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            // count remaining characters"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            while (readCharacters !\u003d -1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                //System.out.println(readCharacters);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                for (int i \u003d 0; i \u003c readCharacters; ++i) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                    if (characters[i] \u003d\u003d \u0027\\n\u0027) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        ++count;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                readCharacters \u003d inputs.read(characters);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            return count \u003d\u003d 0 ? 1 : count;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException, DukeException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        File f \u003d new File(file);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        ArrayList\u003cTask\u003e tempList;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        if (countLines(file) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            throw new DukeException(\"Woah! There is nothing in this file!\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                String task \u003d sc.nextLine();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                String taskType \u003d task.substring(1, 2);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        Task toDo \u003d new Todo(task.substring(7));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        taskList.add(toDo);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        int byIndex \u003d task.indexOf(\"(\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        Task deadline \u003d new Deadline(task.substring(7, byIndex - 1), task.substring(byIndex + 5));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        taskList.add(deadline);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        int atIndex \u003d task.indexOf(\"(\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        Task event \u003d new Event(task.substring(7, atIndex - 1), task.substring(atIndex + 5));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        taskList.add(event);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            System.out.println(\"Your file has been loaded! :)\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            tempList \u003d new ArrayList\u003cTask\u003e(taskList);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            return tempList;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caesarpjz": 118
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    protected boolean isCorrectFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        this.isCorrectFormat \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public boolean getIsCorrectFormat() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        return isCorrectFormat;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * Returns tick or cross symbol."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * @return A tick or cross to symbolize whether the task has been done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        //System.out.println(\"\\u2713\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * Method to mark the task to done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * Prints a statement informing the user that the bot"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * has added the task into the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public static void printGI() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        //Ui temp \u003d new Ui();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        Ui.printLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        Ui.printIndent();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * Prints the number of tasks in the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * @throws IOException If the named file exists but is a directory rather than a regular file,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * does not exist but cannot be created, or cannot be opened for any other reason."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public static void printNumOfTasks() throws IOException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        Ui.printIndent();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        System.out.println(\"Now you have \" + Ui.getNumOfTasks() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        Ui.printLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * Prints a statement to tell the user that the task has been removed."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public static void printRemove() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        Ui.printLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        Ui.printIndent();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public String formatDate(String date) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        String formatted \u003d date;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            Date d \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\").parse(date);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            String day \u003d new SimpleDateFormat(\"dd\").format(d);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            String month \u003d new SimpleDateFormat(\"MMMMMMMMMMMMMMM\").format(d);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            String year \u003d new SimpleDateFormat(\"yyyy\").format(d);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            String time \u003d new SimpleDateFormat(\"h:mm a\").format(d).toLowerCase();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            String endOfDate;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            int dayInteger \u003d Integer.parseInt(day);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            if (dayInteger % 10 \u003d\u003d 1 \u0026\u0026 dayInteger !\u003d 11) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                endOfDate \u003d \"st\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            } else if (dayInteger % 10 \u003d\u003d 2 \u0026\u0026 dayInteger !\u003d 12) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                endOfDate \u003d \"nd\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            } else if (dayInteger % 10 \u003d\u003d 3 \u0026\u0026 dayInteger !\u003d 13) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                endOfDate \u003d \"rd\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                endOfDate \u003d \"th\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            isCorrectFormat \u003d true;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            formatted \u003d dayInteger + endOfDate + \" of \" + month + \" \" + year + \", \" + time;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            Ui.printIndent();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            System.out.println(\"That is the wrong date format! \u003e:-(\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        return formatted;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caesarpjz": 102
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    protected static ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    //protected static String file \u003d \"todo.txt\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        listOfTasks \u003d list;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caesarpjz": 16
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    //protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        //this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        return \"[T]\" + super.toString() + \" \" + description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caesarpjz": 14
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    protected Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    protected TaskList tL \u003d new TaskList();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public void greeting() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        String logo \u003d \"     ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                    + \"    |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                    + \"    | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                    + \"    | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                    + \"    |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        // Prints out greeting of the chat bot."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        printIndent();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        System.out.println(\"Hello! My name is \\n\" + logo + \"\\n\" + \"    What can I do for you? \\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        printIndent();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        System.out.println(\"I can only do these functions for now: \\n \\n\" + \"  Todo \\n\" + \"  Event \\n\" + \"  Deadline \\n\" + \"  Delete \\n\" + \"  Done \\n\" + \"  List \\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        printIndent();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        System.out.println(\"Ill be adding in more features soon! Please be patient! :)\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        printIndent();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        System.out.println(\"I can only accept dates in this following format: \\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                \"    dd/MM/yyyy hhmm. Please adhere to it! Thank you!\" );"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public void nextCommand() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        while (scan.hasNext()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                String text \u003d scan.nextLine().trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                if (text.equals(\"bye\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                    printBye();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                } else if (text.equals(\"list\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                    printList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                } else if (text.equals(\"delete all\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                    deleteAll();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                } else if (text.indexOf(\" \") \u003e -1) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                    String[] splittedText \u003d text.split(\" \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                    if (splittedText[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        int num \u003d text.indexOf(\" \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(text.substring(num + 1, num + 2));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        if (taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c\u003d TaskList.listOfTasks.size()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            printDone(taskNumber);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            //tasking[num] \u003d arrayList.get((taskNumber - 1));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! There is no such task number in your list of tasks!! \" +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                                    \"Please enter a valid number!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                    } else if (splittedText[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        int num \u003d text.indexOf(\" \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(text.substring(num + 1, num + 2));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        Task.printRemove();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        printDelete(taskNumber);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        TaskList.listOfTasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        Storage.writeToFile(Storage.file, \"\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        for (Task task : TaskList.listOfTasks) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            Storage.addToFile(Storage.file, task.toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        Task.printNumOfTasks();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        if (splittedText[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            Task.printGI();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            printIndent();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            int num \u003d text.indexOf(\" \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            Task task \u003d new Todo(text.substring(num + 1));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            System.out.println(\"  \" + task.toString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            TaskList.listOfTasks.add(task);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            Storage.addToFile(Storage.file, task.toString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            Task.printNumOfTasks();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        } else if (splittedText[0].equals(\"deadline\") \u0026\u0026"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                                text.contains(\"/\") \u0026\u0026 text.contains(\"by\")) { // what if there is no deadline"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            int num \u003d text.indexOf(\"/\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            int num1 \u003d text.indexOf(\" \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            Task task \u003d new Deadline(text.substring(num1, num - 1),"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                                    text.substring(num + 4));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            String taskers \u003d task.toString();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            if (!taskers.equals(\"Invalid date format!\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                                Task.printGI();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                                printIndent();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                                System.out.println(\"  \" + taskers);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                                TaskList.listOfTasks.add(task);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                                Storage.addToFile(Storage.file, taskers);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                                Task.printNumOfTasks();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                                printIndent();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                                throw new DukeException(taskers);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        } else if (splittedText[0].equals(\"event\") \u0026\u0026"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                                text.contains(\"/\") \u0026\u0026 text.contains(\"at\")) { // what if there is no date"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            int num \u003d text.indexOf(\"/\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            int num1 \u003d text.indexOf(\" \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            Task task \u003d new Event(text.substring(num1, num - 1),"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                                    text.substring(num + 4));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            String taskers \u003d task.toString();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            if (!taskers.equals(\"Invalid date format!\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                                Task.printGI();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                                printIndent();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                                System.out.println(\"  \" + taskers);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                                TaskList.listOfTasks.add(task);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                                Storage.addToFile(Storage.file, taskers);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                                Task.printNumOfTasks();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                                printIndent();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                                throw new DukeException(taskers);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            printLine();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            printIndent();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            throw new DukeException(\"☹ OOPSY DAISY!!! Please follow the correct format! :\u003c\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                    printLine();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                    printIndent();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                    switch (text) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        case \"todo\":"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty. \" +"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                                    \"It must be in proper format (i.e. todo clean table).\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        case \"deadline\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty. \" +"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                                    \"It must be in proper format (i.e. deadline return book /by 23 Aug).\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        case \"event\":"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty. \" +"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                                    \"It must be in proper format (i.e. event Don\u0027s birthday /at 15 Jan 3pm).\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * Prints indentation."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * Helps to order the output, making it much neater."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public static void printIndent() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        System.out.print(\"    \");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    // Prints the line. For better organisation."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * Prints line."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * Helps to order the output and makes it"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * much neater."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        printIndent();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        System.out.println(\"___________________________________________________________________\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * Ends the chat bot."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    private static void printBye() {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        printIndent();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * Marks a task as done once the user has finished it."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * @param i To indicate which task number is done."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    private static void printDone(int i) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        TaskList.listOfTasks.get(i-1).markAsDone();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        printIndent();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        printIndent();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        System.out.println(TaskList.listOfTasks.get(i-1).toString());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * To remove a task if it is not needed anymore."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * @param i Indicates the task number that is done."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    private static void printDelete(int i) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        printIndent();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        System.out.println(TaskList.listOfTasks.get(i-1).toString());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * Prints the list of tasks that has been added by the user."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * @throws FileNotFoundException if there is no such file that contains the tasks."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    private static void printList() throws FileNotFoundException {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        printIndent();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        if (TaskList.listOfTasks.isEmpty()) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            System.out.println(\"There is no tasks in your list currently!!!\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            File temp \u003d new File(Storage.file);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            Scanner s \u003d new Scanner(temp);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            int numbering \u003d 1;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                printIndent();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                System.out.println(numbering + \". \" + s.nextLine());"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "                numbering++;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * Deletes everything off the task list."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * @throws IOException If the named file exists but is a directory rather than a regular file,"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * does not exist but cannot be created, or cannot be opened for any other reason."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    private static void deleteAll() throws IOException{"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        Storage.writeToFile(Storage.file, \"\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        TaskList.listOfTasks.clear();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        printIndent();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        System.out.println(\"Everything in your list has been removed! Add more tasks to get started again!!!\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * Gets the number of task inside the file."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * @return Number of tasks."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * @throws IOException If the named file exists but is a directory rather than a regular file,"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     * does not exist but cannot be created, or cannot be opened for any other reason."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public static int getNumOfTasks() throws IOException {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        return Storage.countLines(Storage.file);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        printIndent();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "        System.out.println(\"Nothing in file!\");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "caesarpjz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "caesarpjz": 261
    }
  }
]
