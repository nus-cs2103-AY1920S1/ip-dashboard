[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "test {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 22,
      "-": 19
    }
  },
  {
    "path": "src/main/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "1.[T][✘] read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "2.[D][✓] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "3.[D][✘] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "4.[E][✘] project meeting (at: Sun, 15 Dec 2019 18:00:00)"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 4
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " * The one and only Duke!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " * (Essentially a to do list...)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Initialise duke with file path. This file path will be used for storage."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param filePath File Path"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        } catch (FileNotFoundException | ParseException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Main method."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        new Duke(\"../data/duke.txt\").run();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Driver method."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        boolean exit \u003d false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        while (!exit) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "                command \u003d Parser.parse(sc.nextLine());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "                command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "                exit \u003d command.isExit();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "                ui.showMessage(e.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 60,
      "-": 4
    }
  },
  {
    "path": "src/main/java/PrePush.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "#!/bin/bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "echo \"Running integrated tests...\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "./TestScript.sh"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "echo \"Checking formatting...\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "../../gradlew checkstyleMain checkstyleTest"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 7
    }
  },
  {
    "path": "src/main/java/Test/Expected.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "1.[T][✘] read book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "2.[D][✘] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "3.[D][✘] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "4.[E][✘] project meeting (at: Sun, 15 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "[T][✘] read book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "[D][✘] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "[E][✘] project meeting (at: Sun, 15 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "1.[T][✘] read book"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "2.[D][✘] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "3.[D][✘] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "4.[E][✘] project meeting (at: Sun, 15 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "5.[T][✘] read book"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "6.[D][✘] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "7.[E][✘] project meeting (at: Sun, 15 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "[D][✓] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "1.[T][✘] read book"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "2.[D][✓] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "3.[D][✘] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "4.[E][✘] project meeting (at: Sun, 15 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "5.[T][✘] read book"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "6.[D][✘] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "7.[E][✘] project meeting (at: Sun, 15 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "[D][✘] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "1.[T][✘] read book"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "2.[D][✓] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "3.[E][✘] project meeting (at: Sun, 15 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "4.[T][✘] read book"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "5.[D][✘] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "6.[E][✘] project meeting (at: Sun, 15 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "☹ OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 73
    }
  },
  {
    "path": "src/main/java/Test/Input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "find book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "deadline do homework /by 2/12/2019 1800"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "event project meeting /at 15/12/2019 1800"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "nothing"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 12
    }
  },
  {
    "path": "src/main/java/Test/Output.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "1.[T][✘] read book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "2.[D][✘] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "3.[D][✘] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "4.[E][✘] project meeting (at: Sun, 15 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "[T][✘] read book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "[D][✘] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "[E][✘] project meeting (at: Sun, 15 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "1.[T][✘] read book"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "2.[D][✘] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "3.[D][✘] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "4.[E][✘] project meeting (at: Sun, 15 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "5.[T][✘] read book"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "6.[D][✘] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "7.[E][✘] project meeting (at: Sun, 15 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "[D][✓] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "1.[T][✘] read book"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "2.[D][✓] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "3.[D][✘] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "4.[E][✘] project meeting (at: Sun, 15 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "5.[T][✘] read book"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "6.[D][✘] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "7.[E][✘] project meeting (at: Sun, 15 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "[D][✘] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "1.[T][✘] read book"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "2.[D][✓] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "3.[E][✘] project meeting (at: Sun, 15 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "4.[T][✘] read book"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "5.[D][✘] do homework (by: Mon, 2 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "6.[E][✘] project meeting (at: Sun, 15 Dec 2019 18:00:00)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "☹ OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 73
    }
  },
  {
    "path": "src/main/java/TestScript.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "#!/bin/bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "echo \"Changing to correct directory...\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "cd /Users/larrylaw/Learn/Uni/Y2S1/CS2103/duke/src/main/java;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "echo \"Compiling all java files in this directory...\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "if ! javac $(find . -name \u0027*.java\u0027);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "then"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    echo \"Compilation Failed\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    exit 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "else"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    echo \"Compiled java files successfully\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "# For each input, generate its output, and chk its diff"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "echo \"Checking Output.txt against Expected.txt...\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "java Duke \u003c Test/Input.txt \u003e Test/Output.txt"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "colordiff Test/Output.txt Test/Expected.txt"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 18
    }
  },
  {
    "path": "src/main/java/duke/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " * Bye command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Shows Bye message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param tasks   tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param ui      ui"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param storage storage"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        ui.showByeMessage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Exits."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @return true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 32
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " * Abstract commmand class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Executes command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param toDoList to do list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param ui       ui"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param storage  storage"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public abstract void execute(TaskList toDoList, UI ui, Storage storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Determines if command exits."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 27
    }
  },
  {
    "path": "src/main/java/duke/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " * Deadline command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    Deadline dl;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Initialise with deadline task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param dl deadline"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public DeadlineCommand(Deadline dl) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        this.dl \u003d dl;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Adds deadline to Task List and saves it in Storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param tasks   tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param ui      ui"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param storage storage"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            String taskMessage \u003d tasks.addDeadline(dl);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            ui.showAddedMessage(taskMessage, tasks.getTasksSize());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            ui.showMessage(e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Does not exit."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 51
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " * Delete command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Initialises with index of task to be deleted."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param index index"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Deletes task and updates Storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param tasks   tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param ui      ui"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param storage storage"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            String taskMessage \u003d tasks.delete(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            ui.showDeleteMessage(taskMessage, tasks.getTasksSize());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            ui.showMessage(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Does not exit."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 50
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " * Done command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Initialises with index of task to be set done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param i index"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public DoneCommand(int i) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        this.index \u003d i;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Updates task in index as done and updates Storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param tasks   tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param ui      ui"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param storage storage"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            String taskMessage \u003d tasks.done(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            ui.showDoneMessage(taskMessage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            ui.showMessage(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Does not exit."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 50
    }
  },
  {
    "path": "src/main/java/duke/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " * Event command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    Event event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Initialise with event task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param e event"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public EventCommand(Event e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        this.event \u003d e;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Adds event to Task List and saves it in Storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param tasks   tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param ui      ui"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param storage storage"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            String taskMessage \u003d tasks.addEvent(event);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            ui.showAddedMessage(taskMessage, tasks.getTasksSize());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            ui.showMessage(e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Does not exit."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 50
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    String kw;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public FindCommand(String kw) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        this.kw \u003d kw;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        String taskMessage \u003d tasks.find(kw);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        ui.showFoundMessage(taskMessage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 23
    }
  },
  {
    "path": "src/main/java/duke/commands/IllegalCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " * Illegal command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "public class IllegalCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Shows illegal command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param tasks   tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param ui      ui"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param storage storage"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        ui.showIllegalCommandMessage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Does not exit."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 32
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " * List command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Shows list of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param tasks   tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param ui      ui"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param storage storage"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        ui.showMessage(ui.padMessage(tasks.getTasks()));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Does not exit."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 32
    }
  },
  {
    "path": "src/main/java/duke/commands/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " * To Do command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "public class ToDoCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    ToDo td;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Initialise with To Do task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param td To Do"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public ToDoCommand(ToDo td) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        this.td \u003d td;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Adds To Do to Task List and saves it in Storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param tasks   tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param ui      ui"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param storage storage"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            String taskMessage \u003d tasks.addToDo(td);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            ui.showAddedMessage(taskMessage, tasks.getTasksSize());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            ui.showMessage(e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Does not exit."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 51
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " * Parser breaks down input string into relevant data structures to be used."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " * Parser detects and reports any syntax errors."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    private static final String emptyToDoErrorMessage \u003d \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            + \"\\u2639 OOPS!!! The description of a todo cannot be empty.\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Parses full command string and outputs relevant command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param fullCommand Full Command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @return Command"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @throws IllegalArgumentException Command is not valid"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @throws ParseException Parsing error"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public static Command parse(String fullCommand) throws IllegalArgumentException, ParseException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        String task;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        Date date;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        String format \u003d \"dd/MM/yyyy HHmm\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        SimpleDateFormat readFormat \u003d new SimpleDateFormat(format);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        String[] arr \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        String commandType \u003d arr[0];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            command \u003d new ListCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            command \u003d new ByeCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            if (arr.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "                command \u003d new ToDoCommand(new ToDo(arr[1]));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "                throw new IllegalArgumentException(emptyToDoErrorMessage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            task \u003d arr[1].split(\"/by\")[0].trim();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            date \u003d readFormat.parse(arr[1].split(\"/by\")[1].trim());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            command \u003d new DeadlineCommand(new Deadline(task, date));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            task \u003d arr[1].split(\"/at\")[0].trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            date \u003d readFormat.parse(arr[1].split(\"/at\")[1].trim());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            command \u003d new EventCommand(new Event(task, date));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            i \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            command \u003d new DoneCommand(i);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            i \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            command \u003d new DeleteCommand(i);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            command \u003d new FindCommand(arr[1]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            command \u003d new IllegalCommand();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Parses full task string and returns a task instance."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param fullTask Full Task"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @return task"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @throws ParseException Parsing Error"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    //TODO: task initialised hard coded"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public static Task parseTask(String fullTask) throws ParseException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"EEE, d MMM yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        char taskType \u003d fullTask.charAt(3);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        boolean done \u003d (fullTask.charAt(6) + \"\").equals(\"\\u2713\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        String task;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        String dateString;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        Date date;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        case \u0027T\u0027:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            task \u003d fullTask.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            t \u003d new ToDo(task, done);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        case \u0027D\u0027:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            task \u003d fullTask.split(\" \", 2)[1].split(\"\\\\(by:\")[0].trim();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            dateString \u003d fullTask.split(\" \", 2)[1].split(\"\\\\(by:\")[1].trim().replace(\")\", \"\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            date \u003d sdf.parse(dateString); // remove trailing bracket"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            t \u003d new Deadline(task, date);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        case \u0027E\u0027:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            task \u003d fullTask.split(\" \", 2)[1].split(\"\\\\(at:\")[0].trim();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            dateString \u003d fullTask.split(\" \", 2)[1].split(\"\\\\(at:\")[1].trim().replace(\")\", \"\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            date \u003d sdf.parse(dateString); // remove trailing bracket"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            t \u003d new Event(task, date);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            t \u003d new Task(\"\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 120
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Initialises Storage with specified filepath."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param filePath File Path"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Saves tasks in specified path."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param tasks tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @throws IOException IO exception"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void save(String tasks) throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        fw.write(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Returns tasks as a list from file path."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @return List of tasks"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @throws FileNotFoundException File not found"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @throws ParseException parse exception"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public List\u003cTask\u003e load() throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        List\u003cTask\u003e tl \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            t \u003d Parser.parseTask(s.nextLine());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            tl.add(t);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return tl;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 60
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.util.StringJoiner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " * Task List."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Initialises with given list of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param tl to do list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public TaskList(List\u003cTask\u003e tl) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        tasks \u003d tl;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Initialises with empty list of task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Sets task at specified index of To Do List as done and returns it (one based numbering)."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param i Index"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @return Task at specified index."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public String done(int i) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        tasks.get(i - 1).setDone(true);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return tasks.get(i - 1).toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Delete index of To Do List. (one based numbering)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param i Index"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @return Deleted task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public String delete(int i) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        String taskMessage \u003d tasks.get(i - 1).toString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        tasks.remove(i - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return taskMessage;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Appends task to To Do List. (one based numbering)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param td ToDo"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @return message to print"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public String addToDo(ToDo td) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        tasks.add(td);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return tasks.get(tasks.size() - 1).toString();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Appends and returns deadline to To Do List. (one based numbering)."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param dl deadline"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @return message to print"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public String addDeadline(Deadline dl) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        tasks.add(dl);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return tasks.get(tasks.size() - 1).toString();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Appends and returns event to To Do List. (one based numbering)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param e Event"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @return message to print"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public String addEvent(Event e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        tasks.add(e);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return tasks.get(tasks.size() - 1).toString();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Get Task size."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @return task size"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public int getTasksSize() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Get tasks as a string."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @return tasks"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public String getTasks() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        StringJoiner result \u003d new StringJoiner(\"\\n\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            result.add(String.format(\"%d.%s\", i + 1, t));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return result.toString();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Finds tasks based on keyword."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param kw keyword"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @return tasks"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public String find(String kw) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        StringJoiner result \u003d new StringJoiner(\"\\n\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            if (t.toString().contains(kw)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "                result.add(String.format(\"%d.%s\", i + 1, t));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return result.toString();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 130
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    Date date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public Deadline(String task, Date date) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    Deadline(String task, Boolean done, Date date) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        super(task, done);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"EEE, d MMM yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        String iconForDone \u003d done ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return String.format(\"[D][%s] %s (by: %s)\", iconForDone, this.task, sdf.format(this.date));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 25
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " * Event task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    Date date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Initialises Event with task and date."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param task task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param date date"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public Event(String task, Date date) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Initialises Event with task, date, and status."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param task task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param done done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param date date"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    Event(String task, Boolean done, Date date) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        super(task, done);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"EEE, d MMM yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        String iconForDone \u003d done ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return String.format(\"[E][%s] %s (at: %s)\", iconForDone, this.task, sdf.format(this.date));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 41
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " * Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    boolean done;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    String task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Initialises Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param task task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Initialises Task with specified status."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param task task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public Task(String task, Boolean done) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Set status."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param status status"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void setDone(boolean status) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        this.done \u003d status;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        String iconForDone \u003d done ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return String.format(\"[%s] %s\", iconForDone, this.task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 44
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " * To Do task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Initialises To Do with specified task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param task task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public ToDo(String task) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Initialises To Do with specified task and its status."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param task task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param done done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public ToDo(String task, Boolean done) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        super(task, done);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        String iconForDone \u003d done ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return String.format(\"[T][%s] %s\", iconForDone, this.task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 32
    }
  },
  {
    "path": "src/main/java/duke/ui/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.util.StringJoiner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " * Prints messages for client."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Shows welcome message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        StringJoiner sj \u003d new StringJoiner(\"\\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        String logo \u003d \" ____        _        \\n\" + \"|  _ \\\\ _   _| | _____ \\n\" + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        sj.add(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        sj.add(\"What can I do for you?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        showMessage(sj.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Shows bye message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void showByeMessage() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        String exitMessage \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        showMessage(padMessage(exitMessage));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Shows done message."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param taskMessage done task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void showDoneMessage(String taskMessage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        String doneMessage \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        StringJoiner result \u003d new StringJoiner(\"\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        result.add(doneMessage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        result.add(taskMessage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        showMessage(padMessage(result.toString()));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Shows deleted message."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param taskMessage deleted task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param tasksSize task size after deletion"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void showDeleteMessage(String taskMessage, int tasksSize) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        String deleteMessage \u003d \"Noted. I\u0027ve removed this task: \";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        StringJoiner result \u003d new StringJoiner(\"\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        result.add(deleteMessage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        result.add(taskMessage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        result.add(String.format(\"Now you have %d tasks in the list.\", tasksSize));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        showMessage(padMessage(result.toString()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Shows added message."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param taskMessage added task"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param tasksSize task size after adding"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void showAddedMessage(String taskMessage, int tasksSize) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        String addedMessage \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        StringJoiner result \u003d new StringJoiner(\"\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        result.add(addedMessage);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        result.add(taskMessage);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        result.add(String.format(\"Now you have %d tasks in the list.\", tasksSize));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        showMessage(padMessage(result.toString()));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Shows illegal command message."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void showIllegalCommandMessage() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        String illegalCommandMessage \u003d \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "                + \"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "                + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        showMessage(illegalCommandMessage);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Shows loading error."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        String loadingError \u003d \"\\u2639 OOPS!!! I\u0027m sorry, but file was not loaded :-(\\n\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        showMessage(padMessage(loadingError));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Show message."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param message message"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void showMessage(String message) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Show found message."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param taskMessage tasks found"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void showFoundMessage(String taskMessage) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        String foundMessage \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        StringJoiner result \u003d new StringJoiner(\"\\n\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        result.add(foundMessage);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        result.add(taskMessage);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        showMessage(padMessage(result.toString()));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Pads message with horizontal lines."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param message message"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @return padded message"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public String padMessage(String message) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        StringJoiner result \u003d new StringJoiner(\"\\n\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        result.add(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        result.add(message);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        result.add(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        return result.toString();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 123
    }
  },
  {
    "path": "src/test/java/duke/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " * Tests Parser class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    private Parser p;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        p \u003d new Parser();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Parses list command correctly."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @throws ParseException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void parse_listCommand() throws ParseException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        String input \u003d \"list\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        parseAndAssertCommandType(input, ListCommand.class);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Parses task string correctly."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @throws ParseException"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void parse_task() throws ParseException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        String input \u003d \"4.[E][\\u2718] project meeting (at: Sun, 15 Dec 2019 18:00:00)\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        parseTaskAndAssertTaskType(input, Event.class);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Parses input and asserts the class of the returned command."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param input                string to be parsed"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param expectedCommandClass expected class of returned command"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    private \u003cT extends Command\u003e void parseAndAssertCommandType(String input, Class\u003cT\u003e expectedCommandClass) throws ParseException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        Command result \u003d p.parse(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        assertTrue(result.getClass().isAssignableFrom(expectedCommandClass));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * Parses task and asserts the class of the returned task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param expectedCommandClass"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @param \u003cT\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     * @throws ParseException"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    private \u003cT extends Task\u003e void parseTaskAndAssertTaskType(String input, Class\u003cT\u003e expectedCommandClass) throws ParseException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        Task result \u003d p.parseTask(input);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        assertTrue(result.getClass().isAssignableFrom(expectedCommandClass));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 70
    }
  },
  {
    "path": "src/test/java/duke/tasklist/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    private TaskList t;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void setUp() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        t \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "larrylawl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    public void add_todo_correctly() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        ToDo td \u003d new ToDo(\"mock task\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        String result \u003d t.addToDo(td);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "        assertEquals(td.toString(), result);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "larrylawl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "larrylawl": 23
    }
  }
]
