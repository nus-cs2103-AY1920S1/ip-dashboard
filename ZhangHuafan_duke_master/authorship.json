[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    DELETE"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 8
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private LocalDateTime dueDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public Deadline(String description, LocalDateTime dueDateTime) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.dueDateTime \u003d dueDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public Deadline(String description, String dueDateTime, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.dueDateTime \u003d dueDateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public String getDueDateTime() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return dueDateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + formatter.format(dueDateTime) + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 25
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private static final String indentation \u003d \"     \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private static final String separator \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private static final String storagePath \u003d \"/Users/xiaoyu/duke/data/duke.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HH:mm\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private static Scanner scanner;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        final String welcomeSentence \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        final String endingSentence \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        System.out.println(showFormattedStr(welcomeSentence));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            readData();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            new File(storagePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        if (tasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                conductCommand(Command.LIST);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            } catch (DukeException de) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                System.out.println(showFormattedStr(de.getMessage()));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        String text \u003d scanner.next();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        while (!text.substring(0, 3).equals(\"bye\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                command \u003d readCommand(text);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                conductCommand(command);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            } catch (DukeException de) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                System.out.println(showFormattedStr(de.getMessage()));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            text \u003d scanner.next();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            writeData();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            System.out.println(showFormattedStr(\"☹ OOPS!!! We cannot store your data!\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        System.out.println(showFormattedStr(endingSentence));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private static String showFormattedStr(String str) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return separator + indentation + str.replace(\"\\n\", \"\\n\" + indentation) + \"\\n\" + separator;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private static String showFormattedList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        String formattedList \u003d separator;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        formattedList \u003d formattedList + indentation + \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            return showFormattedStr(\"Currently there is no task~\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            formattedList \u003d formattedList + indentation + i + \". \" + list.get(i - 1) + \"\\n\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        formattedList \u003d formattedList + separator;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return formattedList;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private static Command readCommand(String text) throws DukeException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            command \u003d Command.valueOf(text.toUpperCase());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private static void conductCommand(Command command) throws DukeException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        if (command \u003d\u003d Command.LIST) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            System.out.println(showFormattedList(tasks));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        } else if (command \u003d\u003d Command.DONE) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            Task doneTask \u003d tasks.get(scanner.nextInt() - 1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            doneTask.markDone();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            System.out.println(showFormattedStr(\"Nice! I\u0027ve marked this task as done:\\n\" + \"  \" + doneTask));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        } else if (command \u003d\u003d Command.DELETE) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            Task removedTask \u003d tasks.remove(scanner.nextInt() - 1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            System.out.println(showFormattedStr(\"Noted. I\u0027ve removed this task: \\n\" + \"  \" + removedTask"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\"));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            Task newTask;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            String description \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            if (command \u003d\u003d Command.TODO) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                String[] details;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                if (command \u003d\u003d Command.DEADLINE) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    details \u003d description.split(\" /by \");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    if (details.length !\u003d 2) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                        throw new DukeException (\"☹ OOPS!!! The description of a deadline is not enough.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    newTask \u003d new Deadline(details[0], LocalDateTime.parse(details[1],formatter));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    details \u003d description.split(\" /at \");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    if (details.length !\u003d 2) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                        throw new DukeException (\"☹ OOPS!!! The description of a event is not enough.\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    //format: /at 2/2/1999 12:00-14:00"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    String[] times \u003d details[1].split(\"-\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    newTask \u003d new Event(details[0], LocalDateTime.parse(times[0],formatter), LocalTime.parse(times[1]));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            tasks.add(newTask);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            System.out.println(showFormattedStr("
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                    \"Got it. I\u0027ve added this task:\\n\" + \"  \" + newTask"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                            + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\"));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private static void readData() throws FileNotFoundException{"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        scanner \u003d new Scanner(new File(storagePath));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            tasks.add(Task.from(scanner.nextLine()));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private static void writeData() throws IOException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(storagePath));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        String content \u003d \"\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            if (task instanceof Todo) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                content \u003d \"T|\" + task.getStatus() +  \"|\" + task.getDescription();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                Deadline dl \u003d (Deadline) task;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                content \u003d \"D|\" + task.getStatus() +  \"|\" + dl.getDescription() + \"|\" + dl.getDueDateTime();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                Event e \u003d (Event) task;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "                content \u003d \"E|\" + e.getStatus() + \"|\" + e.getDescription() + \"|\" + e.getDuration();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            writer.append(content + \"\\n\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 167,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public DukeException (String errorMessage) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private LocalDateTime startdateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    private LocalTime endTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public Event(String description, LocalDateTime startdateTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.startdateTime \u003d startdateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public Event(String description, String duration, boolean isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public String getDuration() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return duration;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + formatter.format(startdateTime) + \" - \" + endTime + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 29
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    static protected DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy, HH:mm\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    static Task from(String taskInfo) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        String[] taskInfos \u003d taskInfo.split(\"\\\\|\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        switch (taskInfos[0]) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            return new Todo(taskInfos[2], Boolean.parseBoolean(taskInfos[1]));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            return new Deadline(taskInfos[2], taskInfos[3], Boolean.parseBoolean(taskInfos[1]));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            return new Event(taskInfos[2], taskInfos[3], Boolean.parseBoolean(taskInfos[1]));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return new Task(taskInfos[2]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public boolean getStatus () {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 56
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 15
    }
  },
  {
    "path": "test/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    void main() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangHuafan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangHuafan": 10
    }
  }
]
