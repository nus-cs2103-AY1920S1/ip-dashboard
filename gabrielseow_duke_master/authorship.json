[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private String deadlineTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.deadlineTime \u003d deadlineTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + deadlineTime + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private static final String indent \u003d \"    \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public static void main(String[] args) throws DukeException{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        printGreetingMessage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        while(sc.hasNextLine()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String newTaskLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String[] newTaskSplit \u003d newTaskLine.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String taskType \u003d newTaskSplit[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            switch(taskType) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                printList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                printExitMessage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                int completedTaskNum \u003d Integer.parseInt(newTaskSplit[1]) - 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                Task completedTask \u003d tasks.get(completedTaskNum);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                printAndEvaluateTaskDone(completedTask);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    parseAndEvaluateEvent(newTaskSplit);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    addBorder(e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    parseAndEvaluateDeadline(newTaskSplit);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    addBorder(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    parseAndEvaluateToDo(newTaskSplit);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    addBorder(e.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    parseAndEvaluateDelete(newTaskSplit);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    addBorder(e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                addBorder(new DukeIllegalArgumentException().getMessage());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void addBorder(String input) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String border \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        System.out.print(border + \"\\n\" + input + \"\\n\" + border + \"\\n\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void printGreetingMessage() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        addBorder(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void printAndEvaluateTaskDone(Task completedTask) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        completedTask.taskComplete();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        addBorder(\"Nice! I\u0027ve marked this task as done: \\n\" + completedTask.toString());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void printExitMessage() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        addBorder(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    //Old unused method for adding generic tasks"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void addTask(String newTaskLine) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        Task newTask \u003d new Task(newTaskLine);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        tasks[tasksCount] \u003d newTask;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String output \u003d \"added: \" + newTask.toString();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        addBorder(output);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        tasksCount++;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void parseAndEvaluateDelete(String[] newTaskSplit) throws DukeException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        int newTaskLen \u003d newTaskSplit.length;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        if (newTaskLen \u003c 2) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            throw new DukeDeleteIllegalArgumentException(\"You have not entered a number for deletion\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } else if (newTaskLen \u003e 2) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            throw new DukeDeleteIllegalArgumentException(\"You have entered too many arguments for deletion\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                int deletionNum \u003d Integer.parseInt(newTaskSplit[1]) - 1;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                deleteTask(deletionNum);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                throw new DukeDeleteIllegalArgumentException(\"Please enter a valid number for deletion\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                throw new DukeDeleteIllegalArgumentException(\"Please enter a valid number within the range\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void deleteTask(int deletionNum) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        Task deletedTask \u003d tasks.remove(deletionNum);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String output \u003d \"Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                + deletedTask.toString()"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        addBorder(output);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void parseAndEvaluateToDo(String[] newTaskSplit) throws DukeException {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            int newTaskLen \u003d newTaskSplit.length;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String description \u003d newTaskSplit[1];"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            for (int i \u003d 2; i \u003c newTaskLen; i++) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                description +\u003d \" \" + newTaskSplit[i];"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            addToDo(new ToDo(description));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            throw new DukeToDoIllegalArgumentException();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void addToDo(ToDo newToDo) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        tasks.add(newToDo);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                + newToDo.toString()"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        addBorder(output);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void parseAndEvaluateDeadline(String[] newTaskSplit) throws DukeException {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            int newTaskLen \u003d newTaskSplit.length;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            boolean foundDeadline \u003d false;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String description \u003d newTaskSplit[1];"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String deadlineTime \u003d \"\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            for (int i \u003d 2; i \u003c newTaskLen; i++) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                if (foundDeadline) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    if (i \u003d\u003d newTaskLen - 1) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                        deadlineTime +\u003d newTaskSplit[i];"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                        deadlineTime +\u003d newTaskSplit[i] + \" \";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    if (newTaskSplit[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                        foundDeadline \u003d true;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                        description +\u003d \" \" + newTaskSplit[i];"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            if (foundDeadline) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                addDeadline(new Deadline(description, deadlineTime));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                throw new DukeDeadlineIllegalArgumentException(\"deadline\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            throw new DukeDeadlineIllegalArgumentException(\"description\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void addDeadline(Deadline newDeadline) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        tasks.add(newDeadline);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                + newDeadline.toString()"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        addBorder(output);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void parseAndEvaluateEvent(String[] newTaskSplit) throws DukeException {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        int newTaskLen \u003d newTaskSplit.length;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            boolean foundEvent \u003d false;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String description \u003d newTaskSplit[1];"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String eventTime \u003d \"\";"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            for (int i \u003d 2; i \u003c newTaskLen; i++) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                if (foundEvent) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    if (i \u003d\u003d newTaskLen - 1) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                        eventTime +\u003d newTaskSplit[i];"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                        eventTime +\u003d newTaskSplit[i] + \" \";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    if (newTaskSplit[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                        foundEvent \u003d true;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                        description +\u003d \" \" + newTaskSplit[i];"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            if (foundEvent) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                addEvent(new Event(description, eventTime));"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                throw new DukeEventIllegalArgumentException(\"timing\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            throw new DukeEventIllegalArgumentException(\"description\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void addEvent(Event newEvent) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        tasks.add(newEvent);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                + newEvent.toString()"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        addBorder(output);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    static void printList() {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String str \u003d \"\";"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        int numTasks \u003d tasks.size();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        for (int i \u003d 0; i \u003c numTasks; i++) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            String newTask \u003d tasks.get(i).toString();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            if (i \u003d\u003d numTasks - 1) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                str +\u003d (i + 1) + \". \" + newTask;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "                str +\u003d (i + 1) + \". \" + newTask + \"\\n\";"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        addBorder(str);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "gabrielseow": 230
    }
  },
  {
    "path": "src/main/java/DukeDeadlineIllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class DukeDeadlineIllegalArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public DukeDeadlineIllegalArgumentException(String fieldName) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(\"☹ OOPS!!! The \" + fieldName + \" of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 5
    }
  },
  {
    "path": "src/main/java/DukeDeleteIllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class DukeDeleteIllegalArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public DukeDeleteIllegalArgumentException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 5
    }
  },
  {
    "path": "src/main/java/DukeEventIllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class DukeEventIllegalArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public DukeEventIllegalArgumentException(String fieldName) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(\"☹ OOPS!!! The \" + fieldName + \" of an event cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 5
    }
  },
  {
    "path": "src/main/java/DukeIllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class DukeIllegalArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public DukeIllegalArgumentException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 5
    }
  },
  {
    "path": "src/main/java/DukeToDoIllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "class DukeToDoIllegalArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    DukeToDoIllegalArgumentException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private String eventTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public Event(String description, String eventTime) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + eventTime + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private boolean doneStatus;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        doneStatus \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public void taskComplete() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        doneStatus \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        if (doneStatus \u003d\u003d true) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            output \u003d \"[✓]\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "            output \u003d \"[✗]\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        output +\u003d \" \" + description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 26
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gabrielseow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gabrielseow": 12
    }
  }
]
