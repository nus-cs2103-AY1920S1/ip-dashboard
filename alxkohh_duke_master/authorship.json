[
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "D|1|eat|2/2/2019 2200"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 1
    }
  },
  {
    "path": "src/main/java/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    String inputDeadline \u003d \"\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void setInputDeadline(String inputDeadline) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.inputDeadline \u003d inputDeadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        if (inputDeadline.trim().length() \u003d\u003d 8) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int slashLocation \u003d slashLocator(inputDeadline);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int firstIndex \u003d slashLocation - 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int secondIndex \u003d slashLocation + 4;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String deadlineDescription \u003d inputDeadline.substring(9, firstIndex);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String deadlineBy \u003d inputDeadline.substring(secondIndex);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            Deadline d \u003d new Deadline(deadlineDescription, deadlineBy);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            tasks.addTaskAfterValidation(deadlineBy, d);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            storage.updateChanges(tasks.getDukeTaskList());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public int slashLocator(String inputString) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return inputString.indexOf(\"/\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 28
    }
  },
  {
    "path": "src/main/java/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    String inputEvent \u003d \"\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void setInputEvent(String inputEvent) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.inputEvent \u003d inputEvent;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        if (inputEvent.trim().length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int slashLocation \u003d slashLocator(inputEvent);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int firstIndex \u003d slashLocation - 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int secondIndex \u003d slashLocation + 4;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String eventDescription \u003d inputEvent.substring(6, firstIndex);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String eventAt \u003d inputEvent.substring(secondIndex);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            Event e \u003d new Event(eventDescription, eventAt);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            tasks.addTaskAfterValidation(eventAt, e);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            storage.updateChanges(tasks.getDukeTaskList());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public int slashLocator(String inputString) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return inputString.indexOf(\"/\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 28
    }
  },
  {
    "path": "src/main/java/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class AddTodoCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    String inputTodo \u003d \"\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void setInputTodo(String inputTodo) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.inputTodo \u003d inputTodo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        if (inputTodo.trim().length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String todoDescription \u003d inputTodo.substring(5);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            Todo t \u003d new Todo(todoDescription);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            tasks.addTask(t);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(t);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            storage.updateChanges(tasks.getDukeTaskList());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 24
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 5
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    protected LocalDateTime dateTimeBy \u003d null;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void setDateTimeBy(LocalDateTime dateTimeBy) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.dateTimeBy \u003d dateTimeBy;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String toTextFileString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return \"D|\" + super.toTextFileString() + \"|\" + by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 26
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    int indexToRemove \u003d -1;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void setIndexToRemove(int indexToRemove) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.indexToRemove \u003d indexToRemove;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        Task toBeRemoved \u003d tasks.getTask(indexToRemove);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        tasks.removeTask(indexToRemove);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        System.out.println(toBeRemoved);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        storage.updateChanges(tasks.getDukeTaskList());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 18
    }
  },
  {
    "path": "src/main/java/DisplayListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class DisplayListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        tasks.displayFullList();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alxkohh": 9
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    int indexToMarkDone \u003d -1;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void setIndexToMarkDone(int indexToMarkDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.indexToMarkDone \u003d indexToMarkDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void execute (TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        Task toBeMarkDone \u003d tasks.getTask(indexToMarkDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        toBeMarkDone.markAsDone();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        System.out.println(toBeMarkDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        storage.updateChanges(tasks.getDukeTaskList());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 17
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    private static ArrayList\u003cTask\u003e dukeList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    private static DateTimeFormatter dukeDateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    private static void loadSavedTasks(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String savedTask \u003d s.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String[] savedTaskSplit \u003d savedTask.split(\"\\\\|\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            if (savedTaskSplit[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                String description \u003d savedTaskSplit[2];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                Task todoTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                if (savedTaskSplit[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    todoTask.markAsDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                dukeList.add(todoTask);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else if (savedTaskSplit[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                String description \u003d savedTaskSplit[2];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                String at \u003d savedTaskSplit[3];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                Task eventTask \u003d new Event(description, at);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                if (savedTaskSplit[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    eventTask.markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                dukeList.add(eventTask);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                String description \u003d savedTaskSplit[2];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                String by \u003d savedTaskSplit[3];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                Task deadlineTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                if (savedTaskSplit[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    deadlineTask.markAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                dukeList.add(deadlineTask);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    private static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    private static void updateTaskList() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        String file \u003d \"data/taskList.txt\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            for (int i \u003d 0; i \u003c dukeList.size(); i++) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                if (i \u003d\u003d dukeList.size() - 1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    sb.append(dukeList.get(i).toTextFileString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    sb.append(dukeList.get(i).toTextFileString());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    sb.append(\"\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String content \u003d sb.toString();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            writeToFile(file, content);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        File f \u003d new File(\"data\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        f.mkdir();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            loadSavedTasks(\"data/taskList.txt\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        String initialMessage \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        System.out.println(initialMessage);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String[] inputSplit \u003d input.split(\" \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                displayDukeList();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else if (inputSplit[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                int inputIndex \u003d Integer.parseInt(inputSplit[1]);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                int actualListIndex \u003d inputIndex - 1;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                Task targetTask \u003d dukeList.get(actualListIndex);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                targetTask.markAsDone();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                System.out.println(targetTask);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                updateTaskList();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else if (inputSplit[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    handleInputTodo(input);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else if (inputSplit[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    handleInputDeadline(input);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else if (inputSplit[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    handleInputEvent(input);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else if (inputSplit[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                int inputIndex \u003d Integer.parseInt(inputSplit[1]);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                int actualIndex \u003d inputIndex - 1;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                Task toBeRemoved \u003d dukeList.get(actualIndex);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                System.out.println(toBeRemoved);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                dukeList.remove(actualIndex);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                System.out.println(\"Now you have \" + dukeList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                updateTaskList();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    handleInputUnrecognised(input);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public static void displayDukeList() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        for (int i \u003d 0; i \u003c dukeList.size(); i++) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int itemIndex \u003d i + 1;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String itemDisplay \u003d itemIndex + \".\" + dukeList.get(i).toString();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(itemDisplay);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public static int slashLocator(String sentence) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return sentence.indexOf(\"/\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public static void handleInputTodo(String inputTodo) throws DukeException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        if (inputTodo.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String todoDescription \u003d inputTodo.substring(5);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            Todo t \u003d new Todo(todoDescription);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            dukeList.add(t);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(t);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Now you have \" + dukeList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            updateTaskList();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public static void handleInputDeadline(String inputDeadline) throws DukeException {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        if (inputDeadline.length() \u003d\u003d 8) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int slashLocation \u003d slashLocator(inputDeadline);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int firstIndex \u003d slashLocation - 1;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int secondIndex \u003d slashLocation + 4;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String deadlineDescription \u003d inputDeadline.substring(9, firstIndex);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String deadlineBy \u003d inputDeadline.substring(secondIndex);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            Deadline d \u003d new Deadline(deadlineDescription, deadlineBy);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            addTaskToListAfterValidation(deadlineBy, d);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            updateTaskList();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public static void handleInputEvent(String inputEvent) throws DukeException {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        if (inputEvent.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int slashLocation \u003d slashLocator(inputEvent);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int firstIndex \u003d slashLocation - 1;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int secondIndex \u003d slashLocation + 4;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String eventDescription \u003d inputEvent.substring(6, firstIndex);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String eventAt \u003d inputEvent.substring(secondIndex);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            Event e \u003d new Event(eventDescription, eventAt);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            addTaskToListAfterValidation(eventAt, e);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            updateTaskList();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public static void handleInputUnrecognised(String inputUnrecognised) throws DukeException {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public static void addTaskToListAfterValidation(String dateTimeString, Task t) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeString, dukeDateTimeFormatter);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            if (t instanceof Event) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                Event e \u003d (Event) t;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                e.setDateTimeAt(dateTime);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                Deadline d \u003d (Deadline) t;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                d.setDateTimeBy(dateTime);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            dukeList.add(t);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(t);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Now you have \" + dukeList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Task not added to list because the input format for date and time is unrecognised. \" +"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    \"Please enter date and time in dd/MM/yyyy HHmm format.\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "*/"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String[] inputSplit \u003d input.split(\" \");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                ui.exit();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                tasks.displayFullList();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else if (inputSplit[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                int inputIndex \u003d Integer.parseInt(inputSplit[1]);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                int actualListIndex \u003d inputIndex - 1;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                Task targetTask \u003d tasks.getTask(actualListIndex);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                targetTask.markAsDone();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                System.out.println(targetTask);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                storage.updateChanges(tasks.getDukeTaskList());"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else if (inputSplit[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    handleInputTodo(input);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else if (inputSplit[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    handleInputDeadline(input);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else if (inputSplit[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    handleInputEvent(input);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else if (inputSplit[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                int inputIndex \u003d Integer.parseInt(inputSplit[1]);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                int actualIndex \u003d inputIndex - 1;"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                Task toBeRemoved \u003d tasks.getTask(actualIndex);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                System.out.println(toBeRemoved);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                tasks.removeTask(actualIndex);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                storage.updateChanges(tasks.getDukeTaskList());"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    handleInputUnrecognised(input);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public static int slashLocator(String sentence) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return sentence.indexOf(\"/\");"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void handleInputTodo(String inputTodo) throws DukeException {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        if (inputTodo.trim().length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String todoDescription \u003d inputTodo.substring(5);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            Todo t \u003d new Todo(todoDescription);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            tasks.addTask(t);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(t);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            storage.updateChanges(tasks.getDukeTaskList());"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void handleInputDeadline(String inputDeadline) throws DukeException {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        if (inputDeadline.trim().length() \u003d\u003d 8) {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int slashLocation \u003d slashLocator(inputDeadline);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int firstIndex \u003d slashLocation - 1;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int secondIndex \u003d slashLocation + 4;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String deadlineDescription \u003d inputDeadline.substring(9, firstIndex);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String deadlineBy \u003d inputDeadline.substring(secondIndex);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            Deadline d \u003d new Deadline(deadlineDescription, deadlineBy);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            tasks.addTaskAfterValidation(deadlineBy, d);"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            storage.updateChanges(tasks.getDukeTaskList());"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void handleInputEvent(String inputEvent) throws DukeException {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        if (inputEvent.trim().length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int slashLocation \u003d slashLocator(inputEvent);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int firstIndex \u003d slashLocation - 1;"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int secondIndex \u003d slashLocation + 4;"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String eventDescription \u003d inputEvent.substring(6, firstIndex);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String eventAt \u003d inputEvent.substring(secondIndex);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            Event e \u003d new Event(eventDescription, eventAt);"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            tasks.addTaskAfterValidation(eventAt, e);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            storage.updateChanges(tasks.getDukeTaskList());"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public static void handleInputUnrecognised(String inputUnrecognised) throws DukeException {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 355,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    protected LocalDateTime dateTimeAt \u003d null;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void setDateTimeAt(LocalDateTime dateTimeAt) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.dateTimeAt \u003d dateTimeAt;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String toTextFileString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return \"E|\" + super.toTextFileString() + \"|\" + at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 26
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 7
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public static Command parse (String input) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        String[] inputSplit \u003d input.split(\" \");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            return new DisplayListCommand();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else if (inputSplit[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int inputIndex \u003d Integer.parseInt(inputSplit[1]);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int actualIndex \u003d inputIndex - 1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            DeleteCommand delete \u003d new DeleteCommand();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            delete.setIndexToRemove(actualIndex);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            return delete;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else if (inputSplit[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int inputIndex \u003d Integer.parseInt(inputSplit[1]);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int actualIndex \u003d inputIndex - 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            DoneCommand done \u003d new DoneCommand();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            done.setIndexToMarkDone(actualIndex);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            return done;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else if (inputSplit[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            AddTodoCommand addTodo \u003d new AddTodoCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            addTodo.setInputTodo(input);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            return addTodo;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else if (inputSplit[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            AddEventCommand addEvent \u003d new AddEventCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            addEvent.setInputEvent(input);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            return addEvent;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else if (inputSplit[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            AddDeadlineCommand addDeadline \u003d new AddDeadlineCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            addDeadline.setInputDeadline(input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            return addDeadline;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            return new UnrecognisedInputCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 37
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    private String filePath \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        ArrayList\u003cTask\u003e outputList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                String savedTask \u003d s.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                String[] savedTaskSplit \u003d savedTask.split(\"\\\\|\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                if (savedTaskSplit[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    String description \u003d savedTaskSplit[2];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    Task todoTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    if (savedTaskSplit[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                        todoTask.markAsDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    outputList.add(todoTask);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                } else if (savedTaskSplit[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    String description \u003d savedTaskSplit[2];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    String at \u003d savedTaskSplit[3];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    Task eventTask \u003d new Event(description, at);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    if (savedTaskSplit[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                        eventTask.markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    outputList.add(eventTask);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    String description \u003d savedTaskSplit[2];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    String by \u003d savedTaskSplit[3];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    Task deadlineTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    if (savedTaskSplit[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                        deadlineTask.markAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    outputList.add(deadlineTask);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            throw new DukeException(\"File not found\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            return outputList;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    private void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void updateChanges(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                if (i \u003d\u003d list.size() - 1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    sb.append(list.get(i).toTextFileString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    sb.append(list.get(i).toTextFileString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    sb.append(\"\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String content \u003d sb.toString();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            writeToFile(content);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 82
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        String output \u003d \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String toTextFileString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        String status \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        if (this.isDone \u003d\u003d true) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            status \u003d \"1|\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            status \u003d \"0|\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        String output \u003d status + this.getDescription();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 38
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    private static DateTimeFormatter dukeDateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    private ArrayList\u003cTask\u003e dukeTaskList \u003d null;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e dukeTaskList) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.dukeTaskList \u003d dukeTaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        this.dukeTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void addTask(Task toAdd) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        dukeTaskList.add(toAdd);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void deleteTask(Task toDelete) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        dukeTaskList.remove(toDelete);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return dukeTaskList.get(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public Task removeTask(int index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return dukeTaskList.remove(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public ArrayList\u003cTask\u003e getDukeTaskList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return dukeTaskList;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return dukeTaskList.size();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void addTaskAfterValidation(String dateTimeString, Task t) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeString, dukeDateTimeFormatter);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            if (t instanceof Event) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                Event e \u003d (Event) t;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                e.setDateTimeAt(dateTime);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                Deadline d \u003d (Deadline) t;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                d.setDateTimeBy(dateTime);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            addTask(t);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(t);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Now you have \" + dukeTaskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(\"Task not added to list because the input format for date and time is unrecognised. \" +"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "                    \"Please enter date and time in dd/MM/yyyy HHmm format.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void displayFullList() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        for (int i \u003d 0; i \u003c dukeTaskList.size(); i++) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            int itemIndex \u003d i + 1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            String itemDisplay \u003d itemIndex + \".\" + dukeTaskList.get(i).toString();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "            System.out.println(itemDisplay);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alxkohh": 75
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public String toTextFileString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return \"T|\" + super.toTextFileString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 16
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        System.out.println(\"Loading Error\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        String initialMessage \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        System.out.println(initialMessage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 16
    }
  },
  {
    "path": "src/main/java/UnrecognisedInputCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "public class UnrecognisedInputCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alxkohh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alxkohh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alxkohh": 7
    }
  }
]
