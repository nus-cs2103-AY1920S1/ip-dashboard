[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "T | 0 | sleep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "T | 1 | sleep"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "E | 0 | sleep | March 25 2019 11:59 PM"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 3
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "D | 1 | assignment | May 17 2019 11:59 PM"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 1
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * Main class"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            System.out.println(tasks.size());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            ui.dukeEcho(e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 45,
      "-": 4
    }
  },
  {
    "path": "src/main/java/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private DateTime dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public AddCommand(String taskType, String taskDetails) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String[] arr \u003d taskDetails.split(\"/\",2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.taskName \u003d arr[0].trim();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (taskName.equals(\"\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"The description of a \" + taskType + \" cannot be empty\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (!taskType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                this.dateTime \u003d new DateTime(arr[1].trim());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                throw new DukeException(\"No date and time found!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        switch(taskType){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            newTask \u003d new ToDo(taskName);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            newTask \u003d new Deadline(taskName, dateTime);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            newTask \u003d new Event(taskName, dateTime);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"Invalid task format\"); // should never reach here :)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        tasks.addTask(newTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        ui.dukeEcho(\"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                newTask.toString(),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return \"Add \" + this.taskType + \": \" + this.taskName + \" \" + this.dateTime.toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 58
    }
  },
  {
    "path": "src/main/java/command/ClearAllTasksCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class ClearAllTasksCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public ClearAllTasksCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        storage.clearAll();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        ui.dukeEcho(\"All tasks have been cleared. You now have an empty task list!\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        tasks.clearAll();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 18
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void canExit() { this.isExit \u003d true; }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 22
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private int taskID;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public DeleteCommand(int taskID) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.taskID \u003d taskID;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (this.taskID \u003e tasks.size()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"Invalid ask ID. Please Enter a task ID between 1 and \" + tasks.size());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        Task removedTask \u003d tasks.deleteTask(taskID);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        ui.dukeEcho(\"Noted. I\u0027ve removed this task:\", removedTask.toString(),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return \"Delete \" + this.taskID;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 31
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private int taskID;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public DoneCommand(int taskID) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.taskID \u003d taskID;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (this.taskID \u003e tasks.size()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"Invalid ask ID. Please Enter a task ID between 1 and \" + tasks.size());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        Task completedTask \u003d tasks.finishTask(taskID);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        ui.dukeEcho(\"Nice! I\u0027ve marked this task as done:\", completedTask.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 25
    }
  },
  {
    "path": "src/main/java/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super.canExit();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 15
    }
  },
  {
    "path": "src/main/java/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Helper;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        Helper helper \u003d new Helper();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        ui.dukeEcho(helper.getCommands());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 16
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String[] arr \u003d new String[tasks.size()+1];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr[0] \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        for (int i\u003d1; i\u003c\u003dtasks.size(); i++) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            arr[i] \u003d i + \". \" + tasks.getTask(i).toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        ui.dukeEcho(arr);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 20
    }
  },
  {
    "path": "src/main/java/main/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 10
    }
  },
  {
    "path": "src/main/java/main/Helper.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class Helper {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private static int NUMBER_OF_COMMANDS \u003d 9;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    String[] arr;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Helper() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr \u003d new String[NUMBER_OF_COMMANDS+1];"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr[0] \u003d \"Here are the list of commands and their allowable input formats\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr[1] \u003d \"bye\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr[2] \u003d \"list\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr[3] \u003d \"done \u003ctask ID\u003e\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr[4] \u003d \"delete \u003ctask ID\u003e\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr[5] \u003d \"todo \u003ctask name\u003e\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr[6] \u003d \"event \u003ctask name\u003e / dd/MM/yyyy HHmm\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr[7] \u003d \"deadline \u003ctask name\u003e / dd/MM/yyyy HHmm\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr[8] \u003d \"help\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        arr[9] \u003d \"clear\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String[] getCommands() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return arr;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 27
    }
  },
  {
    "path": "src/main/java/main/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * deals with making sense of the user command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Returns a Command object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param fullCommand"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String[] arr \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String cmd \u003d arr[0].toLowerCase();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        switch (cmd) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"clear\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            return new ClearAllTasksCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                return new DoneCommand(Integer.parseInt(arr[1].trim()));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                throw new DukeException(\"Please enter a valid task ID to mark as complete!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                throw new DukeException(\"Please enter a numerical value for the task ID\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(arr[1].trim()));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                throw new DukeException(\"Please enter a valid task ID to delete!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                throw new DukeException(\"Please enter a numerical value for the task ID\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                return new AddCommand(cmd, arr[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                throw new DukeException(\"The description of the command \u0027\" + cmd + \"\u0027 cannot be empty!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry I do not understand what you mean. \" +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                    \"Please enter \u0027help\u0027 to see all supported commands.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        The Parser parses the full command as such:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        1. Identify the command type - is it an add command, a delete command, an exit command, a finish task command"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        2. Create a new Command object: e.g. return new AddCommand(tasktype, taskname);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "         */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 66
    }
  },
  {
    "path": "src/main/java/main/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        File f;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        Scanner sc;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            f \u003d new File(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"File loading error: \" + e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d readFromFile(sc, f);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private ArrayList\u003cTask\u003e readFromFile(Scanner sc, File f) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            Task task \u003d addToTaskList(sc.nextLine().trim());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private Task addToTaskList(String nextLine) throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String[] arr \u003d nextLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (arr.length \u003c 3 || arr.length \u003e 4) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"Existing tasklist is corrupt.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String taskType \u003d arr[0].trim(); // Check task type"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (!taskType.equals(\"T\") \u0026\u0026 !taskType.equals(\"E\") \u0026\u0026 !taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"Invalid task type found.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        int status;         // Check task status."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            status \u003d Integer.parseInt(arr[1].trim());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"Invalid task status found.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        boolean isComplete \u003d status !\u003d 0;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        DateTime dateTime;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                newTask \u003d new ToDo(arr[2], isComplete);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                dateTime \u003d DateTime.parseTaskListFormat(arr[3].trim());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                newTask \u003d new Event(arr[2], isComplete, dateTime);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                dateTime \u003d DateTime.parseTaskListFormat(arr[3].trim());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                newTask \u003d new Deadline(arr[2], isComplete, dateTime);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                newTask \u003d null;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"Invalid task status found.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void save(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            new FileWriter(filePath); //create new file"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                appendToFile(filePath, task.publishTask() + System.lineSeparator());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"Error in saving to file: \" + e.getMessage());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void clearAll() throws DukeException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            new FileWriter(filePath); //create new file"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"File does not exist, there is nothing to clear!\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 119
    }
  },
  {
    "path": "src/main/java/main/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class TaskList{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e existingTaskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.tasks \u003d existingTaskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Task addTask(Task newTask) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Task deleteTask(int taskNum) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        Task removedTask \u003d this.tasks.remove(taskNum-1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return removedTask;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Task finishTask(int taskNum) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        Task completedTask \u003d this.tasks.get(taskNum-1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        completedTask.finishTask();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return completedTask;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * Returns the task with the corresponding task ID."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @param taskID is the ACTUAL task ID, with index starting from 1"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     * @return Task Object with the corresponding task ID."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Task getTask(int taskID) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return tasks.get(taskID-1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void clearAll() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.tasks.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    Note to self: the out of bounds exception should be caught earlier under the part where you process command!"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 58
    }
  },
  {
    "path": "src/main/java/main/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * Deals with interactions with the user"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public static final String DIVIDER \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public static final String BLANKSPACE \u003d \"     \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private String currLine;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String readCommand() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String fullCommand \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        if (fullCommand.equals(\"\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"Please enter a command. Type \u0027help\u0027 for a list of all valid commands.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        currLine \u003d fullCommand;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return fullCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        dukeEcho(\"Hi! My name is Duke, what can I do for you?\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        dukeEcho(\"Bye! Hope to see you again soon!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        dukeEcho(message);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void dukeEcho(String... messages){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        for (String msg : messages) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            System.out.println(BLANKSPACE + msg);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 54
    }
  },
  {
    "path": "src/main/java/task/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    DateTime(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public DateTime(String rawDateTimeFormat) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            this.dateTime \u003d LocalDateTime.parse(rawDateTimeFormat, formatter);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"Invalid date-time format. Date-time should be in dd/MM/yyyy HHmm format.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public static DateTime parseTaskListFormat(String taskListDTformat) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"LLLL dd yyyy hh:mm a\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        LocalDateTime resultDateTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            resultDateTime \u003d LocalDateTime.parse(taskListDTformat, formatter);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            throw new DukeException(\"Invalid date-time format. Date-time should be in dd/MM/yyyy HHmm format.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return new DateTime(resultDateTime);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"LLLL dd yyyy hh:mm a\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return dateTime.format(formatter);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 43
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * Represents a Task with type Deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private DateTime dateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Deadline(String name, DateTime dateTime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Deadline(String name, boolean isComplete, DateTime dateTime) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super(name, isComplete);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.dateTime + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String publishTask() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return \"D | \" + super.publishTask() + \" | \" + this.dateTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 30
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import task.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * Represents a Task with type Event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private DateTime dateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Event(String name, DateTime dateTime){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public Event(String name, boolean isComplete, DateTime dateTime) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super(name, isComplete);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.dateTime + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String publishTask() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return \"E | \" + super.publishTask() + \" | \" + this.dateTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 30
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * Represents a Task object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    private boolean isComplete;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    Task(String name) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.name \u003d name.trim();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.isComplete \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    Task(String name, boolean isComplete) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        this.isComplete \u003d isComplete;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String status \u003d this.isComplete ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return \"[\" + status + \"] \" + this.name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void finishTask() { this.isComplete \u003d true; }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String publishTask() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String status \u003d this.isComplete ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return status + \" | \" + this.name;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 33
    }
  },
  {
    "path": "src/main/java/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " * Represents a Task with type Todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public ToDo(String name, boolean isComplete) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        super(name, isComplete);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public String publishTask() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        return \"T | \" + super.publishTask();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 24
    }
  },
  {
    "path": "src/test/java/main/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void parse_addCommand_noException() throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String res;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String fullCommand \u003d \"evENT dog\u0027s birthday / 26/01/2016 1200\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d Parser.parse(fullCommand).toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d e.getMessage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        assertEquals(new AddCommand(\"event\", \"dog\u0027s birthday / 26/01/2016 1200\").toString(), res);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void parse_add_Command_withException(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String res;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String fullCommand \u003d \"evENT dog\u0027s birthday / 32/01/2016 1200\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d Parser.parse(fullCommand).toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d e.getMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        assertEquals(\"Invalid date-time format. Date-time should be in dd/MM/yyyy HHmm format.\", res);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void parse_deleteCommand_noException() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String dummyTaskToAdd \u003d \"evENT dog\u0027s birthday / 26/01/2016 1200\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        Parser.parse(dummyTaskToAdd);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String res;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        String fullCommand \u003d \"delete 5\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d Parser.parse(fullCommand).toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "            res \u003d e.getMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        assertEquals(\"Delete 5\", res);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 49
    }
  },
  {
    "path": "src/test/java/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import main.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void toStringTest() throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        assertEquals(new Event(\"Assignment\", false,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                        new DateTime(\"25/03/2019 2359\")).toString(),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                \"[E][✗] Assignment (at: March 25 2019 11:59 PM)\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    public void publishTaskTest() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "        assertEquals(\"E | 0 | Assignment | March 25 2019 11:59 PM\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                new Event(\"Assignment\", false,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "                        new DateTime(\"25/03/2019 2359\")).publishTask());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 21
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "       [E][✗] birthday (at: Sunday 12am)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     1. [E][✗] birthday (at: Sunday 12am)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "       [T][✗] borrow book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "       [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "       [D][✗] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     1. [E][✗] birthday (at: Sunday 12am)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     2. [T][✗] borrow book"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     3. [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     4. [D][✗] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "       [T][✓] borrow book"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "       [D][✓] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     1. [E][✗] birthday (at: Sunday 12am)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     2. [T][✓] borrow book"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     3. [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     4. [D][✓] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 57
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "event birthday /at Sunday 12am"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "bye"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 12
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangxuan97"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "zhangxuan97": 34
    }
  }
]
