[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "run{"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.1\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "test {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "Raikonen": 33
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "D | 0 | asdasd | 1985-11-21T14:00"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "D | 0 | asdad | 1944-10-21T15:25"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 2
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected LocalDateTime parsedBy;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(description, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.parsedBy \u003d parseDateTime(by);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(description, TaskType.DEADLINE, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.parsedBy \u003d parseDateTime(by);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public String serialise() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return String.format(\"D | %d | %s | %s\\n\", isDone ? 1 : 0, description, parsedBy.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return \"[D]\" + \"[\" + super.getStatusIcon() + \"]\" + super.toString() + \" (by: \" + parsedBy.toString() + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 26
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": " * DUKE"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Start Application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param args Main Args"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        new DukeCLI().run();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "Raikonen": 10
    }
  },
  {
    "path": "src/main/java/DukeCLI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class DukeCLI {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    // Main function"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        // Check whether file exists, else create file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        // Try to load data"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskList.loadData();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        // User input"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        String input \u003d sc.next(); // Initial Input"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        // Try is inside while loop so that user can continue to enter commands despite invalid commands"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                switch (input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        taskList.printList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        sc.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        taskList.completeTask(sc.nextInt());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        taskList.deleteTask(sc.nextInt());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        taskList.createTodo(sc.nextLine().trim());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        taskList.createDeadline(sc.nextLine().trim());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        taskList.createEvent(sc.nextLine().trim());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        sc.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        handleDefault();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                System.out.println(\"Input Mismatch Exception caught\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                sc.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                System.out.println(String.format(\"Index Out of Bounds Exception: %s\", e.getMessage()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            catch(DukeException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            catch(Exception e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            finally {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                input \u003d sc.next();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    // Helper Functions"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private void greet() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                \"     Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                \"     What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private void handleDefault() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(new DukeException().getMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                \"     Bye. Hope to see you again soon!\\n\" +"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 87
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                \"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( \\n\" +"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(String.format(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                \"     ☹ OOPS!!! %s \\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                \"    ____________________________________________________________\", errorMessage));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected LocalDateTime parsedAt;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(description, TaskType.EVENT);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.parsedAt \u003d parseDateTime(at);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(description, TaskType.EVENT, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.parsedAt \u003d parseDateTime(at);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public String serialise() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return String.format(\"E | %d | %s | %s\\n\", isDone ? 1 : 0, description, parsedAt.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return \"[E]\" + \"[\" + super.getStatusIcon() + \"]\" + super.toString() + \" (at: \" + parsedAt.toString() + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 27
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected TaskType type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Task(String description, TaskType type) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Task(String description, TaskType type, boolean isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    // Serialise"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public abstract String serialise();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    // Deserialize"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    static public Task deserialize(String s) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        String[] parsedLine \u003d s.split(\" \\\\| \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        switch (parsedLine[0]) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                return new Todo(parsedLine[2], Integer.parseInt(parsedLine[1]) \u003d\u003d 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                return new Deadline(parsedLine[2], Integer.parseInt(parsedLine[1]) \u003d\u003d 1, parsedLine[3]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                return new Event(parsedLine[2], Integer.parseInt(parsedLine[1]) \u003d\u003d 1, parsedLine[3]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\"); //return tick or X symbols"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected void setDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected LocalDateTime parseDateTime(String dateTime) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        // Check whether already in the right format"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return LocalDateTime.parse(dateTime);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        catch (DateTimeParseException e) {}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        String[] parsedDateTime \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        String[] parsedDate \u003d parsedDateTime[0].split(\"\\\\/\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return LocalDateTime.of("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                Integer.parseInt(parsedDate[2]),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                Integer.parseInt(parsedDate[1]),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                Integer.parseInt(parsedDate[0]),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                Integer.parseInt(parsedDateTime[1]) / 100,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                Integer.parseInt(parsedDateTime[1]) % 100);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 69
    }
  },
  {
    "path": "src/main/java/TaskFileManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class TaskFileManager {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private File taskFile;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public TaskFileManager(File file) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.taskFile \u003d file;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void writeListToFile(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            String textToAdd \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            FileWriter fw \u003d new FileWriter(taskFile.getPath());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            for (Task t : list) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                textToAdd +\u003d t.serialise();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            fw.write(textToAdd);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void appendToFile(String textToAppend) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            FileWriter fw \u003d new FileWriter(taskFile.getPath(), true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            fw.write(textToAppend);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            Scanner s \u003d new Scanner(taskFile); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                Task t \u003d Task.deserialize(s.nextLine());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                taskList.add(t);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            // If no file, create the file"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            System.out.println(\"List is currently empty\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 57
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private TaskFileManager taskFileManager \u003d new TaskFileManager(new File(\"data/tasks.txt\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    // Overloaded method for existing task lists"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public TaskList(List l) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskList \u003d new ArrayList\u003cTask\u003e(l);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void loadData() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        List\u003cTask\u003e loadedTaskList \u003d taskFileManager.getTaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        if (loadedTaskList \u003d\u003d null)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        else"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            taskList \u003d loadedTaskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            System.out.println(String.format(\"     %d.%s\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                    i+1, taskList.get(i).toString()));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void echoEntry(String input) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                \"     Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                String.format(\"       %s \\n\", input) +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                String.format(\"     Now you have %d tasks in the list. \\n\", taskList.size()) +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void completeTask(int entryNumber) throws IndexOutOfBoundsException{"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskList.get(entryNumber - 1).setDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(String.format(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        \"     Nice! I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        \"       %s\\n\" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        \"    ____________________________________________________________\","
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                taskList.get(entryNumber - 1).toString()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskFileManager.writeListToFile(taskList);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void deleteTask(int entryNumber) throws IndexOutOfBoundsException{"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(String.format(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        \"     Noted. I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        \"       %s\\n\" +"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        \"     Now you have %d tasks in the list.\\n\" +"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        \"    ____________________________________________________________\","
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                taskList.remove(entryNumber - 1).toString(), taskList.size()));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskFileManager.writeListToFile(taskList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void createDeadline(String input) throws DukeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        String[] parsedDeadline \u003d input.split(\" \\\\/by \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        if (input.isEmpty())"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        if (parsedDeadline.length \u003d\u003d 1)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            throw new DukeException(\"Deadline is missing a deadline\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        Task newDeadline \u003d new Deadline(parsedDeadline[0], parsedDeadline[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        // Update Local Copy"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskList.add(newDeadline);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        // Update Harddisk Copy"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskFileManager.appendToFile(newDeadline.serialise());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        echoEntry(newDeadline.toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void createEvent(String input) throws DukeException{"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        String[] parsedEvent \u003d input.split(\" \\\\/at \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        if (input.isEmpty())"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        if (parsedEvent.length \u003d\u003d 1)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            throw new DukeException(\"Event is missing a location\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        Task newEvent \u003d new Event(parsedEvent[0], parsedEvent[1]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        // Update Local Copy"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskList.add(newEvent);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        // Update Harddisk Copy"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskFileManager.appendToFile(newEvent.serialise());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        echoEntry(newEvent.toString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void createTodo(String input) throws DukeException{"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        if (input.isEmpty())"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        Task newTodo \u003d new Todo(input);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        // Update Local Copy"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskList.add(newTodo);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        // Update Harddisk Copy"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskFileManager.appendToFile(newTodo.serialise());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        echoEntry(newTodo.toString());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 105
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    EVENT"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 5
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(description, TaskType.TODO);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(description, TaskType.TODO, isDone);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public String serialise() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return String.format(\"T | %d | %s\\n\", isDone ? 1 : 0, description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return \"[T]\" + \"[\" + super.getStatusIcon() + \"]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Raikonen": 20
    }
  },
  {
    "path": "src/main/javafx/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": " * DUKE"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class Duke extends Application{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Start Application."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param primaryStage Primary Stage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        primaryStage.setScene(scene);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        primaryStage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        primaryStage.setResizable(false);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        primaryStage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        primaryStage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 81
    }
  },
  {
    "path": "src/main/javafx/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 11
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void testAdd() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        assertEquals(42, Integer.sum(19, 23));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 11
    }
  },
  {
    "path": "src/text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 21
    }
  }
]
