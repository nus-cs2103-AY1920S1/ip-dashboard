[
  {
    "path": "runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 21
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    protected LocalDateTime deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Deadline(String description, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Deadline(String description, LocalDateTime deadline, boolean done) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Deadline finish() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return new Deadline(description, this.deadline,true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        TimeManager tm \u003d new TimeManager();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return \"[D]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description + \" (by: \" + tm.printTime(deadline) + \" )\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 26
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private Sheet sheet;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        storage \u003d new Storage(myPaths.TASKLIST);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            sheet \u003d new Sheet(storage.load());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        parser.start(sheet);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "xiaoyu-nus": 26
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private String s;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public DukeException(){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    this.s \u003d s;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 16
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    protected LocalDateTime start;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    protected LocalDateTime end;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Event(String description, LocalDateTime start, LocalDateTime end) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.start \u003d start;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.end \u003d end;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Event(String description, LocalDateTime start, LocalDateTime end, boolean done) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.start \u003d start;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.end \u003d end;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Event finish() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return new Event(description, start, end,true);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        TimeManager tm \u003d new TimeManager();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return \"[E]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description + \" (from: \" + tm.printTime(start)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                + \" , to \" + tm.printTime(end)+ \" )\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 30
    }
  },
  {
    "path": "src/main/java/IllegalCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class IllegalCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public IllegalCommandException(String s) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 6
    }
  },
  {
    "path": "src/main/java/IllegalTimeFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class IllegalTimeFormatException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public IllegalTimeFormatException(String s) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 6
    }
  },
  {
    "path": "src/main/java/MissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class MissingDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public MissingDescriptionException(String s) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 6
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private Sheet sheet;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void start(Sheet sheet) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        TimeManager tm \u003d new TimeManager();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.sheet \u003d sheet;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        ui.showLogo();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            String command \u003d sc.next();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    ui.showGoodbye();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    this.sheet.showList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                } else if (command.equals(\"delete\") || command.equals(\"done\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        int index \u003d sc.nextInt();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        if (index \u003e this.sheet.numOfTask) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            if (this.sheet.isEmpty()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                                throw new TaskNotFoundException(\"☹ OOPS!!! The list is empty.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                                throw new TaskNotFoundException(\"☹ OOPS!!! The list contains only \" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                                        this.sheet.numOfTask + (this.sheet.numOfTask \u003d\u003d 1 ? \" task.\" : \" tasks.\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        if (index \u003c 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            throw new TaskNotFoundException(\"☹ OOPS!!! Do we have non-positive tasks?\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            this.sheet.markAsDone(index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            this.sheet.delete(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    } catch (TaskNotFoundException tfe) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        ui.printDukeException(tfe);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    } catch (InputMismatchException ime) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        ui.printTaskIndexMismatchException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        sc.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                } else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        String description \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        if (description.isBlank()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            throw new MissingDescriptionException("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                                    \"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        Task todoTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        this.sheet.add(todoTask);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    } catch (MissingDescriptionException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        ui.printDukeException(e);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        String next;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        String description \u003d \"\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        while (!(next \u003d sc.next()).equals(\"/by\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            description +\u003d \" \" + next;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        String by \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        if (by.isBlank()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            throw new MissingDescriptionException("
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                                    \"☹ OOPS!!! The deadline cannot be empty.\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            );"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        if (description.isBlank()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            throw new MissingDescriptionException("
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                                    \"☹ Oh! Did you forget to add the task?\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        Task dlTask \u003d new Deadline(description, tm.getTime(by));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        this.sheet.add(dlTask);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    } catch (MissingDescriptionException dl) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        ui.printDukeException(dl);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    } catch (IllegalTimeFormatException itef){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        ui.printDukeException(itef);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        String next;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        String description \u003d \"\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        while (!(next \u003d sc.next()).equals(\"/from\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            description +\u003d \" \" + next;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        String[] span \u003d sc.nextLine().trim().split(\"to\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        if (span.length \u003c 2) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            throw new MissingDescriptionException(\"☹ OOPS!!! The event span is incomplete.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        if (description.isBlank()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            throw new MissingDescriptionException("
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                                    \"☹ Oh! Did you forget to add the task?\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        Task eventTask \u003d new Event(description, tm.getTime(span[0]), tm.getTime(span[1]));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        this.sheet.add(eventTask);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    } catch (MissingDescriptionException mde) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        ui.printDukeException(mde);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    } catch (IllegalTimeFormatException itef){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        ui.printDukeException(itef);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    ui.showUnknownError();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                ui.printFileNotFoundException();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                ui.printIOException();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 122
    }
  },
  {
    "path": "src/main/java/Sheet.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Sheet {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private Storage storage \u003d new Storage(myPaths.TASKLIST);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public int numOfTask;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Sheet(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        numOfTask \u003d tasks.size();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void add(Task task) throws IOException{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        ui.showAdd(task.toString().trim());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.numOfTask++;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        ui.showCount(numOfTask);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void delete(int index) throws IOException{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Task removed \u003d tasks.remove(index - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        ui.showRemove(removed.toString().trim());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.numOfTask--;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        ui.showCount(numOfTask);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return this.tasks.size() \u003d\u003d 0;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void markAsDone(int index) throws IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Task doneTask \u003d tasks.get(index - 1).finish();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        tasks.set(index - 1, doneTask);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        ui.showDone(doneTask.toString().trim());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showList() throws FileNotFoundException{"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        ui.showListHeader();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        for (int i \u003d 0; i \u003c numOfTask; i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            ui.showTask(i + 1, tasks.get(i).toString().trim());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        for (int i \u003d 0; i \u003c numOfTask; i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            output +\u003d (i + 1) + \". \" + tasks.get(i).toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return output.trim();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 65
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private String pathToFile;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private File tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Storage(String pathToFile) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.pathToFile \u003d pathToFile;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public List\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        File f \u003d new File(pathToFile);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        f.createNewFile();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.tasks \u003d f;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Path p \u003d Paths.get(pathToFile);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        List\u003cString\u003e lst \u003d Files.readAllLines(p);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        for (String t : lst) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            taskList.add(Task.toTask(t));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void save(List\u003cTask\u003e lst) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.tasks \u003d new File(pathToFile);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        if (this.tasks.exists()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            this.tasks.delete();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.tasks.createNewFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        FileWriter fw \u003d new FileWriter(tasks, true);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Path p \u003d Paths.get(pathToFile);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        for (Task tsk : lst) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            fw.write(tsk.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 45
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private static Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.description \u003d description.trim();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Task(String description, Boolean done) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.description \u003d description.trim();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Task finish() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return new Task(this.description, true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public static Task toTask(String s) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy_@_hh:mma\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Boolean isDone \u003d (s.charAt(4) \u003d\u003d \u0027\\u2713\u0027);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        switch (s.charAt(1)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        case \u0027T\u0027:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                return new Todo(s.substring(7), isDone);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        case \u0027E\u0027:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                String description \u003d s.substring(7, s.lastIndexOf(\u0027(\u0027) - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                String[] times \u003d s.substring(s.lastIndexOf(\u0027(\u0027) - 1).split(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                LocalDateTime start \u003d LocalDateTime.parse(times[2], formatter);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                LocalDateTime end \u003d LocalDateTime.parse(times[5],formatter);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                return new Event(description, start, end, isDone);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        case \u0027D\u0027:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                String description2 \u003d s.substring(7, s.lastIndexOf(\u0027(\u0027) - 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                String[] deadlines \u003d s.substring(s.lastIndexOf(\u0027(\u0027) - 1).split(\" \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                LocalDateTime dl \u003d LocalDateTime.parse(deadlines[2],formatter);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                return new Deadline(description2, dl, isDone);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                return new Task(s.substring(7));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public static String markStringDone(String taskString) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return taskString.replace(\"\\u2718\", \"\\u2713\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description + \"\\n\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 62
    }
  },
  {
    "path": "src/main/java/TaskNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class TaskNotFoundException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public TaskNotFoundException(String s) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 6
    }
  },
  {
    "path": "src/main/java/TimeManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.text.Format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class TimeManager {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public LocalDateTime getTime(String s) throws IllegalTimeFormatException{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        String[] dateTime \u003d s.trim().split(\" \");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        String[] date \u003d dateTime[0].split(\"/\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        String[] temp \u003d new String[5];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        for (int i \u003d 0; i \u003c 5; i++) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            if (i \u003c date.length) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                temp[i] \u003d date[i];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                temp[i] \u003d \"00\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        date \u003d temp;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        String time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        if (date[0].length() \u003e 2) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            // time is simply s"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            time \u003d dateTime[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            date[0] \u003d \"00\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            date[3] \u003d time.substring(0, 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            date[4] \u003d time.substring(2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            if (dateTime.length \u003e 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                // time is stored in dateTime[1]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                time \u003d dateTime[1];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    date[3] \u003d time.substring(0, 2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    date[4] \u003d time.substring(2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    throw new IllegalTimeFormatException("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            \"☹ Sorry, I couldn\u0027t recognise the time. Enter time in the format of \u0027hhmm\u0027 :D\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                // no time value"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return toTime(date);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private LocalDateTime toTime(String[] times) throws IllegalTimeFormatException{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            LocalDateTime current \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            int year \u003d times[2].equals(\"00\") ? current.getYear() : Integer.parseInt(times[2]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            int month \u003d times[1].equals(\"00\") ? current.getMonth().getValue() : Integer.parseInt(times[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            int day \u003d times[0].equals(\"00\") ? current.getDayOfMonth() : Integer.parseInt(times[0]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            int hour \u003d Integer.parseInt(times[3]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            int minute \u003d Integer.parseInt(times[4]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            return LocalDateTime.of(year, month, day, hour, minute);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            throw new IllegalTimeFormatException("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    \"☹ Sorry, I couldn\u0027t recognise the time.\\n\" +"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            \"     Try enter in the format of \u0027dd/MM/yy hhmm\u0027 :D\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            throw new IllegalTimeFormatException("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    \"☹ Sorry, only numbers can be recognised for time.\\n\" +"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            \"     Try enter in the format of \u0027dd/MM/yy hhmm\u0027 :D\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String printTime(LocalDateTime dt) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        DateTimeFormatter customFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy_@_hh:mma\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return dt.format(customFormatter);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 70
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Todo(String description, boolean done) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Todo finish() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return new Todo(description,true);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 20
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public static final String LINE \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public static final String INDENT \u003d \"     \";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showLogo() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(LINE);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(LINE + INDENT + \"Hello! I\u0027m Duke\\n\" + INDENT + \"What can I do for you?\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                + LINE);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(LINE + INDENT + \"Bye. Hope to see you again soon!\\n\" + LINE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showDone(String doneTask) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(LINE + INDENT + \"Nice! I\u0027ve marked this task as done: \\n\" + INDENT +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                doneTask + \"\\n\" + LINE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showAdd(String task) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(LINE + INDENT + \"Got it. I\u0027ve added this task: \\n\" + INDENT + \" \" + task + \"\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showListHeader() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(LINE + INDENT + \"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showRemove(String removed) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(LINE + INDENT + \"Noted. I\u0027ve removed this task:\\n\" + INDENT + \" \" + removed + \"\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showUnknownError() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(LINE + INDENT + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" + LINE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void printDukeException(DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(LINE + INDENT + e.toString() + \"\\n\"  + LINE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void printFileNotFoundException() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(LINE + INDENT + \"oops, task list is not found :o\\n\" + LINE);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void printIOException() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(LINE + INDENT + \"oops, something went wrong :(\\n\" + LINE);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(LINE + INDENT + \"oops, something went wrong\\n\" + LINE);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showCount(int numOfTask) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        if (numOfTask \u003c 2) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            System.out.printf(INDENT + \"Now you have %d task in the list.\\n\", numOfTask);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            System.out.printf(INDENT + \"Now you have %d tasks in the list.\\n\", numOfTask);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showTask(int index, String task) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(INDENT + \" \" + index + \". \" + task + \"\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void printTaskIndexMismatchException() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(LINE + INDENT +"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                \"☹ OOPS!!! I cannot recognise that task index. :-(\" + \"\\n\" + LINE);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 81
    }
  },
  {
    "path": "src/main/java/myPaths.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class myPaths {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public static final String TASKLIST \u003d \"tasks.txt\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 3
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void finishTest(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        LocalDateTime t1 \u003d LocalDateTime.of(1990,1,1,0,0);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Event event1 \u003d new Event(\"event\", t1, t1, true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Event event2 \u003d new Event(\"event\", t1, t1, false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        assertEquals(event1.toString(), event2.finish().toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 15
    }
  },
  {
    "path": "src/test/java/SheetTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class SheetTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void addTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            List\u003cTask\u003e lst1 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            List\u003cTask\u003e lst2 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            Task t1 \u003d new Todo(\"task1\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            Task t2 \u003d new Todo(\"task2\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            lst1.add(t1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            lst2.add(t1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            lst2.add(t2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            Sheet sh1 \u003d new Sheet(lst1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            Sheet sh2 \u003d new Sheet(lst2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            sh1.add(t2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            assertEquals(sh2.toString(), sh1.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            System.out.println(e.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 28
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void toTaskTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        LocalDateTime t1 \u003d LocalDateTime.of(1990,12,12,5,10);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Event event1 \u003d new Event(\"event\", t1, t1, true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        assertEquals(event1.toString(), Task.toTask(event1.toString()).toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 14
    }
  }
]
