[
  {
    "path": "src/main/java/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private String deadlineBy;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private Date deadlineDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    AddDeadlineCommand(String description, String deadlineBy) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.deadlineBy \u003d deadlineBy;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    AddDeadlineCommand(String description, Date deadlineDate) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.deadlineDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        Deadline deadline;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (deadlineDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            deadline \u003d new Deadline(description, deadlineBy);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            deadline \u003d new Deadline(description, deadlineDate);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ui.printAddSuccessMessage(deadline, tasks.size());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        storage.save(tasks.getAllTasks());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 30
    }
  },
  {
    "path": "src/main/java/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private String eventAt;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private Date eventDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    AddEventCommand(String description, String deadlineBy) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.eventAt \u003d deadlineBy;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    AddEventCommand(String description, Date deadlineDate) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.eventDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        Event event;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (eventDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            event \u003d new Event(description, eventAt);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            event \u003d new Event(description, eventDate);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ui.printAddSuccessMessage(event, tasks.size());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        storage.save(tasks.getAllTasks());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 30
    }
  },
  {
    "path": "src/main/java/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "class AddTodoCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    AddTodoCommand(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ui.printAddSuccessMessage(todo, tasks.size());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        storage.save(tasks.getAllTasks());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 15
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jon-chua": 9
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private String deadlineBy;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private Date deadlineDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    Deadline(String description, String deadlineBy) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.deadlineBy \u003d deadlineBy;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    Deadline(String description, Date deadlineDate) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.deadlineDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public String getOutputFormat() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return String.format(\"D | %d | %s | %s\", isDone ? 1 : 0, description, deadlineBy);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (deadlineDate !\u003d null) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            DateFormat dtf \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return String.format(\"[D]%s (by: %s)\", super.toString(), dtf.format(deadlineDate));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return String.format(\"[D]%s (by: %s)\", super.toString(), deadlineBy);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 33
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private int zeroBasedIndex;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    DeleteCommand(int oneBasedIndex) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.zeroBasedIndex \u003d oneBasedIndex - 1;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (zeroBasedIndex \u003c 0 || zeroBasedIndex \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The index to delete cannot be less than 0 or \""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    + \"greater than the length of the list.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        Task deletedTask \u003d tasks.get(zeroBasedIndex);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks.delete(zeroBasedIndex);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ui.printDeleteSuccessMessage(deletedTask, tasks.size());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        storage.save(tasks.getAllTasks());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 20
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private int zeroBasedIndex;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    DoneCommand(int oneBasedIndex) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.zeroBasedIndex \u003d oneBasedIndex - 1;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (zeroBasedIndex \u003c 0 || zeroBasedIndex \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The index to mark as done cannot be less than 0 or \""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    + \"greater than the length of the list.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks.markTaskAsDone(zeroBasedIndex);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ui.printMessage(\"Nice! I\u0027ve marked this task as done:\\n\\t\\t\" + tasks.get(zeroBasedIndex));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        storage.save(tasks.getAllTasks());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        new Duke(\"data/tasks.txt\").runDuke();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            ui.showLoadingError(e.getMessage());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private void runDuke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ui.printGreetingMessage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 32,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private String eventTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private Date eventDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    Event(String description, String eventTime) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    Event(String description, Date eventDate) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.eventDate \u003d eventDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public String getOutputFormat() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return String.format(\"E | %d | %s | %s\", isDone ? 1 : 0, description, eventTime);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (eventDate !\u003d null) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            DateFormat dtf \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return String.format(\"[E]%s (at: %s)\", super.toString(), dtf.format(eventDate));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return String.format(\"[E]%s (at: %s)\", super.toString(), eventTime);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 33
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ui.printExitMessage();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 12
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ui.printList(tasks.getAllTasks());"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 6
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (isExitCommand(fullCommand)) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } else if (isListCommand(fullCommand)) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } else if (isDoneCommand(fullCommand)) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            String newInput \u003d fullCommand.replaceFirst(\"done\", \"\").trim();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            int oneBasedIndex \u003d validateDoneIndex(newInput);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return new DoneCommand(oneBasedIndex);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } else if (isAddTodoCommand(fullCommand)) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            String todo \u003d fullCommand.replaceFirst(\"todo\", \"\").trim();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            validateTodo(todo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return new AddTodoCommand(todo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } else if (isAddDeadlineCommand(fullCommand)) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            String[] deadline \u003d validateDeadline(fullCommand);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            if (isDate(deadline[1])) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                Date deadlineDate \u003d parseDate(deadline[1]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                return new AddDeadlineCommand(deadline[0], deadlineDate);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                return new AddDeadlineCommand(deadline[0], deadline[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } else if (isAddEventCommand(fullCommand)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            String[] event \u003d validateEvent(fullCommand);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            if (isDate(event[1])) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                Date eventDate \u003d parseDate(event[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                return new AddEventCommand(event[0], eventDate);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                return new AddEventCommand(event[0], event[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } else if (isDeleteCommand(fullCommand)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            String newInput \u003d fullCommand.replaceFirst(\"delete\", \"\").trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            int oneBasedIndex \u003d validateDeleteIndex(newInput);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return new DeleteCommand(oneBasedIndex);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static Date parseDate(String date) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return dateFormatter.parse(date);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"An error occurred while parsing date: \" + e);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static boolean isDate(String input) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        // Assume date is in the format 2/12/2019 1800"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        String[] splitInput \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (splitInput.length !\u003d 3 || isNotNumeric(splitInput[0]) || isNotNumeric(splitInput[1])) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        String[] yearAndTime \u003d splitInput[2].split(\" \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (yearAndTime.length !\u003d 2 || isNotNumeric(yearAndTime[0]) || isNotNumeric(yearAndTime[1])) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static int validateDoneIndex(String doneInput) throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return validateDoneOrDeleteIndex(doneInput);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static int validateDeleteIndex(String doneInput) throws DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return validateDoneOrDeleteIndex(doneInput);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static int validateDoneOrDeleteIndex(String doneInput) throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        // Checks that the string is not empty and is an integer"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (doneInput.isEmpty() || isNotNumeric(doneInput)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The index to remove cannot be blank or not an integer.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return Integer.parseInt(doneInput);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static boolean isNotNumeric(String input) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return !input.matches(\"-?\\\\d+(\\\\.\\\\d+)?\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static void validateTodo(String todo) throws DukeException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (todo.isEmpty()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static String[] validateEvent(String input) throws DukeException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return validateEventOrDeadline(input, \"event\", \"/at\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static String[] validateDeadline(String input) throws DukeException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return validateEventOrDeadline(input, \"deadline\", \"/by\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static String[] validateEventOrDeadline(String input, String textToReplace, String textToSplit) throws DukeException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        // Removes textToReplace from input,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        // and finally split it by textToSplit"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        String[] splitInput \u003d input.replaceFirst(textToReplace, \"\")"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                .trim().split(textToSplit);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        // Trims all whitespace from the resulting split"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        for (int i \u003d 0; i \u003c splitInput.length; i++) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            splitInput[i] \u003d splitInput[i].trim();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        // Event or deadline should be of length 2 after splitting and both should not be blank"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (splitInput.length !\u003d 2 || splitInput[0].isBlank() || splitInput[1].isBlank()) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! I had trouble processing that input.\\n\" +"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    \"\\tPlease make sure that the task description and dates are not empty!\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return splitInput;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static boolean isExitCommand(String input) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return input.equals(\"bye\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static boolean isListCommand(String input) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return input.equals(\"list\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static boolean isDoneCommand(String input) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return input.startsWith(\"done\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static boolean isAddTodoCommand(String input) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return input.startsWith(\"todo\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static boolean isAddDeadlineCommand(String input) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return input.startsWith(\"deadline\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static boolean isAddEventCommand(String input) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return input.startsWith(\"event\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private static boolean isDeleteCommand(String input) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return input.startsWith(\"delete\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 149
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    Storage(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                return tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            String input;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            while ((input \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                String[] splitInput \u003d input.split(\" \\\\| \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                switch (splitInput[0]) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    task \u003d new Todo(splitInput[2]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    task \u003d new Deadline(splitInput[2], splitInput[3]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    task \u003d new Event(splitInput[2], splitInput[3]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    throw new DukeException(\"An error occurred during file parsing, unexpected task type was encountered.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                if (Integer.parseInt(splitInput[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"An IOException occurred. \" + e);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"An error occurred during file parsing, unexpected done value encountered.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void save(ArrayList\u003cTask\u003e list) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(file));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            for (Task l : list) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                bw.append(l.getOutputFormat());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                bw.append(\"\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"An IOException occurred. \" + e);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 75
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public String getOutputFormat() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return String.format(\"X | %d | %s\", isDone ? 1 : 0, description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 25
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    ArrayList\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    Task get(int zeroBasedIndex) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return tasks.get(zeroBasedIndex);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void markTaskAsDone(int zeroBasedIndex) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks.get(zeroBasedIndex).markAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void add(Task task) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void delete(int zeroBasedIndex) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        if (zeroBasedIndex \u003c 0 || zeroBasedIndex \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The index to remove cannot be less than 0 or \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                    + \"greater than the length of the list.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        tasks.remove(zeroBasedIndex);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    int size() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 42
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public String getOutputFormat() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return String.format(\"T | %d | %s\", isDone ? 1 : 0, description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 15
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    Ui() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void printAddSuccessMessage(Task task, int size) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        System.out.println(\"\\t\\t\" + task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        System.out.println(\"\\tNow you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void printDeleteSuccessMessage(Task task, int size) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        System.out.println(\"\\t\\t\" + task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        System.out.println(\"\\tNow you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void printList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            int oneBasedIndex \u003d i + 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "            System.out.printf(\"\\t%d. %s\\n\", oneBasedIndex, tasks.get(i));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void printGreetingMessage() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        printMessage(\"Hello, I\u0027m Duke\\n\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void printExitMessage() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        printMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void showError(String message) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        printMessage(message);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void showLoadingError(String error) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        printMessage(\"An error occurred during file loading \" + error);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    void printMessage(String message) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        System.out.println(\"\\t\" + message);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    private void showLine() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    String readCommand() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 73
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tHello, I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tWhat can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t\t[T][?] test todo"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tNow you have 1 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t\t[D][?] buy books (by: 20th August)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tNow you have 2 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t1. [T][?] test todo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t2. [D][?] buy books (by: 20th August)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t\t[E][?] project meeting (at: 21st August)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tNow you have 3 tasks in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t1. [T][?] test todo"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t2. [D][?] buy books (by: 20th August)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t3. [E][?] project meeting (at: 21st August)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t\t[D][?] buy books (by: 20th August)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t1. [T][?] test todo"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t2. [D][?] buy books (by: 20th August)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t3. [E][?] project meeting (at: 21st August)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t\t[T][?] test todo"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! The index to remove cannot be blank or not an integer."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! I had trouble processing that input."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tPlease make sure that the task description and dates are not empty!"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! I had trouble processing that input."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tPlease make sure that the task description and dates are not empty!"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! I had trouble processing that input."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tPlease make sure that the task description and dates are not empty!"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! I had trouble processing that input."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tPlease make sure that the task description and dates are not empty!"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! I had trouble processing that input."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tPlease make sure that the task description and dates are not empty!"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! I had trouble processing that input."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tPlease make sure that the task description and dates are not empty!"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! I had trouble processing that input."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tPlease make sure that the task description and dates are not empty!"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! I had trouble processing that input."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tPlease make sure that the task description and dates are not empty!"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! The index to remove cannot be less than 0 or greater than the length of the list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! The index to remove cannot be less than 0 or greater than the length of the list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! The index to remove cannot be blank or not an integer."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t1. [T][?] test todo"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t2. [D][?] buy books (by: 20th August)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t3. [E][?] project meeting (at: 21st August)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! The index to remove cannot be less than 0 or greater than the length of the list."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! The index to remove cannot be less than 0 or greater than the length of the list."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t? OOPS!!! The index to remove cannot be blank or not an integer."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tNoted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t\t[D][?] buy books (by: 20th August)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tNow you have 2 tasks in the list."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t1. [T][?] test todo"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t2. [E][?] project meeting (at: 21st August)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\tBye. Hope to see you again soon!"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "\t____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 129
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "todo test todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "deadline buy books /by 20th August"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "event project meeting /at 21st August"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "listabc"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "deadline test /by"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "event test /at"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "deadline /by test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "event /at test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "deadline test /at test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "event test /by test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "done abcdef"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "delete abcdef"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 29
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jon-chua"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jon-chua"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "jon-chua": 22
    }
  }
]
