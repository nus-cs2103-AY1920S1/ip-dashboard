[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " * A child class of Task class that represents a deadline Task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " * which has a description and time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * Constructs a Deadline task object with specified desciption and time."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param description Description that describes the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param time Time by which the task needs to be done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @throws ParseException"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public Deadline(String description, String time) throws ParseException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        super.typeOfTask \u003d \"D\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat( \"dd/MM/yyyy hhmm\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        this.date \u003d formatter.parse(time);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @return The time by which the task has to be done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @return The description of the task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        return \"[\" + this.typeOfTask + \"]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description + \" (by: \" + time + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "philipalexanderb": 48
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.command.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.command.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.command.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.command.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " * Represents the main class of the programme."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * Constructs a duke object that takes in filePath which is the"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * path from which the file is to be loaded."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param filePath The path of the file from which the file is loaded."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            storage.setList(taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        Duke duke \u003d new Duke(\"tasks.txt\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * Runs the Duke programme."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        Parser parser \u003d new Parser(this.taskList, this.ui, this.storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        ui.run(parser);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "philipalexanderb": 46,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "philipalexanderb": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " * A child class of Task class that represents an event Task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " * which has description and time."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * Constructs an Event object with the specified description and time."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param description Description that describe the event task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param time The time at which the task is done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @throws ParseException if time does not follow the date and time format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public Event(String description, String time) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        super.typeOfTask \u003d \"E\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat( \"dd/MM/yyyy hhmm\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        this.date \u003d formatter.parse(time);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @return the time at which the task is done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        return \"[\" + this.typeOfTask + \"]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "philipalexanderb": 40
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.command.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.command.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.command.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " * Represents a Command manager that adds new Task to TaskList, deletes"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " * tasks and printing the list of tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " * Contains the fields TaskList that contains the list of Task,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " * Ui that prints the message for each commands and Storage that"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " * updates the files when the list of Task is modified."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * Constructs parser object that takes in TaskList,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * Ui and Storage as parameter."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param taskList  list of tasks contained in TaskList object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param ui User Interface object responsible for printing messages."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param storage Storage that loads and updates files when tasks are"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     *                deleted or added to the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public Parser(TaskList taskList, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * Parse a one line input into a Task or Command."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * Print message is produced every time an input is passed in."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param input  Command to be executed or Task to be created."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @throws DukeException  if Task has incomplete description."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void parseLineInput(String input) throws DukeException, IOException, ParseException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        String firstWord \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        //ArrayList\u003cTask\u003e list \u003d taskList.getList();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        if (firstWord.equals(\"bye\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            ui.printByeMessage();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        } else if (firstWord.equals(\"list\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            ui.printList(taskList.getList());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        } else if (firstWord.equals(\"done\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            Integer taskNum \u003d Integer.valueOf(input.substring(5));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            Task currTask \u003d taskList.getTask(taskNum - 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            currTask.markAsDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            ui.printTaskDone(currTask);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            storage.updateFile();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        } else if (firstWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            if (input.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                Task toDoTask \u003d new Todo(input.substring(5));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                ui.printToDoTask(toDoTask, taskList.getList());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                taskList.addTask(toDoTask);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                storage.appendToFile(toDoTask);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        } else if (firstWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            if (input.length() \u003d\u003d 8) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                String time \u003d input.split(\"/by\", 2)[1];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                String description \u003d input.split(\" /by\", 2)[0];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                Task deadlineTask \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                taskList.addTask(deadlineTask);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                ui.printDeadlineTask(deadlineTask, taskList.getList());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                storage.appendToFile(deadlineTask);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        } else if (firstWord.equals(\"event\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            if (input.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                throw new DukeException(\"OOPS!!! The description of an event cannot be empty\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                String time \u003d input.split(\"/at\", 2)[1];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                String description \u003d input.split(\" /at\", 2)[0];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                Task eventTask \u003d new Event(description, time);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                taskList.addTask(eventTask);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                ui.printEvenTask(eventTask, taskList.getList());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                storage.appendToFile(eventTask);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        } else if (firstWord.equals(\"delete\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            Integer index \u003d Integer.valueOf(input.substring(7));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            ui.printDeleteTask(taskList.getTask(index - 1), taskList.getList());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            taskList.deleteTask((int) index - 1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            storage.updateFile();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        } else if (firstWord.equals(\"bye\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            ui.printByeMessage();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        } else if (firstWord.equals(\"find\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            String item \u003d \"(.*)\" + input.split(\" \", 2)[1] + \"(.*)\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            ArrayList\u003cTask\u003e list \u003d taskList.getList();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                String description \u003d list.get(i).getDescription();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                boolean isPresent \u003d description.matches(item);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                //System.out.println(description);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                //System.out.println(item);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                //System.out.println(isPresent);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                if (isPresent) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                    System.out.println(list.get(i));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but i don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "philipalexanderb": 118
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.command.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        this.list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException, FileNotFoundException, ParseException, IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        if (this.file.exists()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            Scanner scannerTask \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            while (scannerTask.hasNext()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                String taskText \u003d scannerTask.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                parseTextToTask(taskText, this.list);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            return this.list;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            throw (new DukeException(\"File not found\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void setList(TaskList taskList) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        this.list \u003d taskList.getList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void parseTextToTask(String taskText, ArrayList\u003cTask\u003e list) throws ParseException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        if (taskText.substring(0, 1).equals(\"T\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            Task task \u003d new Todo(taskText.substring(8));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            if (taskText.substring(3,4).equals(\"1\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            this.list.add(task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        } else if (taskText.substring(0, 1).equals(\"D\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            String descriptionAndTime \u003d taskText.substring(8);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            int index \u003d descriptionAndTime.indexOf(\u0027|\u0027);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            String description \u003d descriptionAndTime.substring(0, index - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            String time \u003d descriptionAndTime.substring(index + 2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            Task task \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            if (taskText.substring(4,5).equals(\"1\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            this.list.add(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        } else if (taskText.substring(0, 1).equals(\"E\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            String descriptionAndTime \u003d taskText.substring(8);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            int index \u003d descriptionAndTime.indexOf(\u0027|\u0027);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            String description \u003d descriptionAndTime.substring(0, index - 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            String time \u003d descriptionAndTime.substring(index + 2);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            Task task \u003d new Event(description, time);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            if (taskText.substring(4,5).equals(\"1\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            this.list.add(task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void appendToFile(Task task) throws IOException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.file, true);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        String isDone \u003d task.isDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        String text \u003d task.getTypeOfTask() + \" | \" + isDone + \" | \" + task.getDescription();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        if (task.getTypeOfTask().equals(\"D\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            text \u003d text + \" | \" + ((Deadline)task).getTime() + System.lineSeparator();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        } else if (task.getTypeOfTask().equals(\"E\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            text \u003d text + \" | \" + ((Event)task).getTime() + System.lineSeparator();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            text \u003d text + System.lineSeparator();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        fw.write(text);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void updateFile() throws IOException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        FileWriter writer \u003d new FileWriter(this.file, false);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        for(Task task: this.list) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            String isDone \u003d task.isDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            text \u003d text + task.getTypeOfTask() + \" | \" + isDone + \" | \" + task.getDescription();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            if (task.getTypeOfTask().equals(\"D\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                text \u003d text + \" | \" + ((Deadline)task).getTime() + System.lineSeparator();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            } else if (task.getTypeOfTask().equals(\"E\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                text \u003d text + \" | \" + ((Event)task).getTime() + System.lineSeparator();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                text \u003d text + System.lineSeparator();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        writer.write(text);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "philipalexanderb": 108
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " * Represents the list of task that has and has not been done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    protected ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * Constructs a TaskList object that takes in an ArrayList of Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param list List of tasks that has been done and to be done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @throws FileNotFoundException if file from which the list of task is"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * loaded cannot be found."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) throws FileNotFoundException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        this.list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * Adds a task into the list of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param task Task that is to be added to the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * Deletes a task from the list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param index the index at which the task is located in the ArrayList."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @return The task that has been removed from the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public Task deleteTask(int index) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        return list.remove(index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * Gets the ArrayList of Task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @return the ArrayList of type Task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * Gets the task at the specified index."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param index The index of the task in the ArrayList."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @return the Task that is retrieved from the list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        return this.list.get(index);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "philipalexanderb": 63
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " * Child class of a Task class that respresents a Task of type todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " * that only has a desciption."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * Constructs a Todo object with specified desciption."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param description Description of the todo task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        super.typeOfTask \u003d \"T\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        return \"[\" + this.typeOfTask + \"]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "philipalexanderb": 21
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.command.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " * Represents the User-Interface that prints the messages from various"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " * inputs from the User."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    private final Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * Prints message that shows that the file cannot be loaded."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        System.out.println(\"Error: File not found. Empty File has been created.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * Takes input from the user line by line and process the input"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * using the Parser object given in the parameter."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param parser Parser object that is responsible for executing"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     *               the user input."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void run(Parser parser) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                parser.parseLineInput(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        printByeMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * prints the message when a task is done."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param task task that has just been marked as done."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void printTaskDone(Task task) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        System.out.println(\"[\\u2713] \" + task.getDescription());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * prints the message when a task is deleted."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param task The task that is removed from the list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param list The list of Task where the task was from."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void printDeleteTask(Task task, ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        System.out.println(\"Now you have \" + list.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * prints the message when a todo task is added to the list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param task Todo task that is added to the list of Task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param list The list of task to which the todo task is added."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void printToDoTask(Task task, ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        System.out.println(\" \" + task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        System.out.println(\"Now you have \" + list.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * prints the message when an event task is added to the list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param task Event task that is added to the list of Task."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param list The list of task to which the event task is added."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void printEvenTask(Task task, ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        System.out.println(\" \" + task);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * prints the message when a deadline task is added to the list."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param task Deadline task that is added to the list of Task."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param list The list of task to which the deadline task is added."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void printDeadlineTask(Task task, ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        System.out.println(\" \" + task);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * prints all the task that is in the list of Task."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param list The list of task in which all the tasks are to be printed."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void printList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            System.out.println(\"Nothing added yet\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                System.out.println(\"\" + i + \".\" + list.get(i - 1));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * prints a \"bye\" message when the programme terminates."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void printByeMessage() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * prints a \"welcome\" message when the programme starts."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "philipalexanderb": 135
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " * Represents a Task that contains the fields description that describes the"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " * task, isDone that indicates if a task has been done and typeOfTask that"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " * differentiates the type of task which can be an Event task, Todo task, or"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " * Deadline task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    protected boolean isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    protected String typeOfTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     *  Constructs a Task object with specified description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @param description Description that describes the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * Get status icon. If a task is done, returns check mark,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * otherwise, cross mark."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @return string of a check or cross mark."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * Change the field isDone to be true."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * Check whether is task is done."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @return the boolean value isDone."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @return the description of the task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     * @return the type of the task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public String getTypeOfTask() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        return this.typeOfTask;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "philipalexanderb": 61
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    String time \u003d \"19/09/2019 2359\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    Deadline deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public DeadlineTest() throws ParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        deadline \u003d new Deadline (\"Submit Assignment\", time);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        assertEquals(\"[D]\" + \"[\" + \"\\u2718\" + \"] \" + deadline.getDescription() + \"(by: \" + deadline.getTime() + \")\", deadline.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void testGetTime() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        assertEquals(time, deadline.getTime());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "philipalexanderb": 27
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "philipalexanderb": 10
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.command.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    Task task \u003d new Task(\"Test\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    boolean add \u003d this.list.add(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    boolean add2 \u003d this.list.add(task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void testGetList() throws FileNotFoundException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        assertEquals(this.list, new TaskList(this.list).getList());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void testGetTask() throws FileNotFoundException{"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        assertEquals(this.list.get(0), new TaskList(list).getTask(0));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void testDeleteTask() throws FileNotFoundException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        assertEquals(this.list.remove(0), new TaskList(this.list).deleteTask(0));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "philipalexanderb": 30
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    Task todo \u003d new Todo (\"Return book\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void testGetTypeOfTask() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        assertEquals(\"T\", this.todo.getTypeOfTask());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void testIsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        assertEquals(false, this.todo.isDone());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    public void testGetStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "        assertEquals(\"\\u2718\", todo.getStatusIcon());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "philipalexanderb": 27
    }
  },
  {
    "path": "task.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "T | 0 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "D | 0 | return book | 2/12/2019 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "E | 0 | project meeting | 6/02/2019 1600"
      }
    ],
    "authorContributionMap": {
      "philipalexanderb": 3
    }
  },
  {
    "path": "tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "D | 1 | deadline return book | 4/10/2019 1900"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "philipalexanderb"
        },
        "content": "E | 1 | event project meeting | 5/12/2019 2359"
      }
    ],
    "authorContributionMap": {
      "philipalexanderb": 2
    }
  }
]
