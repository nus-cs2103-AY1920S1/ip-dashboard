[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "run {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 27,
      "-": 14
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "T | 0 | shawn"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "E | 0 | seminar | 10th of June 2019, 6:00pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "D | 0 | test | 20th of September 2019, 12:00pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "D | 0 | shawn | 9th of June 1997, 6:00am"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 4
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * This is the main class of the Duke application. The Duke application is an interface of a"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * to-do list that allows users to add tasks to do, deadlines and events to attend."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * @author Shawn Lee"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * @since 2019-08-20"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Contains the task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Deals with interactions with the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This is the class constructor assigning a filepath to the Duke object."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param filePath Path of .txt file where tasks are stored persistently"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method contains the main logic of the program. Program is executed until exit command is issued"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * by the user."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This is the main method that runs the program using a specified file path where the tasks"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * are stored in a .txt file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param args Unused"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        new Duke(\"C:/Users/Shawn Lee/Desktop/UNI FILES/Y2S1/CS2103T/duke/data/duke.txt\").run();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 74,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * The Command class is an abstract class for all valid commands."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Returns a boolean indicating whether the command is an exit command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @return boolean true if exit command, false otherwise"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This is an abstract method that executes the correct actions based on the command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param ui Deals with interactions with the user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param storage Deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 28
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * Class when user issues a Deadline command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Input from user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Class constructor that assigns instance with user input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param userInput Input from user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public DeadlineCommand(String userInput) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Calls the ui to execute actions for a deadline task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param ui Deals with interactions with the user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param storage Deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        ui.handleDeadline(userInput, tasks, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 35
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * Class when user issues a Delete command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Input from user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Class constructor that assigns instance with user input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param userInput Input from user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public DeleteCommand(String userInput) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Calls the ui to execute actions for a delete command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param ui Deals with interactions with the user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param storage Deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        ui.handleDelete(userInput, tasks, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 35
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * Class when user issues a Done command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Input from user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Class constructor that assigns instance with user input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param userInput Input from user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public DoneCommand(String userInput) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Calls the ui to execute actions for a done command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param ui Deals with interactions with the user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param storage Deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        ui.handleDone(userInput, tasks, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 35
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * Class when user issues a Deadline command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Input from user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Class constructor that assigns instance with user input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param userInput Input from user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public EventCommand(String userInput) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Calls the ui to execute actions for a execute task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param ui Deals with interactions with the user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param storage Deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        ui.handleEvent(userInput, tasks, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 35
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * Class when user issues an Exit command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Returns true indicating that this is an exit command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @return boolean true since this is an exit command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Calls the ui to execute actions for an exit command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param ui Deals with interactions with the user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param storage Deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        ui.handleBye();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 31
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * Class when user issues a Find command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Input from user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Class constructor that assigns instance with user input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param userInput Input from user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public FindCommand(String userInput) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Calls the ui to execute actions for a find command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param ui Deals with interactions with the user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param storage Deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        ui.handleFind(userInput, tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 35
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * Class when user issues a List command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Input from user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Class constructor that assigns instance with user input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param userInput Input from user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public ListCommand(String userInput) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Calls the ui to execute actions for a list command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param ui Deals with interactions with the user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param storage Deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        ui.handleList(userInput, tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 35
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * Class when user issues a Todo command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Input from user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Class constructor that assigns instance with user input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param userInput Input from user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public TodoCommand(String userInput) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Calls the ui to execute actions for a todo task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param ui Deals with interactions with the user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param storage Deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        ui.handleTodo(userInput, tasks, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 35
    }
  },
  {
    "path": "src/main/java/duke/date/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "package duke.date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * This class processes date input from the user. For example, if the command is deadline return book /by"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * 2/12/2019 1800, Duke understands 2/12/2019 1800 as 2nd of December 2019, 6pm, instead of storing it simply"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * as a String."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Processed day from user input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    String day;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Processed month from user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    String month;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Processed year from user input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    String year;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Processed time from user input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Class constructor that assigns user input date and time to the instance."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param dateTime Date and time input form user"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public DateTime(String dateTime) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        processDate(dateTime);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method processes the user\u0027s date and time input into the desired format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param dateTime Date and time input by user"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public void processDate(String dateTime) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            simpleDateFormat.setLenient(false);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            Date date \u003d simpleDateFormat.parse(dateTime);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            day \u003d new SimpleDateFormat(\"d\").format(date);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            month \u003d new SimpleDateFormat(\"MMMM\").format(date);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            year \u003d new SimpleDateFormat(\"yyyy\").format(date);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            time \u003d new SimpleDateFormat(\"h:mma\").format(date).toLowerCase();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            processDay(day); // adds st, nd, rd, th suffix to day"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        } catch (ParseException ex) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            System.err.println(ex);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Adds suffix to day."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param d Day string without suffix"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public void processDay(String d) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        int dayNum \u003d Integer.parseInt(d);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        if (dayNum \u003e\u003d 11 \u0026\u0026 dayNum \u003c\u003d 13) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            day \u003d d + \"th\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        } else if (dayNum % 10 \u003d\u003d 1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            day \u003d d + \"st\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        } else if (dayNum % 10 \u003d\u003d 2) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            day \u003d d + \"nd\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        } else if (dayNum % 10 \u003d\u003d 3) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            day \u003d d + \"rd\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            day \u003d d + \"th\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Getter to retrieve the time."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @return String Time in desired format"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Returns date and time in desired format."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @return String Formatted date and time"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        String result \u003d day + \" of \" + month + \" \" + year + \", \" + time;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 98
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * The DukeException class is used to encompass all errors regarding user input in the program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "public class DukeException extends InputMismatchException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Class constructor that assigns an error message to the object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param message Error message to be displayed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 17
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * The Parser class is used to decode user input. The parser class then retrieves the appropriate"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method is used to retrieve the command from the user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @return Command Command object after processing user input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public static Command parse(String input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        String[] inputStringArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        String command \u003d inputStringArr[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            return new ListCommand(input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            return new DoneCommand(input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            return new TodoCommand(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            return new DeadlineCommand(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            return new EventCommand(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            return new DeleteCommand(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            return new FindCommand(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 48
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Path of .txt file where tasks are stored persistently."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Class constructor that assigns filepath to the object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param filePath Path of .txt file where tasks are stored persistently"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method loads the stored task list from a previous session."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @return ArrayList List of tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @throws FileNotFoundException On wrong filepath used"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            String s \u003d sc.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            String[] data \u003d s.split(\" \\\\| \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            String command \u003d data[0];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            if (command.equals(\"T\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                Todo t \u003d new Todo(data[2]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                if (Integer.parseInt(data[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    t.setDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            } else if (command.equals(\"D\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                Deadline d \u003d new Deadline(data[2], data[3]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                if (Integer.parseInt(data[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    d.setDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                tasks.add(d);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                Event e \u003d new Event(data[2], data[3]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                if (Integer.parseInt(data[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    e.setDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                tasks.add(e);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method appends new tasks to the end of the file."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param textToAppend New task to be added to end of the file"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public void appendToFile(String textToAppend) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            fw.write(textToAppend);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            System.out.println(\"Something went wrong: \" + ex.getMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method rewrites all data in the file. This is used when we have to edit existing data"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * in the file."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public void rewriteFile(TaskList tasks) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            String textToWrite \u003d \"\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                String type \u003d t.getType();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    String s \u003d \"T | \";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    if (t.getStatus()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                        s +\u003d \"1\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                        s +\u003d \"0\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    s +\u003d \" | \" + t + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    textToWrite +\u003d s;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                } else if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    String s \u003d \"E | \";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    if (t.getStatus()) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                        s +\u003d \"1\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                        s +\u003d \"0\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    s +\u003d \" | \" + t + \" | \" + t.getDate() + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    textToWrite +\u003d s;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    String s \u003d \"D | \";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    if (t.getStatus()) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                        s +\u003d \"1\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                        s +\u003d \"0\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    s +\u003d \" | \" + t + \" | \" + t.getDate() + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    textToWrite +\u003d s;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            fw.write(textToWrite);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            System.out.println(\"Something went wrong: \" + ex.getMessage());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 130
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * Represents a task to be completed by a certain date. A \u003ccode\u003eDeadline\u003c/code\u003e object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * corresponds to a task represented by a name, type and date."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Type of task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    String type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Date of deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    String date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Class constructor assigning name, type and date to the object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param taskName The name of the deadline task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param date The date the task is due"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public Deadline(String taskName, String date) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        type \u003d \"deadline\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method is used to get the type of the deadline task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @return String This returns the type of the deadline task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method is used to get the string representing the deadline task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @return String This returns the string representing the deadline task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method is used to get the date of the deadline task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @return String This returns the string representing the date of the deadline"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 56
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * Represents a task to be attended on a certain date. An \u003ccode\u003eEvent\u003c/code\u003e object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * corresponds to a task represented by a name, type and date."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Type of task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    String type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Date of event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    String date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Class constructor assigning name, type and date to the object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param taskName The name of the event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param date The date of the event"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public Event(String taskName, String date) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        type \u003d \"event\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method is used to get the type of the event task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @return String This returns the type of the event task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method is used to get the string representing the event task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @return String This returns the string representing the event task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method is used to get the date of the event task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @return String This returns the string representing the date of the event"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 56
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * Represents a task input by the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Name of task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Boolean indicating whether task has been completed."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Class constructor assigning name and isDone attribute to the object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param taskName The name of the deadline task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method is used to set the task as completed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method is used to get the status of the task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @return boolean This indicates whether the task has been completed"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method is used to get the string representing the status of the task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @return String This represents whether the task has been completed"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        return (isDone ? \"+\" : \" \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method is used to get the type of the task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @return String This returns the type of the task"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        return \"task\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method is used to get the string representing the task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @return String This returns the string representing the task"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        return \"[]\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method is used to get the date of the task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @return String This returns the string representing the date of the task"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method is used to get the name of the task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @return String This returns the name of the task in the form of a string"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 83
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * Represents a task to be completed. A \u003ccode\u003eTodo\u003c/code\u003e object corresponds to a task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * represented by a name, type and date."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Type of task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    String type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Class constructor assigning name and type to the object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param taskName Name of todo task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public Todo(String taskName) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        type \u003d \"todo\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method is used to get the type of the todo task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @return String This returns the type of the todo task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method is used to get the string representing the todo task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @return String This returns the string representing the todo task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 40
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * Represents the list of tasks to be completed. A \u003ccode\u003eTaskList\u003c/code\u003e contains an arraylist of"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * tasks and supports retrieval, addition and deletion operations."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Contains all tasks to be completed."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Default constructor when user has no tasks stored from previous session."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Class constructor that is called when user has tasks stored from previous session."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param storage Arraylist of tasks retrieved from storage on hard disk."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        this.tasks \u003d storage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Returns the number of tasks on the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @return int This returns the number of tasks on the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method retrieves a task using index of the task in the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param i Index of task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @return Task This returns the task corresponding to index provided"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        return tasks.get(i);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method adds a task to the bottom of the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param t Task to be added"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method removes a task in the list according to the index provided."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param i Index of task"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public void remove(int i) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        tasks.remove(i);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 64
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.date.DateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Scanner object to read user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Class constructor that initialises the scanner object in the ui object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Prints greeting message to user on application launch."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        String greetMsg \u003d \"     Hello! I\u0027m Duke\\n     What can I do for you?\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        System.out.println(logo + \u0027\\n\u0027 + greetMsg);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Reads user input."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        String userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Prints exit message and exists the application."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public static void handleBye() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Prints out current lists of tasks."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param input User input"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @throws DukeException When list command is not input correctly"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public static void handleList(String input, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        String[] inputStringArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        if (inputStringArr.length \u003e 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! The list command should not be followed by other \""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    + \"text!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                int listNum \u003d i + 1;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                if (t.getType().equals(\"todo\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    System.out.println(\"    \" + listNum + \".\" + t.getTypeIcon() + \u0027[\u0027 + t.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                            + t.toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                } else if (t.getType().equals(\"event\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    System.out.println(\"    \" + listNum + \".\" + t.getTypeIcon() + \u0027[\u0027 + t.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                            + t.toString() + \" (at: \" + t.getDate() + \")\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    System.out.println(\"    \" + listNum + \".\" + t.getTypeIcon() + \u0027[\u0027 + t.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                            + t.toString() + \" (by: \" + t.getDate() + \")\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * Print message that a task has been marked as completed."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param input User input"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param storage Update tasks stored persistently"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @throws DukeException When task has already been marked done or number provided not in range"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public static void handleDone(String input, TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        String[] inputStringArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        if (inputStringArr.length \u003e 1) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            int taskNum \u003d Integer.parseInt(inputStringArr[1]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            int totalTasks \u003d tasks.size();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            if (taskNum \u003c 1 || taskNum \u003e totalTasks) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                throw new DukeException(\"     ☹ OOPS!!! The number provided is not within the range of the \""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                        + \"list.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                Task t \u003d tasks.get(taskNum - 1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                boolean isDone \u003d t.getStatus();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    throw new DukeException(\"     ☹ OOPS!!! The task has already been marked as completed.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    t.setDone();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    System.out.println(\"     Nice! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                            + \"       [\" + \u0027+\u0027 + \"] \" + t);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    storage.rewriteFile(tasks);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! Please specify the completed task\u0027s number.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * When user adds a Todo class task."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param input User input"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param storage Update tasks stored persistently"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @throws DukeException When task description given by user is empty"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public static void handleTodo(String input, TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        String[] inputStringArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        if (inputStringArr.length \u003e 1) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            String taskName \u003d ((input.split(\" \", 2))[1]).strip();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            Todo t \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            tasks.add(t);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            System.out.println(\"     Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    + \"       [T]\" + \"[ ]\" + \u0027 \u0027 + t + \u0027\\n\u0027"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    + \"     Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            storage.appendToFile(\"T | 0 | \" + taskName + \u0027\\n\u0027);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * When user adds a Deadline class task."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param input User input"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param storage Update tasks stored persistently"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public static void handleDeadline(String input, TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        String[] separateTaskDate \u003d input.split(\"/\", 2);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        String taskName \u003d ((separateTaskDate[0].split(\" \", 2))[1]).strip();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        String date \u003d ((separateTaskDate[1].split(\" \", 2))[1]).strip();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        DateTime dt \u003d new DateTime(date);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        Deadline d \u003d new Deadline(taskName, dt.toString());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        tasks.add(d);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                + \"       [D][ ] \" + d + \" (by: \" + dt + \")\\n\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                + \"     Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        storage.appendToFile(\"D | 0 | \" + taskName + \" | \" + dt.toString() + \u0027\\n\u0027);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * When user adds an Event class task."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param input User input"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param storage Update tasks stored persistently"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public static void handleEvent(String input, TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        String[] separateTaskDate \u003d input.split(\"/\", 2);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        String taskName \u003d ((separateTaskDate[0].split(\" \", 2))[1]).strip();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        String date \u003d ((separateTaskDate[1].split(\" \", 2))[1]).strip();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        DateTime dt \u003d new DateTime(date);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        Event e \u003d new Event(taskName, dt.toString());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        tasks.add(e);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                + \"       [E][ ] \" + e + \" (at: \" + dt + \")\\n\""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                + \"     Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        storage.appendToFile(\"E | 0 | \" + taskName + \" | \" + date + \u0027\\n\u0027);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * When user deletes a task from the task list."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param input User input"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param storage Update tasks stored persistently"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public static void handleDelete(String input, TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        String[] inputStringArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        int taskNum \u003d Integer.parseInt(inputStringArr[1]);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        Task t \u003d tasks.get(taskNum - 1);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        tasks.remove(taskNum - 1);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        if (t.getType().equals(\"todo\")) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            System.out.println(\"       \" + t.getTypeIcon() + \u0027[\u0027 + t.getStatusIcon() + \"] \" + t);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        } else if (t.getType().equals(\"event\")) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            System.out.println(\"       \" + t.getTypeIcon() + \u0027[\u0027 + t.getStatusIcon() + \"] \" + t + \" (at: \""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    + t.getDate() + \")\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            System.out.println(\"       \" + t.getTypeIcon() + \u0027[\u0027 + t.getStatusIcon() + \"] \" + t + \" (by: \""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    + t.getDate() + \")\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        System.out.println(\"     Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        storage.rewriteFile(tasks);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * When user finds a task using a keyword."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param input Input from user"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public static void handleFind(String input, TaskList tasks) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        String[] inputStringArr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        String searchTerm \u003d inputStringArr[1];"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        System.out.println(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        int listNum \u003d 1;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            String taskName \u003d t.toString();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            if (taskName.contains(searchTerm)) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                if (t.getType().equals(\"todo\")) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    System.out.println(\"     \" + listNum + \".\" + t.getTypeIcon() + \u0027[\u0027 + t.getStatusIcon() + \"] \" + t);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                } else if (t.getType().equals(\"event\")) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    System.out.println(\"     \" + listNum + \".\" + t.getTypeIcon() + \u0027[\u0027 + t.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                            + t + \" \" + \"(at: \" + t.getDate() + \")\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                    System.out.println(\"     \" + listNum + \".\" + t.getTypeIcon() + \u0027[\u0027 + t.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                            + t + \" (by: \" + t.getDate() + \")\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "                listNum++;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method prints the divider for the application for decorative and clarity purposes."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public static void showLine() {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * This method prints the appropriate error message based on the erroneous user input."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     * @param errorMsg Error message to be printed"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public void showError(String errorMsg) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        System.out.println(errorMsg);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 254
    }
  },
  {
    "path": "src/test/java/DateTimeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.date.DateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "public class DateTimeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public void testGetTime() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        DateTime dt \u003d new DateTime(\"12/12/2019 1800\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        assertEquals(\"6:00pm\", dt.getTime());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 13
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public void testGetType() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        assertEquals(\"todo\", new Todo(\"name\").getType());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    public void testGetTypeIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "        assertEquals(\"[T]\", new Todo(\"name\").getTypeIcon());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 16
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "       [T][ ] borrow book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "       [D][ ] return book (by: 2nd of December 2019, 6pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "       [E][ ] project meeting (at: 6th of June 2019, 12am)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "       [+] borrow book"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "       [+] return book"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    1.[T][+] borrow book"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    2.[D][+] return book (by: 2nd of December 2019, 6pm)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    3.[E][ ] project meeting (at: 6th of June 2019, 12am)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 46
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "deadline return book /by 2/12/2019 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "event project meeting /at 6/6/2019 0000"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "  @ECHO OFF"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "   "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "   REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "   if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "   "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "   REM delete output from previous run"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "   del ACTUAL.TXT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "   "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "   REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "   javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "   IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "       echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "       exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "   )"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "   REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "   "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "   REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "   java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "   "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "   REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shawnlsj97"
        },
        "content": "   FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "shawnlsj97": 22
    }
  }
]
