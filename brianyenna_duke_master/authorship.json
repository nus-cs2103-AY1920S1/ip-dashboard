[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        String statusIcon \u003d getStatusIcon();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        return \"[D][\" + statusIcon + \"] \" + this.description + \" (by: \" + this.deadline + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brianyenna": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    private ArrayList\u003cTask\u003e storedTasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        this.storedTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        Duke d \u003d new Duke();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        d.initDuke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        d.runDuke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        d.terminateDuke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * Method to be run the Duke object. This method is in charge of taking in input from the console"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * and dealing with the different commands."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    public void runDuke() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        boolean contRunning \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        while (contRunning) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            String command \u003d sc.next();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                    case \"bye\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                        contRunning \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                        listStoredTasks();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                        completeTask(sc.nextInt());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                        addToDo(sc.nextLine());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                        addDeadline(sc.nextLine());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                        addEvent(sc.nextLine());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                        deleteTask(sc.nextInt());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                        //Provided input is a task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                        throw new DukeException(\"\\u2639\" + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                printErrorMessage(e);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * For printing out the exception to console"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * @param e DukeException class containing an error message that will be printed to the console"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    public void printErrorMessage(DukeException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        System.out.println(\"\\t\" + e.getMessage());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * Method to delete a task from the storedTasks ArrayList"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * Method is invoked when \"delete\" is input to console"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * @param taskNum"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    public void deleteTask(int taskNum) throws DukeException{"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            Task t \u003d this.storedTasks.get(taskNum-1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            this.storedTasks.remove(taskNum-1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            System.out.println(\"\\tNoted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            System.out.println(\"\\t\\t\" + t);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            System.out.println(\"\\tNow you have \" + this.storedTasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            throw new DukeException(\"\\u2639\" + \" OOPS!!! The task number is invalid!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * Method to add a ToDo object"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * @param taskDescription the string containing the description of the task"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    public void addToDo(String taskDescription) throws DukeException{"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        if (taskDescription.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            throw new DukeException(\"\\u2639\" + \" OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        Task t \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        this.storedTasks.add(t);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        printAddTaskOutput(t);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * Method to add a Deadline object"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * @param taskDescriptionwithDeadline the string containing the description and deadline"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     *                                    of the task (unsplit). Will split using \"/by\" as"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     *                                    delimiter"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    public void addDeadline(String taskDescriptionwithDeadline) throws DukeException{"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            //If the input is missing /by, the input is of the wrong form"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            String[] strArr \u003d taskDescriptionwithDeadline.split(\"/by\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            String description \u003d strArr[0].trim();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            String deadline \u003d strArr[1].trim();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            //Either description or duration is missing, but /by is possibly present"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            if (description.length() \u003d\u003d 0 || deadline.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                throw new DukeException(\"\\u2639\" + \" OOPS!!! The description/deadline of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            Task t \u003d new Deadline(description, deadline);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            this.storedTasks.add(t);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            printAddTaskOutput(t);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            throw new DukeException(\"\\u2639\" + \" OOPS!!! The description/deadline of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * Method to add an Event object."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * @param taskDescriptionwithDuration the string containing the description and duration"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     *                                    of the event (unsplit). Will split using \"/at\" as"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     *                                    delimiter"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    public void addEvent(String taskDescriptionwithDuration) throws DukeException{"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            //If the input is missing /at, the input is of the wrong form"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            String[] strArr \u003d taskDescriptionwithDuration.split(\"/at\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            String description \u003d strArr[0].trim();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            String duration \u003d strArr[1].trim();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            //Either description or duration is missing, but /at is possibly present"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            if (description.length() \u003d\u003d 0 || duration.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                throw new DukeException(\"\\u2639\" + \" OOPS!!! The description/duration of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            Task t \u003d new Event(description, duration);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            this.storedTasks.add(t);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            printAddTaskOutput(t);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            throw new DukeException(\"\\u2639\" + \" OOPS!!! The description/duration of an event cannot be empty.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * Helper function to print output to console whenever a task is added (applies"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * to ToDos, Deadlines and Events)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * @param t Can be a Deadline, Event or Todo object"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    public void printAddTaskOutput(Task t) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        System.out.println(\"\\t\\t\" + t);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        System.out.println(\"\\tNow you have \" + this.storedTasks.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * Method to be invoked whenever a task is completed."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * Method is invoked when \"done\" is input to console"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * @param taskNum the number of the task as shown whenever `list` is typed in the console"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    public void completeTask(int taskNum) throws DukeException{"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            Task t \u003d this.storedTasks.get(taskNum - 1); //Because storedTasks is zero-indexed"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            t.markAsDone();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            System.out.println(\"\\tNice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            System.out.println(\"\\t\\t\" + t);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            throw new DukeException(\"\\u2639\" + \" OOPS!!! The task number is invalid!\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * Method to be invoked to list all existing tasks"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * Method is invoked when \"list\" is input to console"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    public void listStoredTasks() {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        for (Task t : this.storedTasks) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            System.out.println(\"\\t\" + counter + \". \" + t);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * Initialisation method for Duke object. This is meant to encapsulate all the greetings"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * and other initialisations required in the future."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    public void initDuke() {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\\n\""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                          +\"\\tHello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                          +\"\\tWhat can I do for you?\\n\""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                          +\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * A method to clean-up the Duke object when it is no longer needed. This is meant to"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     * encapsulation all termination logic required now and in the future."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "     */"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    public void terminateDuke() {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\\n\""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                          +\"\\tBye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "                          +\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brianyenna": 230,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "   public DukeException(String errorMsg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "       super(errorMsg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "   }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brianyenna": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    private String duration;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    public Event(String description, String duration) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        String statusIcon \u003d getStatusIcon();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        return \"[E][\" + statusIcon + \"] \" + this.description + \" (at: \" + this.duration + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brianyenna": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        return isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        String statusIcon \u003d getStatusIcon();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        return \"[\" + statusIcon + \"] \" + this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brianyenna": 22
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        String statusIcon \u003d getStatusIcon();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "        return \"[T][\" + statusIcon + \"] \" + this.description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brianyenna": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "event"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "deadline /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "deadline return books"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "deadline return books /by Sunday"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "event project meeting"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "event /at Sunday 2-4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "event project meeting /at Sunday 2-4pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "blah"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "brianyenna": 21
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "if ! javac -cp ../out/production/main -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brianyenna"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brianyenna"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "brianyenna": 34
    }
  }
]
