[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "test {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 13,
      "hcwong": 22
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "//CHECKSTYLE:OFF"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "//CHECKSTYLE:ON"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Main method."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        // TODO: Don\u0027t hardcode"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.storage \u003d new Storage(\"/Users/joshuawong/Documents/NUS/Y2S1/CS2103/duke/data/duke.txt\"); "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            this.tasks \u003d this.storage.load();    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            this.ui.printReadError();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Runs the duke program."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.ui.printWelcome();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        boolean shouldRun \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        while (shouldRun) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                String strCommand \u003d this.ui.readCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                Command c \u003d Parser.parse(strCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                c.execute(this.tasks, this.ui, this.storage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                shouldRun \u003d !c.isExit();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                ui.printError(e);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                ui.print(\"Passed in an invalid date\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            } "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 58
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.DateUtil;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "//CHECKSTYLE:OFF"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "//CHECKSTYLE:ON"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Handles the various commands."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param command String"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public static Command parse(String command) throws DukeException, ParseException { "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        String keyword \u003d command.split(\" \")[0].trim();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        switch (keyword) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        case \"bye\": {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        case \"list\": {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        case \"done\": {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return parseDoneCommand(command);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        case \"todo\": {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return parseTodoCommand(command);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        case \"deadline\": {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return parseDeadlineCommand(command);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        case \"event\": {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return parseEventCommand(command);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        case \"delete\": {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return parseDeleteCommand(command);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        case \"find\": {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return parseFindCommand(command);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            throw new InvalidCommandException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Parse Done command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param command String"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws InvalidCommandException if the Done command is not correct"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private static Command parseDoneCommand(String command) throws InvalidCommandException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        String[] doneArr \u003d command.split(\" \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        if (doneArr.length !\u003d 2) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            throw new InvalidCommandException(\"\\u2639 OOPS!!! Done command should only have a valid index\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        int indexToEdit \u003d Integer.parseInt(doneArr[1].trim());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return new DoneCommand(indexToEdit);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Parse Delete command."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param command String"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws InvalidCommandException if the arguments provided are invalid"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private static Command parseDeleteCommand(String command) throws InvalidCommandException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        String[] deleteArr \u003d command.split(\" \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        if (deleteArr.length !\u003d 2) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            throw new InvalidCommandException(\"\\u2639 OOPS!!! Done command should only have a valid index\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        int indexToEdit \u003d Integer.parseInt(deleteArr[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return new DeleteCommand(indexToEdit);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Parse Deadline command."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param command String"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws InvalidTaskArgumentException if Deadline arguments are invalid"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws ParseException if it fails to parse the date"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private static Command parseDeadlineCommand(String command) "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        throws InvalidTaskArgumentException, ParseException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        String[] commandArr \u003d command.replace(\"deadline\", \"\").trim().split(\"/by \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        if (commandArr.length !\u003d 2) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            throw new InvalidTaskArgumentException(\"\\u2639 OOPS!!! Deadline must have a description and date\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return new DeadlineCommand(commandArr[0].trim(), DateUtil.parseStringToDate(commandArr[1].trim()));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Parse Event command."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param command String"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws InvalidTaskArgumentException if Event arguments are invalid"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws ParseException if it fails to parse the date"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private static Command parseEventCommand(String command) "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        throws InvalidTaskArgumentException, ParseException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        String[] commandArr \u003d command.replace(\"event\", \"\").trim().split(\"/at \");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        if (commandArr.length !\u003d 2) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            throw new InvalidTaskArgumentException(\"\\u2639 OOPS!!! Event must have a description and date\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return new EventCommand(commandArr[0].trim(), DateUtil.parseStringToDate(commandArr[1].trim()));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Parse ToDo command."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param command String"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws InvalidTaskArgumentException if ToDo arguments are invalid"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private static Command parseTodoCommand(String command) throws InvalidTaskArgumentException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        String name \u003d command.replace(\"todo\", \"\").trim();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        if (\"\".equals(name)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            throw new InvalidTaskArgumentException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\"); "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return new ToDoCommand(name);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Parse Find Command."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param command String"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws InvalidTaskArgumentException if arguments are invalid"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private static Command parseFindCommand(String command) throws InvalidTaskArgumentException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        String keyword \u003d command.replace(\"find\", \"\").trim();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        if (\"\".equals(keyword)) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            throw new InvalidTaskArgumentException(\"\\u2639 OOPS!!! The description of a find cannot be empty.\"); "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return new FindCommand(keyword);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 132
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Empty constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constuctor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public TaskList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Adds an item top the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param task Task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Removes an item from the list based on 1-indexed index."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return Task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return this.list.remove(index - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Gets the element based on 1-indexed index."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return Task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return this.list.get(index - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Gets the size of the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @returns int the size of the list"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 56
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class ByeCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Check if exit."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Execute."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        ui.printBye();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 22
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param task TaskList"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param ui Ui"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param storage Storage"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Check if it should exit."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public boolean isExit();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 22
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class DeadlineCommand implements Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private Date time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public DeadlineCommand(String name, Date time) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.name \u003d name; "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Check if exit. "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Execute."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            tasks.add(new Deadline(this.name, this.time));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            ui.sendAddTaskAck(tasks.get(tasks.getSize()), tasks.getSize());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            ui.printWriteError();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 44
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.InvalidIndexException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Check if exit."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Execute."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            if (index \u003e tasks.getSize() || index \u003c 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                throw new InvalidIndexException(\"\\u2639 OOPS!!! Trying to delete invalid task\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            Task removedTask \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            ui.prettyPrint4(\"Noted. I\u0027ve removed the task:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            ui.prettyPrint6(String.format(\"%s\", removedTask)); "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            ui.prettyPrint4(String.format(\"Now you have %d tasks in the list.\", tasks.getSize())); "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            ui.printWriteError();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 46
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.InvalidIndexException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Check if exit."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Execute."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            if (index \u003e tasks.getSize() || index \u003c 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                throw new InvalidIndexException(\"\\u2639 OOPS!!! Trying to modify invalid task\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            task.markDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            ui.prettyPrint4(String.format(\"Nice! I\u0027ve marked this task as done:\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            ui.prettyPrint6(String.format(\"%s\", task)); "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            ui.printWriteError();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 46
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class EventCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private Date time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public EventCommand(String name, Date time) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.name \u003d name; "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Check if exit. "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Execute."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            tasks.add(new Event(this.name, this.time));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            ui.sendAddTaskAck(tasks.get(tasks.getSize()), tasks.getSize());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            ui.printWriteError();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 43
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class FindCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Check if exit."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Execute."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        ui.prettyPrint4(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            if (task.getName().contains(this.keyword)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                ui.prettyPrint4(String.format(\"%d.%s\", counter, task));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 40
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Should exit."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        ui.prettyPrint4(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        int length \u003d tasks.getSize();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d length; i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            ui.prettyPrint4(String.format(\"%d.%s\", i, tasks.get(i)));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 26
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class ToDoCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public ToDoCommand(String name) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Check if exit."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return false; "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Execute."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            tasks.add(new ToDo(this.name));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            ui.sendAddTaskAck(tasks.get(tasks.getSize()), tasks.getSize());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            ui.printWriteError();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "           "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 41
    }
  },
  {
    "path": "src/main/java/duke/error/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.lang.Exception;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param message String"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 13
    }
  },
  {
    "path": "src/main/java/duke/error/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Overrides the toString method."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 16
    }
  },
  {
    "path": "src/main/java/duke/error/InvalidFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class InvalidFileException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public InvalidFileException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Overrides the toString method."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 16
    }
  },
  {
    "path": "src/main/java/duke/error/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public InvalidIndexException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Overrides the toString method."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 16
    }
  },
  {
    "path": "src/main/java/duke/error/InvalidTaskArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class InvalidTaskArgumentException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public InvalidTaskArgumentException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Overrides the toString method."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 16
    }
  },
  {
    "path": "src/main/java/duke/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/TaskList.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/Parser.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/util/Storage.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/util/Ui.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/util/DateUtil.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/task/TaskType.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/task/Event.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/task/Task.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/task/Deadline.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/task/ToDo.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/command/EventCommand.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/command/ByeCommand.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/command/DeleteCommand.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/command/ListCommand.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/command/Command.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/command/ToDoCommand.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/command/DeadlineCommand.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/command/FindCommand.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/command/DoneCommand.java"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/Duke.java"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/error/InvalidCommandException.java"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/error/InvalidFileException.java"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/error/InvalidIndexException.java"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/error/DukeException.java"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "./duke/error/InvalidTaskArgumentException.java"
      }
    ],
    "authorContributionMap": {
      "hcwong": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public Deadline(String name, Date time) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        super(name, Optional.of(time), TaskType.DEADLINE, false);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor with isDone."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public Deadline(String name, Date time, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        super(name, Optional.of(time), TaskType.DEADLINE, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Overrides toString method."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return String.format(\"[D]%s %s (by: %s)\", getStatus(), this.name, this.time.get());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 29
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public Event(String name, Date time) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        super(name, Optional.of(time), TaskType.EVENT, false);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor with isDone."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public Event(String name, Date time, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        super(name, Optional.of(time), TaskType.EVENT, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Overrides toString method."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return String.format(\"[E]%s %s (at: %s)\", getStatus(), this.name, this.time.get());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 29
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.task; "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    TaskType type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    Optional\u003cDate\u003e time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param name String"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public Task(String name, Optional\u003cDate\u003e time, TaskType type, boolean isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Mark task as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Get name."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Get time."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return Optional of String"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public Optional\u003cDate\u003e getTime() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Get type."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return TaskType"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public TaskType getType() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Get isDone."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Get the status."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    String getStatus() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return \"[\\u2713]\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            return \"[\\u2718]\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 73
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    TODO, EVENT, DEADLINE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 5
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        super(name, Optional.empty(), TaskType.TODO, false);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constuctor with isDone."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public ToDo(String name, boolean isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        super(name, Optional.empty(), TaskType.TODO, isDone);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Overrides toString method."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return String.format(\"[T]%s %s\", getStatus(), this.name);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 28
    }
  },
  {
    "path": "src/main/java/duke/util/DateUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class DateUtil {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Parse String from File into Date."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param strDate the date in the form of a string"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws ParseException if it fails to parse the date"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public static Date parseFileStringToDate(String strDate) throws ParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return new SimpleDateFormat(\"EEE MMM dd HH:mm:ss yyyy zzz\").parse(strDate);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Parse String into Date."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param strDate the date in the form of a String"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws ParseException if it fails to parse the date"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public static Date parseStringToDate(String strDate) throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return new SimpleDateFormat(\"dd/mm/yy HHmm\").parse(strDate);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    } "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 25
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "//CHECKSTYLE:OFF - Doing this because Paths need the * import"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.nio.file.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "//CHECKSTYLE:ON"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.lang.IndexOutOfBoundsException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private Path path;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.path \u003d Paths.get(path);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }  "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Save data to file and assumes that this destination is fixed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Also overwrite file if it already exists."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param data List of Task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws IOException if an error appears"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void save(TaskList data) throws IOException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        String dataString \u003d encodeData(data);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        Files.write(this.path, "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    dataString.getBytes(), "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    StandardOpenOption.CREATE,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    StandardOpenOption.WRITE,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    StandardOpenOption.TRUNCATE_EXISTING);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Load data from file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return List of Task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @throws IOException if an error appears"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public TaskList load() throws IOException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return this.decodeData(Files.readAllLines(this.path));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Transform the Task List into Strings."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param data List of Task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private String encodeData(TaskList data) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d data.getSize(); i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            Task task \u003d data.get(i);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            String name \u003d task.getName();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            TaskType type \u003d task.getType();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            String isDone \u003d task.getIsDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            String time \u003d task.getTime().isPresent()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                            ? String.format(\" | %s\", task.getTime().get())"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                            : \"\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            result +\u003d String.format(\"%s | %s | %s%s\\n\", type, isDone, name, time);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Decode the data."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param data List of String"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return List of Task"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private TaskList decodeData(List\u003cString\u003e data) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        TaskList result \u003d new TaskList();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        for (String line: data) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                // Need special character here or the split will mess up"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                String[] lineArr \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                switch (lineArr[0]) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                case \"EVENT\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    result.add(new Event(lineArr[2],"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                               DateUtil.parseFileStringToDate(lineArr[3]),"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                               lineArr[1].equals(\"1\")));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                case \"TODO\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    result.add(new ToDo(lineArr[2], lineArr[1].equals(\"1\")));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                case \"DEADLINE\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    result.add(new Deadline(lineArr[2], "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                               DateUtil.parseFileStringToDate(lineArr[3]), "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                               lineArr[1].equals(\"1\")));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                System.out.println(\"Error decoding data from file\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                System.out.println(\"Error decoding the date from the file\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            }            "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    } "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 107
    }
  },
  {
    "path": "src/main/java/duke/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Reads command from System.in."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Generic print."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param str String"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void print(String str) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        System.out.println(str);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Pretty prints the output to the user with indentation of 4."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param str the String to be printed"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void prettyPrint4(String str) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        System.out.printf(\"    %s\\n\", str);    "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Pretty prints the output to the user with indentation of 4."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param str the String to be printed "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void prettyPrint6(String str) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        System.out.printf(\"      %s\\n\", str);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Sends task acknowledgement."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param task Task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param size int the size of the task list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void sendAddTaskAck(Task task, int size) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        prettyPrint4(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        prettyPrint6(task.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        prettyPrint4(String.format(\"Now you have %d tasks in the list.\", size));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    } "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Print welcome message."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void printWelcome() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        System.out.printf(\"Hello I\u0027m Duke\\nWhat can I do for you\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Print bye message."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void printBye() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Print write error."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void printWriteError() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        System.out.println(\"Sorry, failed to write to the disc\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Print read error."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void printReadError() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        System.out.println(\"Sorry, failed to read from the disc\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * Print error."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     * @param e Exception"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hcwong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void printError(Exception e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 95
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.command.ToDoCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    void parseToDoCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            assertTrue(Parser.parse(\"todo eat\") instanceof ToDoCommand);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            // fail silently"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 17
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    void taskListAdd() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        tasks.add(new ToDo(\"I love testing\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        assertEquals(1, tasks.getSize());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    void taskListRemove() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        tasks.add(new ToDo(\"I will remove this test\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        assertEquals(1, tasks.getSize());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        tasks.remove(1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        assertEquals(0, tasks.getSize());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 25
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "todo Eat"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": "todo Sleep"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "event project meeting /at 29/11/2018 1900"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "event fake event"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "find Ea"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "hcwong": 12
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "# From: https://stackoverflow.com/questions/6623161/javac-option-to-compile-all-java-files-under-a-given-directory-recursively"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": "# Get all of our java files"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": "find ../src/main -name *.java \u003e sources.txt"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "java -classpath ../bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "# Delete the data file after each to run to prevent state from persisting"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "rm ../data/duke.txt \u0026\u0026 touch ../data/duke.txt"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "then"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "else"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "hcwong": 41
    }
  }
]
