[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Tan Yuanhong": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    private static void formattedPrint(String content) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                \"     \" + content + \"\\n\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                \"    ____________________________________________________________\\n    \");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    private static void addTask(Task task, List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task: \" + \"\\n\" + \"       \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                + task.toString() + \"\\n\" + \"     \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                + \"Now you have \" + list.size() + (list.size() \u003d\u003d 1 ? \" task in the list.\" : \" tasks in the list.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        formattedPrint(output);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    private static String[] splitByKeyword(String input, String keyword) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "            int index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "            String[] res \u003d new String[2];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "            index \u003d input.indexOf(keyword);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "            if (index \u003d\u003d -1)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                throw new DukeException(\"No keyword \" + keyword + \" is found.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "            res[0] \u003d input.substring(0, index - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "            if (res[0].length() \u003d\u003d 0)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                throw new DukeException(\"No description found before keyword \" + keyword + \".\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "            res[1] \u003d input.substring(index + keyword.length() + 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "            if (res[1].length() \u003d\u003d 0)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                throw new DukeException(\"No description found after keyword \" + keyword + \".\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "            return res;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "            throw new DukeException(\"Please check your format around keyword \" + keyword);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                \"     Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                \"     What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        boolean shouldRun \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        while (shouldRun) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                String userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                switch (DukeCommand.parseCommand(userInput)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                    case BYE: {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        formattedPrint(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        shouldRun \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                    case LIST: {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        StringBuilder builder \u003d new StringBuilder(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                            builder.append(\"\\n\" + \"     \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                            builder.append(i + 1).append(\".\").append(tasks.get(i).toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        formattedPrint(builder.toString());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                    case DONE: {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        int doneNo \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        tasks.get(doneNo).markAsDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        String tempOut \u003d \"Nice! I\u0027ve marked this task as done: \" + \"\\n\" + \"       \" +"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                                tasks.get(doneNo).toString();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        formattedPrint(tempOut);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                    case DELETE: {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        int removeNo \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        String tempOut \u003d \"Noted. I\u0027ve removed this task: \" + \"\\n\" + \"       \" +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                                tasks.get(removeNo).toString() + \"\\n\" + \"     \" +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                                \"Now you have \" + (tasks.size() - 1) +"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                                (tasks.size() - 1 \u003d\u003d 1 ? \" task in the list.\" : \" tasks in the list.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        tasks.remove(removeNo);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        formattedPrint(tempOut);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                    case TODO: {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        if (userInput.length() \u003d\u003d 4)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        String restOfInput \u003d userInput.substring(5);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        addTask(new ToDo(restOfInput), tasks);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                    case DEADLINE: {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        if (userInput.length() \u003d\u003d 8)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                            throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        userInput \u003d userInput.substring(9);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        String[] temp \u003d splitByKeyword(userInput, \"/by\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        addTask(new Deadline(temp[0], temp[1]), tasks);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                    case EVENT: {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        if (userInput.length() \u003d\u003d 5)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                            throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        userInput \u003d userInput.substring(6);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        String[] temp \u003d splitByKeyword(userInput, \"/at\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        addTask(new Event(temp[0], temp[1]), tasks);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                    default: {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                        throw new DukeException(\"Command found but no implementation is provided.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "                formattedPrint(\"☹ OOPS!!! \" + e.getMessage());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Tan Yuanhong": 111,
      "Jeffry Lum": 2,
      "-": 2
    }
  },
  {
    "path": "src/main/java/DukeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "public enum DukeCommand {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    BYE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    public static DukeCommand parseCommand(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        if (userInput.matches(\"bye\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "            return BYE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        } else if (userInput.matches(\"list\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "            return LIST;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        } else if (userInput.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "            return DONE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        } else if (userInput.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "            return DELETE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        } else if (userInput.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "            return TODO;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        } else if (userInput.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "            return DEADLINE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        } else if (userInput.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "            return EVENT;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Tan Yuanhong": 29
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    DukeException(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        return \"DukeException: \" + this.getMessage();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Tan Yuanhong": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Tan Yuanhong": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Tan Yuanhong": 24
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Tan Yuanhong": 11
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "       [T][?] borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "     Now you have 1 task in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "     1.[T][?] borrow book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "     Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "       [T][?] borrow book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "       [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "       [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "     1.[T][?] borrow book"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "     2.[D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "     3.[E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "     Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "       [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "     ☹ OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "     ☹ OOPS!!! No keyword /by is found."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "     ☹ OOPS!!! Please check your format around keyword /by"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "     ☹ OOPS!!! Please check your format around keyword /by"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "     ☹ OOPS!!! No keyword /by is found."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "     ☹ OOPS!!! No keyword /at is found."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    "
      }
    ],
    "authorContributionMap": {
      "Tan Yuanhong": 77
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "todo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "blah"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "deadline sth /at Sunday"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "deadline asd /by"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "deadline asd"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "event sth /by Mon 2-4pm"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Tan Yuanhong": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Tan Yuanhong"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Tan Yuanhong": 21
    }
  }
]
