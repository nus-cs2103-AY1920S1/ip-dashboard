[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.1.0\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "test {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "test {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    systemProperty \"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        attributes("
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u0027Main-Class\u0027: \u0027Launcher\u0027"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        )"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 17,
      "SQwQ": 56
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Duke is an event scheduler."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "### Feature 1 "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Adding Tasks to Duke"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "### `todo` - To add a todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "A todo task will be added to Duke"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "`todo (description of task)`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003e`Got it. I\u0027ve added this task:`\u003c/br\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003e`[T][✘] example of todo`\u003c/br\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003e`Now you have 1 tasks in the list`\u003c/br\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "### `event` - To add an event"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "An event task will be added to Duke"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "`event (description of event) /at 12/12/12`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003e`Got it. I\u0027ve added this task:`\u003c/br\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003e`[e][✘] example of event (at: December 12, 2012)`\u003c/br\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003e`Now you have 2 tasks in the list`\u003c/br\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "### `deadline` - To add a deadline"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "A deadline will be added to Duke"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "`deadline (description of deadline) /at 12/12/12`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003e`Got it. I\u0027ve added this task:`\u003c/br\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003e`[D][✘] example of deadline (at: December 12, 2012)`\u003c/br\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003e`Now you have 3 tasks in the list`\u003c/br\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "### Feature 2"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Modifying Tasks in Duke"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "### `delete` - To delete a task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "The numbered task will be deleted"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "`delete 3`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003e`Noted. I\u0027ve removed this task:`\u003c/br\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003e`[T][✘] example of deleted task`\u003c/br\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003e`\"Now you have 2 tasks in the list.`\u003c/br\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "### `done` - To mark a task as done"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Task will be marked as done"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "`done 2`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003e`Nice! I\u0027ve marked this task as done:`\u003c/br\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003e`[T][✓] example of todo`\u003c/br\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003e`Now you have 2 tasks in the list`\u003c/br\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "### Feature 3"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Utilities"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "### `list` - To show list of tasks"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "A list of all tasks will be shown"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003e`Here are the tasks in your list:`\u003c/br\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003e`1.[T][✘] example of task`\u003c/br\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003e`2.[E][✓] example of task`\u003c/br\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003e`3.[D][✘] example of task`\u003c/br\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "### `find` - To find tasks "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "List of tasks with key word will be shown"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "`find exam`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003e`Here are the matching tasks in your list:`\u003c/br\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003e`1.[T][✘] physics exam`\u003c/br\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003e`2.[T][✓] cs exam tmr`\u003c/br\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003e`3.[T][✘] exam ends today`\u003c/br\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "### `bye` - To exit Duke"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "List of tasks with key word will be shown"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003e`Bye. Hope to see you again soon!`\u003c/br\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003eFind your saved file in the data folder\u003c/br\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "### Acknowledgements"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "Some code from More-OOP is reused in this project"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003ehttps://nus-cs2103-ay1920s1.github.io/website/schedule/week3/project.html\u003c/br\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003eSome code from this tutorial is reused\u003c/br\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cbr\u003ehttps://github.com/SQwQ/duke/blob/master/tutorials/javaFxTutorialPart4.md\u003c/br\u003e"
      }
    ],
    "authorContributionMap": {
      "-": 23,
      "SQwQ": 106
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    Task task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param t Task to be added"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public AddCommand(Task t) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.task \u003d t;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Adds task to TaskList and displays confirmation."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param tasks Class dealing with manipulating global LinkedList storing tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param ui User Interface"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param storage Class dealing with local storage of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert tasks !\u003d null : \"Tasklist instance is null!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert ui !\u003d null : \"Ui instance is null!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (!tasks.isDuplicate(this.task)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            tasks.addTask(this.task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return ui.showAddedTask(this.task, tasks.getListSize());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"Task is a duplicate!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 31
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Abstract method to manipulate TaskList/UI/Storage."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param tasks Class dealing with manipulating global LinkedList storing tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param ui User Interface"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param storage Class dealing with local storage of tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return updated task as a string"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 20
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static String DEADLINE_CMD \u003d \"deadline\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static String DEADLINE_PREFIX \u003d \"[D]\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static String DEADLINE_DATE_PREFIX \u003d \"(by: \";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param s Input String specifying task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Deadline(String s) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Returns Task as formatted String."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return formatted String"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return super.getString(super.toString(), DEADLINE_CMD, DEADLINE_PREFIX, DEADLINE_DATE_PREFIX);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return super.getString(super.toFileString(), DEADLINE_CMD, DEADLINE_PREFIX, DEADLINE_DATE_PREFIX);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 32
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    int id;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param i Index of task to be deleted"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public DeleteCommand(int i) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.id \u003d i;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Deletes task from TaskList and displays confirmation."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param tasks Class dealing with manipulating global LinkedList storing tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param ui User Interface"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param storage Class dealing with local storage of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException If task does not exist"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert tasks !\u003d null : \"Tasklist instance is null!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert ui !\u003d null : \"Ui instance is null!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Task t \u003d tasks.getTask(id);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        tasks.deleteTask(this.id);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return ui.showDelete(t, tasks.getListSize());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 29
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Text dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private VBox vbox;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Circle clip \u003d new Circle(20, 20, 20);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Return Duke\u0027s DialogueBox after flipping it."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return DialogueBox with Duke\u0027s image on the left"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 73
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    int id;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param i Index of task to be done"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public DoneCommand(int i) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.id \u003d i;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Marks task in Tasklist as complete and displays confirmation."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param tasks Class dealing with manipulating global LinkedList storing tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param ui User Interface"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param storage Class dealing with local storage of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException If task does not exist"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert tasks !\u003d null : \"Tasklist instance is null!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert ui !\u003d null : \"Ui instance is null!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        tasks.completeTask(this.id);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return ui.showComplete(tasks.getTask(this.id));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 28
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    static String SUCCESS \u003d \"Setup Successful\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param filePath Location of save file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Tries to load save file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return string message signifying success or failure"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String setUp() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return SUCCESS;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Returns welcome message."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return Welcome string"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String welcome() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return ui.showWelcome();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Runs input through parser and execute command."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return result of executing input"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            response \u003d c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 69,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * DukeException to handle all kinds of exceptions."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param message text to be displayed when thrown"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static String EVENT_CMD \u003d \"event\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static String EVENT_PREFIX \u003d \"[E]\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static String EVENT_DATE_PREFIX \u003d \"(at: \";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param s Input String specifying task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Event(String s) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * returns Task as formatted String."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return formatted String"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return super.getString(super.toString(), EVENT_CMD, EVENT_PREFIX, EVENT_DATE_PREFIX);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return super.getString(super.toFileString(), EVENT_CMD, EVENT_PREFIX, EVENT_DATE_PREFIX);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 27
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Update save file with all changes and display confirmation."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param tasks Class dealing with manipulating global LinkedList storing tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param ui User Interface"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param storage Class dealing with local storage of tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException If fails to save file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert tasks !\u003d null : \"Tasklist instance is null!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert ui !\u003d null : \"Ui instance is null!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert  storage !\u003d null : \"Storage instance is null!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        storage.updateSaveFile(tasks.getAllTasks());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return ui.showGoodbye();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 26
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    String keywords \u003d \"\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public FindCommand(String str) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.keywords \u003d str;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert tasks !\u003d null : \"Tasklist instance is null!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert ui !\u003d null : \"Ui instance is null!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return ui.showMatch(tasks.findTasks(this.keywords));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 15
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Display all tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param tasks Class dealing with manipulating global LinkedList storing tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param ui User Interface"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param storage Class dealing with local storage of tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert tasks !\u003d null : \"Tasklist instance is null!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert ui !\u003d null : \"Ui instance is null!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return ui.showList(tasks.getAllTasks());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 22
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static String FILE_PATH \u003d \"tasks.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static String FXML_PATH \u003d \"/view/MainWindow.fxml\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static String TITLE \u003d \"Duke\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Duke duke \u003d new Duke(FILE_PATH);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(FXML_PATH));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            assert fxmlLoader !\u003d null : \"fxmlLoader is null!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            stage.setTitle(TITLE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().initialize();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 38
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Image userImage \u003d new Image(MainWindow.class.getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Image dukeImage \u003d new Image(MainWindow.class.getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Create new instance of Duke and displays welcome message and error message if there is something"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * wrong with loading the save file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert duke !\u003d null : \"duke is null!\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String setupMsg \u003d duke.setUp();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (!setupMsg.equals(Duke.SUCCESS)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    DialogBox.getDukeDialog(setupMsg, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String response \u003d duke.welcome();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        );"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 77
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    static String EXIT_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    static String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    static String DONE_COMMAND \u003d \"done \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    static String FIND_COMMAND \u003d \"find \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    static String DELETE_COMMAND \u003d \"delete \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    static String ADD_TODO_COMMAND \u003d \"todo \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    static String ADD_DEADLINE_COMMAND \u003d \"deadline \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    static String ADD_EVENT_COMMAND \u003d \"event \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static String IDENTIFIER \u003d \"UnIqUE_kEy_4324345\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Parses all user inputs."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param command user input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return command to be executed"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException If invalid command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (isEditTaskCommand(command)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return getEditTaskCommand(command);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (isAddTaskCommand(command)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return getAddTaskCommand(command);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (isFunctionalCommand(command)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return getFunctionalCommand(command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static boolean isAddTaskCommand(String command) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (command.startsWith(ADD_TODO_COMMAND)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                || command.startsWith(ADD_DEADLINE_COMMAND)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                || command.startsWith(ADD_EVENT_COMMAND)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static boolean isEditTaskCommand(String command) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (command.startsWith(DELETE_COMMAND)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                || command.startsWith(DONE_COMMAND)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static boolean isFunctionalCommand(String command) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (command.equals(EXIT_COMMAND)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                || command.equals(LIST_COMMAND)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                || command.startsWith(FIND_COMMAND)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static Command getAddTaskCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (command.startsWith(ADD_TODO_COMMAND)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return new AddCommand(new Todo(command));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (command.startsWith(ADD_DEADLINE_COMMAND)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            if (!command.contains(\"/by \")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Wrong format ! Please follow :\\n deadline return book /by 15/09/19\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                return new AddCommand(new Deadline(formatTime(command)));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (command.startsWith(ADD_EVENT_COMMAND)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            if (!command.contains(\"/at \")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Wrong format ! \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        + \"Please follow :\\n event project meeting /at 15/09/19\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                return new AddCommand(new Event(formatTime(command)));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static Command getEditTaskCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (command.startsWith(DONE_COMMAND)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                int id \u003d Integer.parseInt(command.substring(5));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                return new DoneCommand(id);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! There is no such Task !\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (command.startsWith(DELETE_COMMAND)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                int id \u003d Integer.parseInt(command.substring(7));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                return new DeleteCommand(id);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } catch  (NumberFormatException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! There is no such Task !\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static Command getFunctionalCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (command.equals(EXIT_COMMAND)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (command.equals(LIST_COMMAND)) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else  if (command.startsWith(FIND_COMMAND)) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return new FindCommand(command.substring(5));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * To format time of user input."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param input user input"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return formatted time string"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException if invalid time format"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static String formatTime(String input) throws DukeException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        List\u003cString\u003e formatStrings \u003d Arrays.asList(\"d/M/y HHmm\", \"d/M/y\", \"d/M\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        List\u003cString\u003e outputFormats \u003d Arrays.asList(\"MMMMM dd, yyyy, h:mm a\", \"MMMMM dd, yyyy\", \"MMMMM dd\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String[] temp \u003d input.split(\"/\",2);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        assert temp.length \u003d\u003d 2;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        StringBuilder fullCommand \u003d new StringBuilder(temp[0]);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        StringBuilder rawDate \u003d new StringBuilder(temp[1]);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Date date \u003d null;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        for (int i \u003d 0; i \u003c formatStrings.size(); i++) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                DateFormat df \u003d new SimpleDateFormat(formatStrings.get(i));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                df.setLenient(false);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                date \u003d df.parse(rawDate.toString().substring(3));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                DateFormat formatter \u003d new SimpleDateFormat(outputFormats.get(i));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                fullCommand.append(\"/\").append(IDENTIFIER).append(formatter.format(date));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"Invalid date or time format not acceptable! Please use dd/mm/yy format\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return fullCommand.toString();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 165
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    static String TODO \u003d \"[T]\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    static String DEADLINE \u003d \"[D]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    static String EVENT \u003d \"[E]\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    static String COMPLETE \u003d \"[O]\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    static String INCOMPLETE \u003d \"[X]\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param s location of file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Storage(String s) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.filePath \u003d s;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Loads tasks to task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return LinkedList containing tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException if file does not exist"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public LinkedList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        LinkedList\u003cTask\u003e result \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"Save file not found! Duke will be saving everything to a new file.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            List\u003cString\u003e temp \u003d Files.lines(file.toPath())"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    .collect(Collectors.toList());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            for (String s : temp) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                Task curr \u003d null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                String[] strArray \u003d s.split(\". \", 2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                if (strArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    throw new DukeException(\"Invalid data entries in save file!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    String cmd \u003d strArray[1].substring(0, 3);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    String description \u003d strArray[1].substring(6);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    String status \u003d strArray[1].substring(3, 6);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    if (cmd.equals(TODO)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        curr \u003d new Todo(description);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    } else if (cmd.equals(DEADLINE)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        curr \u003d new Deadline(description);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    } else if (cmd.equals(EVENT)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        curr \u003d new Event(description);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        throw new DukeException(\"Please make sure all the entries in your file \""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                                + \"starts with the correct prefix!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    if (status.equals(COMPLETE)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        curr.setDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    } else if (!status.equals(INCOMPLETE)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        throw new DukeException(\"Please make sure all the entries in your file \""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                                + \"starts with the correct prefix!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                result.add(curr);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"File not found!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Updates Save file with any changes."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param tasks Class dealing with manipulating global LinkedList storing tasks"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException if save file fails"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void updateSaveFile(LinkedList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            File saveFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            FileWriter fw \u003d new FileWriter(saveFile, false);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            int i \u003d 1;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                fw.write(i + \". \" + t.toFileString() + \"\\n\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"Save failed\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 103
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static String IDENTIFIER \u003d \"UnIqUE_kEy_4324345\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param description user input describing task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Set symbol for completion status."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Set symbol for completion status for storage file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return O or X symbols"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String getFileStatusIcon() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return (isDone ? \"O\" : \"X\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Mark task as completed."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + this.description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return \"[\" + getFileStatusIcon() + \"]\" + this.description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String format(String command, String cmdPrefix, String datePrefix) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String[] temp \u003d command.split(\"/\", 2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String dateString \u003d temp[1];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String formattedDateString \u003d datePrefix + dateString + \")\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return cmdPrefix + temp[0] + formattedDateString;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Formats string if it is from user input and adds prefix to string if it is read from file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return formatted string"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String getString(String task, String cmd, String prefix, String datePrefix) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (this.isFromInput(task)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            String temp \u003d this.cleanString(task);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            String result \u003d temp.replaceAll(cmd, \" \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return this.format(result, prefix, datePrefix);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return prefix + task;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Checks if this task is equal to Task t."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return true if equal"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public boolean equals(Task t) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return t.toString().equals(this.toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String cleanString(String str) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String result \u003d str.replaceAll(IDENTIFIER,\"\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public boolean isFromInput(String str) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return str.contains(IDENTIFIER);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 96
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    LinkedList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor for case with no existing save file."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.tasks \u003d new LinkedList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor for case with existing save file."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param lst LinkedList storing existing tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public TaskList(LinkedList\u003cTask\u003e lst) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.tasks \u003d lst;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Returns task at given id in linkedlist."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param id index in linkedlist"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Task getTask(int id) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return this.tasks.get(id - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! No such task exist !\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Gets all tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return linkedlist containing all tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public LinkedList\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Deletes task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param i index in linkedlist"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException if index out of bounds"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void deleteTask(int i) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            this.tasks.remove(i - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! No such task exist!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Marks task at index as complete."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param i index in linkedlist"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException if index out of bounds"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void completeTask(int i) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            this.tasks.get(i - 1).setDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! No such task exist!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Adds task to linkedlist."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param t task to be added"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.tasks.add(t);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Returns total number of tasks."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return size of linkedlist"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Returns a list of tasks which contains the keyword."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return list of tasks"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public LinkedList\u003cTask\u003e findTasks(String keywords) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        LinkedList\u003cTask\u003e results \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        for (Task t : this.tasks) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            if (t.toString().contains(keywords)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                results.add(t);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Checks all tasks in the Tasklist to see if t is a duplicate."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return true if task already exist"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public boolean isDuplicate(Task t) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            if (task.equals(t)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 120
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    static String TODO_CMD \u003d \"todo\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    static String TODO_PREFIX \u003d \"[T]\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param s description of task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Todo(String s) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Returns Task as formatted String."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return formatted String"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return format(super.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return format(super.toFileString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String format(String str) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String temp \u003d str.replaceAll(TODO_CMD, \" \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String result \u003d super.cleanString(temp);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return TODO_PREFIX + result;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 38
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Displays welcome message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return \"Hello I\u0027m Duke. What can I do for you?\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Displays error message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param message text of error"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String showError(String message) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Displays goodbye message."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String showGoodbye() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Displays all tasks in given linkedlist."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param tasks linkedlist containing tasks"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String showList(LinkedList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return \"Here are the tasks in your list:\\n\" + showGivenList(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String showMatch(LinkedList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return \"Here are the matching tasks in your list:\\n\" + showGivenList(tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String showGivenList(LinkedList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (!tasks.isEmpty()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                result.append(i + \". \" + t + \"\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return result.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Displays confirmation for deleting task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param t task deleted"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param i total number of tasks"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String showDelete(Task t, int i) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n\" + t + \"\\n\" + \"Now you have \" + i + \" tasks in the list.\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Displays confirmation for completing task."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param t completed task"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String showComplete(Task t) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\" + t;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Displays confirmation for adding task."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param t task added"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param i total number of tasks"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String showAddedTask(Task t, int i) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\" + t + \"\\n\" +  \"Now you have \" + i + \" tasks in the list.\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 94
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c!--@@author nexolute-reused--\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    \u003c!-- reused from https://github.com/nexolute/duke/blob/master/src/main/resources/views/dialog_box.fxml"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    with modifications--\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    \u003cVBox fx:id\u003d\"vbox\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #808080; -fx-background-radius: 5;\" \u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        \u003cText fx:id\u003d\"dialog\" fill\u003d\"#FFFFFF\" style\u003d\"-fx-font-color: #000000;\" wrappingWidth\u003d\"300\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        \u003c/Text\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c!--@@author--\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"45.0\" fitWidth\u003d\"45.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 30,
      "-": 2
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "               AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\"  hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 20
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void dateInputTest1() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            Parser.parse(\"deadline return book /by 29/02/2019 1800\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void dateInputTest2() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            Parser.parse(\"deadline return book /by 31/4/2019 1800\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void dateInputTest3() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            Parser.parse(\"deadline return book /by 31/13/2019 1800\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void dateInputTest4() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            Parser.parse(\"deadline return book /by when the cow jumps over the moon\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void dateInputTest5() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            Parser.parse(\"event return book /at when the cow jumps over the moon\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 45
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void getTaskTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        TaskList t \u003d new TaskList();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Assertions.assertThrows(IndexOutOfBoundsException.class, () -\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            t.getTask(1);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void completeTaskTest() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        TaskList t \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            t.completeTask(1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void deleteTaskTest() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        TaskList t \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            t.deleteTask(1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 33
    }
  }
]
