[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return (this instanceof ExitCommand);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private Task t;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public AddCommand(Task t) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.t \u003d t;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        tasks.addTask(t);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        System.out.println(\"       \" + t);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        System.out.println(\"      Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        if (index \u003e\u003d tasks.getSize()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            throw new NoTaskException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        Task t \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        tasks.deleteTask(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        System.out.println(\"       \" + t);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        System.out.println(\"      Now you have \"  + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class ExitCommand extends Command {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                \"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class ListCommand extends Command {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        tasks.printList();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class DoneCommand extends Command {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        if (index \u003e\u003d tasks.getSize()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            throw new NoTaskException();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        Task t \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        System.out.println(\"       \" + t);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 89
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public Deadline(String description, String by) throws ParseException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.by \u003d Duke.formatter.parse(by);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return Duke.formatter.format(by);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + Duke.formatter.format(by) + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public static SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public Duke(String filePath) throws IOException, ParseException{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public void run() throws ParseException, IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public static void main(String[] args) throws FileNotFoundException, IOException, ParseException{"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        new Duke(\"duke.txt\").run();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 39,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return toString();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class EmptyCommandException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public  EmptyCommandException(String type) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        if (this.type.equals(\"event\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            return \" ☹ OOPS!!! The description of an event cannot be empty.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            return \" ☹ OOPS!!! The description of a \" + this.type + \" cannot be empty.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class UnknownCommandExeption extends DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class NoDateException extends DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public NoDateException(String type) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \" ☹ OOPS!!! The \" + this.type + \" must have a date.\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class NoTaskException extends DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \" ☹ OOPS!!! The task does not exist.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 49
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public Event(String description, String at) throws ParseException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.at \u003d Duke.formatter.parse(at);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return Duke.formatter.format(at);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + Duke.formatter.format(at) + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 20
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    static Command parse(String fullCommand) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        Scanner sc \u003d new Scanner(fullCommand);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        String command \u003d sc.next();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        switch(command) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        case \"done\": {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            if (!sc.hasNextInt()) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                throw new NoTaskException();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            int index \u003d sc.nextInt() - 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            return new DoneCommand(index);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        case \"delete\": {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            if (!sc.hasNextInt()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                throw new NoTaskException();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            int index \u003d sc.nextInt() - 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            Task t;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            String words \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            boolean emptyCommand \u003d !sc.hasNext();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            if (!emptyCommand) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                words \u003d sc.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            case \"todo\": {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                if (emptyCommand) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                    throw new EmptyCommandException(\"todo\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                t \u003d new Todo(words.trim());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            case \"event\": {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                if (emptyCommand) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                    throw new EmptyCommandException(\"event\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                String[] details \u003d words.split(\" /at \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                    throw new NoDateException(\"event\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                t \u003d new Event(details[0].trim(), details[1].trim());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            case \"deadline\": {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                if (emptyCommand) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                    throw new EmptyCommandException(\"deadline\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                String[] details \u003d words.split(\" /by \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                if (details.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                    throw new NoDateException(\"deadline\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                t \u003d new Deadline(details[0].trim(), details[1].trim());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                throw new UnknownCommandExeption();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            return new AddCommand(t);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 77
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        File f \u003d new File(filepath); // create a File for the given file path"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        Scanner sc \u003d new Scanner(f); // create a ScanneZZ:1q!r using the File as the source"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            Task t \u003d new Task(\"\"); // dummie task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            String type \u003d sc.next();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            int done \u003d sc.nextInt();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            String name \u003d sc.next();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            switch(type) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                    t \u003d new Todo(name);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                    t \u003d new Deadline(name, sc.nextLine());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                    t \u003d new Event(name, sc.nextLine());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            if (done \u003d\u003d 1) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                t.markAsDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            taskList.add(t);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "     void save() throws IOException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            String name \u003d task.getDescription();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            int status \u003d task.getStatus()? 1 : 0;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            if (task instanceof Todo) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                fw.write(\"T \" + status + \" \" + name + \"\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                fw.write(\"D \" + status + \" \" + name + \" \" + ((Deadline) task).getBy() + \"\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                fw.write(\"E \" + status + \" \" + name + \" \" +((Event) task).getAt() + \"\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 64
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 30
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        for (Task t: taskList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            System.out.println(\"      \" + counter + \".\" + t) ;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 34
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 11
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                \"     Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                \"     What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "                \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "//    public void showLoadingError() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "//"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        System.out.println(\"    \" + message);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 33
    }
  },
  {
    "path": "src/main/java/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "E 0 potato 25/06/1998 1256"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "D 1 chop 23/12/1987 1200"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "E 0 chop 23/12/1987 1200"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "T 0 yoyo"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 4
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    void getBy() throws ParseException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        Deadline d \u003d new Deadline(\"yoyo\", \"25/02/1998 1600\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        assertEquals(\"25/02/1998 1600\", d.getBy());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 13
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    void dummyTest(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 10
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    void getDescription() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        Todo t \u003d new Todo(\"yoyo watermelon\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "        assertEquals(\"yoyo watermelon\", t.getDescription());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linyutinglyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linyutinglyt": 11
    }
  }
]
