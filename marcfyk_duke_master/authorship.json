[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "run {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.1.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    modules \u003d [ \"javafx.controls\", \"javafx.fxml\"]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 34,
      "-": 15
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Duke is a offline java application that helps you track and manage various tasks.  "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Tasks that you can track are `ToDos`, `Deadlines` and `Events`.  "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Duke also utilises of local storage, remembering your tasks even after the application has been closed.  "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "## Overview"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- [\u003cb\u003eScreenShots\u003c/b\u003e](#screenshots)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- [\u003cb\u003eFeatures\u003c/b\u003e](#features)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- [\u003cb\u003eCommands\u003c/b\u003e](#commands)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- [\u003cb\u003eUsage\u003c/b\u003e](#usage)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "## \u003ca name\u003d\"screenshots\"\u003e\u003c/a\u003eScreenShots"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- Adding Tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "![adding-tasks](images/adding-tasks.png)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- Viewing Tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "![viewing-tasks](images/viewing-tasks.png)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- Doing Tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "![doing-tasks](images/doing-tasks.png)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- Finding Tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "![finding-tasks](images/finding-tasks.png)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- Deleting Tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "![deleting-tasks](images/deleting-tasks.png)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- Invalid Commands"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "![invalid-commands](images/invalid-commands.png)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- Tell Duke Bye"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "![bye-commands](images/bye-commands.png)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "## \u003ca name\u003d\"features\"\u003e\u003c/a\u003eFeatures "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "### List of Features:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "1. [Tracks various types of tasks](#track-tasks)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "2. [Text search through your saved tasks](#text-search)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "3. [View your tasks chronologically by time](#view-tasks)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "4. [Interact with chatbot](#chatbot)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "5. [Tasks are saved on local storage](#save-tasks)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "### \u003ca name\u003d\"track-tasks\"\u003e\u003c/a\u003eTracks various types of tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Duke can manage your pending tasks such as [todos](#todo), [deadlines](#deadline), and [events](#event). "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Tasks can be given a text description. "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Tasks such as [todos](#todo) only has a text description while tasks such as [deadlines](#deadline) and [events](#event) must be supplied with a Date and Time as well.  "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "\u003ca name\u003d\"todo\"\u003e\u003c/a\u003e`Todos` are pending tasks that you may want to save to duke that does not have any time restriction.  "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Examples of such tasks could be revision sessions, movies to watch, etc."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "\u003ca name\u003d\"deadline\"\u003e\u003c/a\u003e`Deadlines` are pending tasks that you may want to save to duke that are to be completed by a certain date or time.  "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Examples of such tasks could be assignments, house chores, etc.  "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "\u003ca name\u003d\"event\"\u003e\u003c/a\u003e`Events` are pending tasks that you may want to save to duke that are going to be available at a certain date or time.  "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Examples of such tasks could be examinations, driving lessons, etc.  "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "These tasks can be added, marked as done, or deleted by our list of available commands found [here](#commands).  "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "For a more detailed description and guide of our commands, you can find it [here](#usage)."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "### \u003ca name\u003d\"text-search\"\u003e\u003c/a\u003eText search through your saved tasks"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Duke allows the user to quickly look up tasks by matching text."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Since you may have many types of tasks saved into duke, you may be overwhelmed when searchin for particular tasks due to the sheer size of tasks being tracked by duke."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Therefore, with duke\u0027s search capabilities, you will be able to filter out only the relevant tasks that you want to look up.  "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "The relevant command can be found [here](#commands).  "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "For a more detailed description, you can find it [here](#usage)."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "### \u003ca name\u003d\"view-tasks\"\u003e\u003c/a\u003eView your tasks chronologically by time"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Duke automatically sorts your tasks in chronological order, allowing you to view your tracked tasks sorted by date and time."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Our tasks that we track of for ourselves are rarely given chronologically by their date, be it as a deadline or as a scheduled event."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Therefore we automatically sort your tasks by date so that you can get the best picture of their urgency and their relation with one another.  "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "This feature is done automatically and do not require any specific commands.  "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "### \u003ca name\u003d\"chatbot\"\u003e\u003c/a\u003eInteract with chatbot"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "You interact with duke in a chatbot fashion, allowing you to \u0027talk\u0027 to your application, breaking off from a monotonous interaction with Duke."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "### \u003ca name\u003d\"save-tasks\"\u003e\u003c/a\u003eTasks are saved on local storage"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Duke saves your tasks to your machine\u0027s local storage. "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "That means that you do not need to keep your application running!  "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Duke will remember what tasks you are tracking even when you close the application."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "## \u003ca name\u003d\"commands\"\u003e\u003c/a\u003eCommands"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "### List of commands"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- `todo \u003ctodo description\u003e`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- `deadline \u003cdeadline description\u003e /by \u003cdate d/m/yyyy\u003e \u003ctime 24 hour clock\u003e`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- `event \u003cevent description\u003e /at \u003cdate d/m/yyyy\u003e \u003ctime 24 hour clock\u003e`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- `done \u003cindex of task\u003e`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- `delete \u003cindex of task\u003e`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- `find \u003ctext match\u003e`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- `list`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- `bye`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "## \u003ca name\u003d\"usage\"\u003e\u003c/a\u003eUsage"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- [`todo` - Adds a todo task to Duke](#todo-usage)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- [`deadline` - Adds a deadline task to Duke](#deadline-usage)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- [`event` - Adds an event task to Duke](#event-usage)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- [`list` - Lists out all tracked tasks](#list-usage)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- [`done` - Mark a task as done](#done-usage)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- [`delete` - Deletes a task from Duke](#delete-usage)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- [`find` - Finds tasks matching a specific text](#find-usage)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- [`bye` - Tells Duke bye](#bye-usage)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "### \u003ca name\u003d\"todo-usage\"\u003e\u003c/a\u003e`todo` - Adds a todo task to Duke"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Adds a todo task for duke to track.  "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "The format for adding a todo is `todo \u003ctodo description\u003e`."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- `\u003ctodo description\u003e` can be any text."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    - Examples: Revise CS2103T Lecture Notes on Git Commands."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "```"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "// user input"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "todo Revise CS2103T Lecture Notes on Git Commands"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "// response"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "       [T][N] Revise CS2103T Lecture Notes on Git Commands"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "```"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "### \u003ca name\u003d\"deadline-usage\"\u003e\u003c/a\u003e`deadline` - Adds a deadline task to Duke"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Adds a deadline task for duke to track.  "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "The format for adding a deadline is `deadline \u003cdeadline description\u003e /by \u003cdate d/m/yyyy\u003e \u003ctime 24 hour clock\u003e`."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- `\u003cdeadline description\u003e` can be any text."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    - Examples: CS2102 Assignment 2."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- `\u003cdate d/m/yyyy\u003e` is the format of the date. Take note that `d/m/yyyy`, `dd/mm/yyyy`, `d/mm/yyyy` and `dd/m/yyyy` are all acceptable formats."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    - Examples: 14/9/2019."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- `\u003ctime 24 hour clock\u003e` is the format of the time."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    - Examples: 2359"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "```"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "// user input"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "deadline CS2102 Assignment 2 /by 14/9/2019 2359"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "// response"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "       [D][N] CS2102 Assignment 2 (by: 14th of September 2019 11:59pm)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "### \u003ca name\u003d\"event-usage\"\u003e\u003c/a\u003e`event` - Adds an event task to Duke"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Adds a event task for duke to track.  "
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "The format for adding a event is `event \u003cevent description\u003e /by \u003cdate d/m/yyyy\u003e \u003ctime 24 hour clock\u003e`."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- `\u003cevent description\u003e` can be any text."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    - Examples: CS2103T Finals."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- `\u003cdate d/m/yyyy\u003e` is the format of the date. Take note that `d/m/yyyy`, `dd/mm/yyyy`, `d/mm/yyyy` and `dd/m/yyyy` are all acceptable formats."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    - Examples: 29/11/2019."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- `\u003ctime 24 hour clock\u003e` is the format of the time."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    - Examplee: 0900"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    "
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "```"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "// user input"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "event CS2103T Finals /at 29/11/2019 0900"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "// response"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "       [E][N] CS2103T Finals (at: 29th of November 2019, 9:00am)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ___________________________________________________________e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "```"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "### \u003ca name\u003d\"list-usage\"\u003e\u003c/a\u003e`list` - Lists out all tracked tasks"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Lists out all tasks being tracked by duke.  "
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Tasks are sorted according to their dates and times, with todo tasks being displayed first since they do not have dates and times.  "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "The format for listing out all tasks is `list`."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Suppose the following commands are keyed in sequence.  "
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "1. `event CS2103T Finals /at 29/11/2019 0900`"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "2. `deadline CS2102 Assignment 2 /by 14/9/2019 2359`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "3. `todo Revise CS2103T Lecture Notes on Git Commands`"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "```"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "// user input"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "list"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "// response"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     1.[T][N] Revise CS2103T Lecture Notes on Git Commands"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     2.[D][N] CS2102 Assignment 2 (by: 14th of September 2019 11:59pm)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     3.[E][N] CS2103T Finals (at: 29th of November 2019, 9:00am)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ___________________________________________________________e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "```"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "### \u003ca name\u003d\"done-usage\"\u003e\u003c/a\u003e`done` - Mark a task as done"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Marks a task as done.  "
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Tasks that are done are marked with `Y`, while undone tasks are marked with `N`.  "
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "The format for marking a task as done is `done \u003cindex\u003e`."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- `\u003cindex\u003e` is the index of the task to be done."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Suppose the following commands are keyed in sequence.  "
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "1. `event CS2103T Finals /at 29/11/2019 0900`"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "2. `deadline CS2102 Assignment 2 /by 14/9/2019 2359`"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "3. `todo Revise CS2103T Lecture Notes on Git Commands`"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "```"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "// user input"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "// response"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "       [T][Y] Revise CS2103T Lecture Notes on Git Commands"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "// user input"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "list"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "// response"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     1.[T][Y] Revise CS2103T Lecture Notes on Git Commands"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     2.[D][N] CS2102 Assignment 2 (by: 14th of September 2019 11:59pm)"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     3.[E][N] CS2103T Finals (at: 29th of November 2019, 9:00am)"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "```"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "### \u003ca name\u003d\"delete-usage\"\u003e\u003c/a\u003e`delete` - Deletes a task from Duke  "
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "The format for deleting a task is `delete \u003cindex\u003e`."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- `delete \u003cindex\u003e` is the index of the task to be deleted."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Suppose the following commands are keyed in sequence.  "
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "1. `event CS2103T Finals /at 29/11/2019 0900`"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "2. `deadline CS2102 Assignment 2 /by 14/9/2019 2359`"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "3. `todo Revise CS2103T Lecture Notes on Git Commands`"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "```"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "// user input"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "// response"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "       [T][N] Revise CS2103% Lecture Notes on Git Commands"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "// user input"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "list"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "// response"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     1.[D][N] CS2102 Assignment 2 (by: 14th of September 2019 11:59pm)"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     2.[E][N] CS2103T Finals (at: 29th of November 2019, 9:00am)"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "```"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "### \u003ca name\u003d\"find-usage\"\u003e\u003c/a\u003e`find` - Finds tasks matching a specific text"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Searches and retrieves tasks that match a certain text.  "
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "The format for searching for tasks by a given matching text is `find \u003ctext match\u003e`."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "- `\u003ctext match\u003e` can be any text."
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Suppose the following commands are keyed in sequence.  "
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "1. `event CS2103T Finals /at 29/11/2019 0900`"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "2. `deadline CS2102 Assignment 2 /by 14/9/2019 2359`"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "3. `todo Revise CS2103T Lecture Notes on Git Commands`"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "```"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "// user input"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "find CS2103T"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "// response"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     1.[T][N] Revise CS2103T Lecture Notes on Git Commands"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     2.[E][N] CS2103T Finals (at: 29th of November 2019, 9:00am)"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "// user input"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "find CS2102"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "// response"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     1.[D][N] CS2102 Assignment 2 (by: 14th of September 2019 11:59pm)"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "// user input"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "find CS3230"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "// response"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "```"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "### \u003ca name\u003d\"bye-usage\"\u003e\u003c/a\u003e`bye` - Tells Duke bye"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Tells Duke bye.  "
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Format of telling duke bye is `bye`."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "```"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "// user input"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "bye"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "// response"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 296,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * speaker\u0027s face and a label containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param text Text String."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param image Image."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public DialogBox(String text, Image image) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        displayPicture.setImage(image);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * gets the DialogBox from the user."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param text Text message."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param image Image."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return The user\u0027s DialogBox."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image image) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return new DialogBox(text, image);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * gets the DialogBox from duke."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param text Text message."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param image Image."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return The Duke\u0027s DialogBox."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image image) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        var db \u003d new DialogBox(text, image);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 75
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Duke Class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents the main driver class of Duke."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Storage to data file access and writes.. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** TaskList to store user input. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Ui for user interaction. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of duke."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Defaults set the file path for storage to \"data/tasks.txt\"."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        storage \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        taskList \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Duke."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param filePath File path of data file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        taskList \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Main Method."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Duke and runs the logic."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param args Arguments."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public static void main(String... args) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Runs Duke main program logic."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                String command \u003d ui.readCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                Command c \u003d Parser.parse(command);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                String response \u003d c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                System.out.println(response);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        ui.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets the appropriate string response from an input."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param input String input from GUI."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String response from input."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String response \u003d c.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 85,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 7
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 28
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void setDuke(Duke duke) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        this.duke \u003d duke;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * containing Duke\u0027s reply and then appends them to the dialog container."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Clears the user input after processing."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        );"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 50
    }
  },
  {
    "path": "src/main/java/data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "E - 0 - n1 - 01/01/2000 1930"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 1
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.TaskFactory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.exceptions.TaskException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents an Add Command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Each instance is a command to add a task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Description of the task. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of AddCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Sets isExit to false as it is not an exit command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description Description of the task to be added."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public AddCommand(String description) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Adds the task to the task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Prints the response."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Writes the changes to the data file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param taskList TaskList of tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param ui Ui object for user interaction."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param storage Storage object for data file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Returns a string of the response from duke after executing this command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String indent \u003d ui.getIndent();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            Task task \u003d TaskFactory.create(description);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            Task.addToTotalTasks();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            taskList.addTask(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            message \u003d task.message();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (TaskException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            message \u003d indent + e.getMessage();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            storage.write(taskList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 55
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * An abstract class of commands."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Each instance of its sub-classes are instances of commands."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Whether the command is an exit command. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Acts as intended depending on the command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param taskList TaskList of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param ui Ui object for user interaction."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param storage Storage object for data file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Returns a string of the response from duke after executing this command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public abstract String execute(TaskList taskList, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Checks if command is an exit command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return boolean attribute of whether command is an exit command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 33
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents a delete command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Each instance is a command to delete a task from the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Index of the task to be deleted. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of delete command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Sets isExit to false as it is not an exit command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param index Index of task to be deleted."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Deletes the task from the task list, which is determined by a 1-based index."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Prints the response."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Writes the changes to the data file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param taskList TaskList of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param ui Ui object for user interaction."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param storage Storage object for data file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Returns a string of the response from duke after executing this command."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        Task task \u003d taskList.deleteTask(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        Task.minusFromTotalTasks();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String indent \u003d ui.getIndent();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            message \u003d indent + \"Index out of range, no task found.\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            message \u003d indent + \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    + indent + \"  \" + task + \"\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    + indent + \"Now you have \" + taskList.getTotalTasks() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        storage.write(taskList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 53
    }
  },
  {
    "path": "src/main/java/duke/command/DoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents of a Do Command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Each instance is a command to do a task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class DoCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Index of task to do. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of a Do Command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Sets isExit to false as it is not an exit command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param index Index of the task to do."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public DoCommand(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Does a task in the task list, which is determined by a 1-based index."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Prints the response."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Writes to the data file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param taskList TaskList of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param ui Ui object for user interaction."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param storage Storage object for data file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Returns a string of the response from duke after executing this command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        taskList.doTask(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String indent \u003d ui.getIndent();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String message \u003d indent + \"Nice! I\u0027ve marked this task as done:\\n\" + indent + \"  \" + taskList.getTask(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        storage.write(taskList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 44
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents an Exit Command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Each instance is a command to exit Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of an Exit Command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Sets isExit to true as it is the exit command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Exits Duke program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Prints the response."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param taskList TaskList of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param ui Ui object for user interaction."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param storage Storage object for data file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Returns a string of the response from duke after executing this command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String indent \u003d ui.getIndent();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String message \u003d indent + \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 35
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents a Find Command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Each instance prints out the task list of tasks that matches a string."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Substring of find command. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String substring;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Find Command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Sets isExit to false as it is not an exit command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public FindCommand(String substring) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        this.substring \u003d substring;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Prints out all tasks whose description contains substring."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param taskList TaskList of tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param ui Ui object for user interaction."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param storage Storage object for data file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Returns a string of the response from duke after executing this command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        TaskList filteredTaskList \u003d taskList.filterByString(substring);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return filteredTaskList.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 37
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents a List Command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Each instance prints out the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** The type of tasks to be listed. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of List Command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Sets isExit to false as it is not an exit command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        type \u003d \"all\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of List Command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Sets isExit to false as it is not an exit command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public ListCommand(String type) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Prints the task list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param taskList TaskList of tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param ui Ui object for user interaction."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param storage Storage object for data file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Returns a string of the response from duke after executing this command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return taskList.filterByToDos().toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return taskList.filterByDeadlines().toString();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return taskList.filterByEvents().toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case \"all\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return taskList.toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return taskList.toString();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 56
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Custom exception class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Duke Exception."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Duke Exception."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Duke Exception."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param err Root cause of error."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public DukeException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 33
    }
  },
  {
    "path": "src/main/java/duke/parser/DateHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.time.format.TextStyle;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * DateFormatter class follows a singleton pattern."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * The instance sole job is to parse strings to LocalDate"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class DateHandler {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** format to parse String to LocalDateTime. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private DateTimeFormatter dateTimeFormatter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** reference to single instance, to ensure that only one instance exists. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static DateHandler instance \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Private Constructor."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Encapsulated constructor to prevent creating more than one instance."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private DateHandler() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets the single instance, if it doesn\u0027t exist, construct one."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return DateFormatter object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public static DateHandler getInstance() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        if (instance \u003d\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            instance \u003d new DateHandler();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return instance;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets a LocalDateTime object from the given string."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param stringDate Date in string form \"d/M/yyyy HHmm\"."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return LocalDateTime object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @throws DateTimeParseException If format is wrong."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public LocalDateTime parse(String stringDate) throws DateTimeParseException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return LocalDateTime.parse(stringDate, dateTimeFormatter);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets the date postfix."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param localDateTime LocalDateTime Object."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return date postfix."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String getDatePostFix(LocalDateTime localDateTime) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        int day \u003d localDateTime.getDayOfMonth();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        int lastDigit \u003d day % 10;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        switch (lastDigit) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return \"st\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return \"nd\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return \"rd\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return \"th\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets the 12 hour formatted string from a LocalDateTime object."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param localDateTime LocalDateTime that supplies the 24 hour time."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String 12 hour formatted string."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String getTwelveHourClock(LocalDateTime localDateTime) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        boolean isMorning \u003d localDateTime.getHour() \u003c 12;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String postFix \u003d isMorning ? \"am\" : \"pm\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        int hour \u003d isMorning ? localDateTime.getHour() : localDateTime.getHour() - 12;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        int min \u003d localDateTime.getMinute();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return String.format(\"%d:%02d%s\", hour, min, postFix);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Formats LocalDateTime to String in the format (d of m y, h:mmam/pm)."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param dateTime LocalDateTime to be formatted."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String of LocalDateTime."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String format(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return String.format(\"%s%s of %s %s, %s\","
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                dateTime.getDayOfMonth(),"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                getDatePostFix(dateTime),"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                dateTime.getMonth().getDisplayName(TextStyle.FULL, Locale.ENGLISH),"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                dateTime.getYear(),"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                getTwelveHourClock(dateTime));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 96
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.command.DoCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents parsing and decomposing string commands into Command types."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Parses a string, determining what command it is."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param string String to be parsed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Relevant command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @throws DukeException If string is badly formatted."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public static Command parse(String string) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        if (string \u003d\u003d null) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String[] tokens \u003d string.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        switch (tokens[0]) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                Command c \u003d new ListCommand(tokens[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                return c;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                Command c \u003d new DoCommand(Integer.parseInt(tokens[1]));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                return c;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                throw new DukeException(\"Invalid done command.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                Command c \u003d new DeleteCommand(Integer.parseInt(tokens[1]));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                return c;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                throw new DukeException(\"Invalid delete command.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                Command c \u003d new FindCommand(tokens[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                return c;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                throw new DukeException(\"Invalid find command.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return new AddCommand(string);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 66
    }
  },
  {
    "path": "src/main/java/duke/parser/exceptions/InvalidDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.parser.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Custom Invalid DateTime Exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class InvalidDateTimeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Invalid DateTime Exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public InvalidDateTimeException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Invalid DateTime Exception."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public InvalidDateTimeException(String errorMessage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Invalid DateTime Exception."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param err Root cause of error."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public InvalidDateTimeException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 32
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents the storage and updating of tasks to data file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Instances can write to data file and are"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * responsible for writing to the file for storage purposes."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Given path to the which holds the data. */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String filePath \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Tries to create data file if it does not exist."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        (new File(\"data\")).mkdir();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            System.out.println(\"Error creating storage file.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Writes down all tasks and their state and data."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param tasklist Tasklist that provides the relevant data."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void write(TaskList tasklist) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d tasklist.getAllTasks();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                fw.write(task.toFileAsString() + \"\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            System.out.println(\"There was a write error to storage.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Reads data file and gets all the tasks written on it."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return ArrayList of Tasks recorded on data file."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public ArrayList\u003cTask\u003e parseFile() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                String[] tokens \u003d line.split(\" - \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                String type \u003d tokens[0];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                boolean isDone \u003d tokens[1].equals(\"1\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                String desc \u003d tokens[2];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                Task t \u003d null;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                assert type !\u003d null : \"First String token is null.\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    t \u003d new ToDo(desc);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    t \u003d new Deadline(desc, tokens[3]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    t \u003d new Event(desc, tokens[3]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            System.out.println(\"Error reading file.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 100
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.parser.exceptions.InvalidDateTimeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.parser.DateHandler;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents Deadline Tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Instances are tasks that has a due date."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Deadline date for the deadline. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** LocalDate of deadline. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private LocalDateTime datetime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Deadline."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description Description of the deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param by deadline for the deadline."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @throws InvalidDateTimeException If DateTime format is wrong."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Deadline(String description, String by) throws InvalidDateTimeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            datetime \u003d DateHandler.getInstance().parse(by);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            throw new InvalidDateTimeException(\"Deadline date not valid.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public LocalDateTime getDate() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return datetime;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Returns the string representation for data file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Returns String representation for data file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String toFileAsString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return String.format(\"D - %s - %s - %s\", isDone ? \"1\" : \"0\", description, by);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets the deadline for this deadline."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String deadline."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Returns the String representation of deadlines."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String representation of deadlines."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\","
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                super.toString(),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                DateHandler.getInstance().format(datetime));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 69
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.parser.exceptions.InvalidDateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.parser.DateHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents Event Tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Instances are tasks with at a specific time."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Time of event. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** LocalDateTime of the event. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private LocalDateTime datetime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description Description of event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param at Time of the event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @throws InvalidDateTimeException If DateTime format is wrong."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Event(String description, String at) throws InvalidDateTimeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            datetime \u003d DateHandler.getInstance().parse(at);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            throw new InvalidDateTimeException(\"Event date not valid.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public LocalDateTime getDate() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return datetime;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Returns the string representation for data file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Returns String representation for data file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String toFileAsString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return String.format(\"E - %s - %s - %s\", isDone ? \"1\" : \"0\", description, at);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Returns the timing of the event."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String time;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Returns String representation of the Event."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String representation of the Event."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\","
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                super.toString(),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                DateHandler.getInstance().format(datetime));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 69
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents Tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Tasks could be ToDos, Deadlines, Events."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Total tasks created. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static int totalTasks \u003d 0;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Whether task is done. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** String of the task. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description String of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    abstract LocalDateTime getDate();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets the description of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Description of task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets the total number of tasks created."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return The total tasks created."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public static int getTotalTasks() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return totalTasks;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Increases total tasks by 1."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public static void addToTotalTasks() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        ++totalTasks;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Decreases total tasks by 1."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public static void minusFromTotalTasks() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        --totalTasks;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Changes isDone to true, setting the task to be done."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets the string message of the task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String message."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String message() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String indent \u003d String.format(\"%4s\", \"\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return indent + \" Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                + indent + \"   \" + this + \"\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                + indent + \" Now you have \" + totalTasks + \" tasks in the list.\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Returns the string representation for data file."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Returns String representation for data file."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String toFileAsString() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return String.format(\"Task - %s - %s\", isDone ? \"1\" : \"0\", description);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Checks whether the task is done."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Boolean value on whether task is done."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets the string symbol of whether the task is done."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String symbol of whether the task is done."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return isDone ? \"Y\" : \"N\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Returns String representation of the task."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String representation of the task."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 115
    }
  },
  {
    "path": "src/main/java/duke/task/TaskFactory.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.exceptions.TaskException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.exceptions.ToDoTaskException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.exceptions.DeadlineTaskException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.exceptions.EventTaskException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.parser.exceptions.InvalidDateTimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents a TaskFactory."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Class creates a task and determines what type of task it is."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class TaskFactory {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates a Task object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Determines which sub-class constructor to call."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description String description of the task to be created."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task Object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @throws TaskException When task cannot be created. Sub-classes of task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *     exception are called in for specificity."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public static Task create(String description) throws TaskException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String[] tokens \u003d description.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        if (tokens.length \u003d\u003d 0 || tokens[0] \u003d\u003d null) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            throw new TaskException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        switch (tokens[0]) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return createToDo(description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return createDeadline(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return createEvent(description);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            throw new TaskException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates a ToDo Task Object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description String description for task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @throws ToDoTaskException If formatting of tokens in description is invalid."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static Task createToDo(String description) throws ToDoTaskException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String[] tokens \u003d description.trim().split(\"todo\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            if (tokens.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                throw new ToDoTaskException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String message \u003d tokens[1];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return new ToDo(message.trim());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            throw new ToDoTaskException(\"OOPS!!! The description of a todo is invalid.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates a Deadline Task Object."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description String description for task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task Object."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @throws DeadlineTaskException If formatting of tokens in description is invalid."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static Task createDeadline(String description) throws DeadlineTaskException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String[] tokens \u003d description.trim().split(\"deadline\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            if (tokens.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                throw new DeadlineTaskException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String message \u003d tokens[1];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String[] divide \u003d message.split(\"/by\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return new Deadline(divide[0].trim(), divide[1].trim());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (InvalidDateTimeException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            throw new DeadlineTaskException(\"OOPS!!! The description of a deadline is invalid.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates Event Task Object."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description String description for task."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task Object."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @throws EventTaskException If formatting of tokens in description is invalid."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static Task createEvent(String description) throws EventTaskException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String[] tokens \u003d description.trim().split(\"event\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            if (tokens.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                throw new EventTaskException(\"OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String message \u003d tokens[1];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String[] divide \u003d message.split(\"/at\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return new Event(divide[0].trim(), divide[1].trim());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (InvalidDateTimeException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            throw new EventTaskException(\"OOPS!!! The description of a event is invalid.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 101
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.util.function.Function;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents a list of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** ArrayList of tasks including ToDos, Deadlines, Events. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of an empty TaskList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            private Comparator\u003cTask\u003e comparator \u003d (t1, t2) -\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                LocalDateTime d1 \u003d t1.getDate();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                LocalDateTime d2 \u003d t2.getDate();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                if (d1 \u003d\u003d null \u0026\u0026 d2 \u003d\u003d null) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    return 0;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                } else if (d1 \u003d\u003d null) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    return -1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                } else if (d2 \u003d\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    return 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    return d1.compareTo(d2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            };"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            public boolean add(Task task) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                boolean result \u003d super.add(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                Collections.sort(this, comparator);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                return result;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        };"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of a TaskList."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Loads tasks stored on data file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param storage Storage object to access data file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public TaskList(Storage storage) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        this();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        load(storage);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Loads the tasks from storage file into TaskList object."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param storage Storage instance to load files."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void load(Storage storage) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        list.clear();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        storage.parseFile()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                .forEach(task -\u003e {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    Task.addToTotalTasks();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                });"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets the total number of tasks in this list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Total number of tasks in the list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public int getTotalTasks() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Adds Task to list."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task that was added."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Task addTask(Task task) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Does Task at the given 1-based index."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param index Index of task to check (1-based)."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task that was done."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Task doTask(int index) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        Task task \u003d getTask(index);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        assert task.isDone() : \"task marked for done is not done.\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Deletes a task at given 1-based index to delete."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param index Index of the task to delete (1-based)."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task that was deleted. Null if index is out of range."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Task deleteTask(int index) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        if (index \u003e list.size()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        Task task \u003d getTask(index);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        list.remove(index - 1);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets a Task from the list."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param index index of task to get (1-based)."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Task object."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return list.get(index - 1);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets a copy of ArrayList of all tasks in the task list."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return ArrayList of all tasks in the task list."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public ArrayList\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e(list);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        assert newList.size() \u003d\u003d list.size() : \"immutable copy has error.\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return newList;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private TaskList filterByCondition(Function\u003cTask, Boolean\u003e f) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        list.stream()"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                .filter(task -\u003e f.apply(task))"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                .forEach(taskList::addTask);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Filters out all tasks, whose description contains the substring,"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * and returns a new task list with those tasks."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param substring Substring that is to be tested against all tasks\u0027 description."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Returns a new TaskList with tasks\u0027 descriptions contains the substring."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public TaskList filterByString(String substring) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return filterByCondition(task -\u003e task.getDescription().contains(substring));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public TaskList filterByToDos() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return filterByCondition(task -\u003e task instanceof ToDo);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public TaskList filterByDeadlines() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return filterByCondition(task -\u003e task instanceof Deadline);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public TaskList filterByEvents() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return filterByCondition(task -\u003e task instanceof Event);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Returns String representation of the task list."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String representation."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String indent \u003d String.format(\"%5s\", \"\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        StringBuilder strb \u003d new StringBuilder(indent + \"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        IntStream.range(0, list.size())"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                .mapToObj(index -\u003e {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                    return index \u003c list.size() - 1"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                            ? String.format(\"%s%d.%s\\n\", indent, index + 1, list.get(index))"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                            : String.format(\"%s%d.%s\", indent, index + 1, list.get(index));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                })"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                .forEach(strb::append);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return strb.toString();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 190
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents a ToDo Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of a ToDo Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param description Description of the todo task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public LocalDateTime getDate() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Returns the string representation for data file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Returns String representation for data file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String toFileAsString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return String.format(\"T - %s - %s\", isDone ? \"1\" : \"0\", description);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Returns String representation of a todo task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String representation of a todo task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 42
    }
  },
  {
    "path": "src/main/java/duke/task/exceptions/DeadlineTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.task.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Custom Deadline Task Exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class DeadlineTaskException extends TaskException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Deadline Task Exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public DeadlineTaskException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Deadline Task Exception."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public DeadlineTaskException(String errorMessage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Deadline Task Exception."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of the error."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param err Root cause of error."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public DeadlineTaskException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 32
    }
  },
  {
    "path": "src/main/java/duke/task/exceptions/EventTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.task.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Custom Event Task Exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class EventTaskException extends TaskException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Event Task Exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public EventTaskException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Event Task Exception."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public EventTaskException(String errorMessage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Event Task Exception."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param err Root cause of error."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public EventTaskException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 32
    }
  },
  {
    "path": "src/main/java/duke/task/exceptions/TaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.task.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Custom Task Exception."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class TaskException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Task Exception."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public TaskException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Task Exception."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public TaskException(String errorMessage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Task Exception."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param err Root cause of exception."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public TaskException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 35
    }
  },
  {
    "path": "src/main/java/duke/task/exceptions/ToDoTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.task.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.exceptions.TaskException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Custom ToDo Task Exception."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class ToDoTaskException extends TaskException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of ToDo Task Exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public ToDoTaskException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of ToDo Task Exception."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public ToDoTaskException(String errorMessage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of ToDo Task Exception."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param errorMessage Message of error."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param err Root cause of exception."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public ToDoTaskException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 34
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Represents interactions with user via CLI."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** BufferedReader to read CLI input. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private BufferedReader br;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Line for responses. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static final String line \u003d String.format(\"%4s\", \"\") + String.format(\"%60s\", \"\").replace(\" \", \"_\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /** Indentation for response. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    private static final String indent \u003d String.format(\"%5s\", \"\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Creates an instance of Ui."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Opens BufferedReader."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        br \u003d new BufferedReader(new InputStreamReader(System.in));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Reads the user command from CLI."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return String command from user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @throws DukeException If there is any IOException from bufferedreader."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String readCommand() throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            return line \u003d\u003d null ? \"\" : line;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Prints out the greeting."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String message \u003d indent + \"Hello! I\u0027m Duke\\n\" + indent + \"What can I do for you?\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        String response \u003d String.format(\"%s\\n%s\\n%s\\n\", line, message, line);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        System.out.println(response);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Prints out the task list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @param tasklist TaskList to be printed out."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public static void printList(TaskList tasklist) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        System.out.println(tasklist);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Prints line."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Gets the in text indent width."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * @return Indentation."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public String getIndent() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        return indent;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Prints error."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void showError(String errMessage) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        System.out.println(indent + errMessage);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Closes the bufferedreader."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void close() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            System.out.println(\"Buffered Reader could not close properly.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 101
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"130.0\" prefWidth\u003d\"900.0\" styleClass\u003d\"pane-with-border\" stylesheets\u003d\"@Theme.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" styleClass\u003d\"text-box\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            \u003cFont name\u003d\"Consolas\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" styleClass\u003d\"portrait\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 20
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"900.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"-2.0\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"784.0\" promptText\u003d\"Enter text here\" styleClass\u003d\"text-field\" stylesheets\u003d\"@Theme.css\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"781.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"119.0\" stylesheets\u003d\"@Theme.css\" text\u003d\"Send\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            \u003cFont name\u003d\"Arial Bold\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"900.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"555.0\" prefWidth\u003d\"899.0\" styleClass\u003d\"background\" stylesheets\u003d\"@Theme.css\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 23
    }
  },
  {
    "path": "src/test/java/duke/task/TaskFactoryTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import duke.task.exceptions.TaskException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Test for TaskFactory Class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class TaskFactoryTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Tests construction of a todo task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void test_newToDo() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String description \u003d \"todo n1\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            Task t \u003d TaskFactory.create(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            assertEquals(\"[T][N] n1\", t.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (TaskException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Tests construction of a deadline task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void test_newDeadline() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String description \u003d \"deadline n2 /by 1/1/2017 0800\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            Task t \u003d TaskFactory.create(description);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            assertEquals(\"[D][N] n2 (by: 1st of January 2017, 8:00am)\", t.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (TaskException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     * Tests construction of a event task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void test_newEvent() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            String description \u003d \"event n3 /at 5/5/2018 2359\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            Task t \u003d TaskFactory.create(description);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            assertEquals(\"[E][N] n3 (at: 5th of May 2018, 11:59pm)\", t.toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        } catch (TaskException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 57
    }
  },
  {
    "path": "src/test/java/duke/task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotNull;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " * Test for TaskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void test_newTaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        assertNotNull(taskList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void test_addTask() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        Task todo \u003d new ToDo(\"task 1\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        taskList.addTask(todo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        assertEquals(1, taskList.getTotalTasks());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void test_deleteTask() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        Task todo \u003d new ToDo(\"task 1\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        taskList.addTask(todo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        taskList.deleteTask(1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        assertEquals(0, taskList.getTotalTasks());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void test_doTask() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        Task todo \u003d new ToDo(\"task 1\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        taskList.addTask(todo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        Task task \u003d taskList.doTask(1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        assertEquals(task, todo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        assertTrue(task.isDone());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    public void test_filterByString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        Task todo1 \u003d new ToDo(\"task 1\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        Task todo2 \u003d new ToDo(\"task 2\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        taskList.addTask(todo1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        taskList.addTask(todo2);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        TaskList filteredList \u003d taskList.filterByString(\"1\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        assertEquals(1, filteredList.getTotalTasks());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "        assertEquals(todo1, filteredList.getTask(1));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "marcfyk": 59
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "marcfyk": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcfyk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcfyk"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "marcfyk": 21
    }
  }
]
