[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czkay"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czkay"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czkay"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czkay"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czkay"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czkay"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czkay"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "czkay"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "czkay"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "czkay"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "czkay"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "czkay"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 22,
      "-": 15
    }
  },
  {
    "path": "src/main/java/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "public class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": "    private Task newTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public AddTaskCommand(Task task) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czkay"
        },
        "content": "        newTask \u003d task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czkay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czkay"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czkay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czkay"
        },
        "content": "        tasks.addTask(newTask);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czkay"
        },
        "content": "        storage.update(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "czkay"
        },
        "content": "        ui.print(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "czkay"
        },
        "content": "        ui.print(newTask.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "czkay"
        },
        "content": "        ui.print(String.format(\"Now you have %d tasks in the list.\", tasks.size()));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 23
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 8
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": "    private LocalDateTime by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": "    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public Deadline(String s, String by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czkay"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czkay"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by, formatter);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czkay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czkay"
        },
        "content": "        String mark \u003d (isDone ? \"✓\" : \"✗\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czkay"
        },
        "content": "        return String.format(\"[D][%s] %s (by: %s)\", mark, taskDescription, by.format(formatter).toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 18
    }
  },
  {
    "path": "src/main/java/DeleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "public class DeleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": "    private int targetIndex;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public DeleteTaskCommand(int index) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czkay"
        },
        "content": "        targetIndex \u003d index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czkay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czkay"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czkay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czkay"
        },
        "content": "        Task deletedTask \u003d tasks.deleteTask(targetIndex);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czkay"
        },
        "content": "        storage.update(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "czkay"
        },
        "content": "        ui.print(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "czkay"
        },
        "content": "        ui.print(deletedTask.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "czkay"
        },
        "content": "        ui.print(String.format(\"Now you have %d tasks in the list.\", tasks.size()));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 23
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czkay"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czkay"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czkay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czkay"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czkay"
        },
        "content": "        } catch (IOException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czkay"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czkay"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czkay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "czkay"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "czkay"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "czkay"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "czkay"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "czkay"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "czkay"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "czkay"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "czkay"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "czkay"
        },
        "content": "            } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "czkay"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "czkay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "czkay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "czkay"
        },
        "content": "        new Duke(\"data/tasks.tmp\").run();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 34,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "public abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 5
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public EmptyDescriptionException(String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": "    private LocalDateTime at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": "    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public Event(String s, String at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czkay"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czkay"
        },
        "content": "        this.at \u003d LocalDateTime.parse(at, formatter);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czkay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czkay"
        },
        "content": "        String mark \u003d (isDone ? \"✓\" : \"✗\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czkay"
        },
        "content": "        return String.format(\"[E][%s] %s (at: %s)\", mark, taskDescription, at.format(formatter).toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 18
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": "        ui.showExitMessage();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czkay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czkay"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 12
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public InvalidInputException(String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 5
    }
  },
  {
    "path": "src/main/java/MarkAsDoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "public class MarkAsDoneCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": "    private int targetIndex;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public MarkAsDoneCommand(int index) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czkay"
        },
        "content": "        targetIndex \u003d index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czkay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czkay"
        },
        "content": "        tasks.markTaskAsDone(targetIndex);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czkay"
        },
        "content": "        storage.update(tasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czkay"
        },
        "content": "        ui.print(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czkay"
        },
        "content": "        ui.print(tasks.get(targetIndex).toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czkay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "czkay"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 22
    }
  },
  {
    "path": "src/main/java/OutOfBoundsDeletionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "public class OutOfBoundsDeletionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public OutOfBoundsDeletionException(String msg) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 6
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": "        if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czkay"
        },
        "content": "            return new PrintListCommand();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czkay"
        },
        "content": "        } else if (fullCommand.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czkay"
        },
        "content": "            return new MarkAsDoneCommand(Integer.parseInt(fullCommand.substring(5)) - 1);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czkay"
        },
        "content": "        } else if (fullCommand.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czkay"
        },
        "content": "            return new DeleteTaskCommand(Integer.parseInt(fullCommand.substring(7)) - 1);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czkay"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czkay"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czkay"
        },
        "content": "                Task newTask;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czkay"
        },
        "content": "                if (fullCommand.equals(\"deadline\") || fullCommand.equals(\"event\") || fullCommand.equals(\"todo\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czkay"
        },
        "content": "                    throw new EmptyDescriptionException(\"☹ OOPS!!! The description of a \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czkay"
        },
        "content": "                            + fullCommand + \" cannot be empty.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czkay"
        },
        "content": "                } else if (fullCommand.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "czkay"
        },
        "content": "                    String[] phrases \u003d fullCommand.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "czkay"
        },
        "content": "                    newTask \u003d new Deadline(phrases[0], phrases[1]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "czkay"
        },
        "content": "                } else if (fullCommand.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "czkay"
        },
        "content": "                    String[] phrases \u003d fullCommand.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "czkay"
        },
        "content": "                    newTask \u003d new Event(phrases[0], phrases[1]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "czkay"
        },
        "content": "                } else if (fullCommand.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "czkay"
        },
        "content": "                    newTask \u003d new Todo(fullCommand.substring(5));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "czkay"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "czkay"
        },
        "content": "                    throw new InvalidInputException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "czkay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "czkay"
        },
        "content": "                return new AddTaskCommand(newTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "czkay"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "czkay"
        },
        "content": "                throw new InvalidInputException(\"Improper formatting of task description!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "czkay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "czkay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 35
    }
  },
  {
    "path": "src/main/java/PrintListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "public class PrintListCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czkay"
        },
        "content": "        ui.print(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czkay"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czkay"
        },
        "content": "            ui.print(String.format(\"%d. %s\", i, tasks.get(i - 1)));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czkay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czkay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czkay"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 17
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czkay"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czkay"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czkay"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public TaskList load() throws IOException, ClassNotFoundException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czkay"
        },
        "content": "        FileInputStream fis \u003d new FileInputStream(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czkay"
        },
        "content": "        ObjectInputStream ois \u003d new ObjectInputStream(fis);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czkay"
        },
        "content": "        TaskList tasks \u003d (TaskList) ois.readObject();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czkay"
        },
        "content": "        ois.close();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "czkay"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public void update(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "czkay"
        },
        "content": "        FileOutputStream fos \u003d new FileOutputStream(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "czkay"
        },
        "content": "        ObjectOutputStream oos \u003d new ObjectOutputStream(fos);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "czkay"
        },
        "content": "        oos.writeObject(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "czkay"
        },
        "content": "        oos.close();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 28
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "public abstract class Task implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": "    protected String taskDescription;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public Task(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czkay"
        },
        "content": "        taskDescription \u003d s;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czkay"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czkay"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czkay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czkay"
        },
        "content": "        String mark \u003d (isDone ? \"✓\" : \"✗\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "czkay"
        },
        "content": "        return String.format(\"[%s] %s\", mark, taskDescription);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 21
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": "public class TaskList implements Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czkay"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czkay"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czkay"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public void markTaskAsDone(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "czkay"
        },
        "content": "        taskList.get(index).markAsDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public Task deleteTask(int index) throws OutOfBoundsDeletionException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "czkay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "czkay"
        },
        "content": "            return taskList.remove(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "czkay"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "czkay"
        },
        "content": "            throw new OutOfBoundsDeletionException(\"No task with index number \" + (index + 1) + \" on your tasklist!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "czkay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "czkay"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 35
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public Todo(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czkay"
        },
        "content": "        String mark \u003d (isDone ? \"✓\" : \"✗\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czkay"
        },
        "content": "        return String.format(\"[T][%s] %s\", mark, taskDescription);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 11
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czkay"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czkay"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public void showError(String msg) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czkay"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "czkay"
        },
        "content": "        System.out.println(\"Unable to access existing tasklist; initialising new tasklist instead\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public void print(String msg) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "czkay"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public void showExitMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "czkay"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 29
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czkay"
        },
        "content": "        assertEquals(\"[D][✗] return book (by: 02/02/2020 12:30)\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czkay"
        },
        "content": "                (new Deadline(\"return book\", \"02/02/2020 12:30\")).toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 11
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czkay"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public void parse_invalidInput_exceptionThrown() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czkay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czkay"
        },
        "content": "            Parser.parse(\"blah\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czkay"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czkay"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czkay"
        },
        "content": "            assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czkay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 16
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czkay"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czkay"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czkay"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czkay"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czkay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czkay"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czkay"
        },
        "content": "    public void deleteTask_wrongIndex_exceptionThrown() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czkay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czkay"
        },
        "content": "            new TaskList().deleteTask(1);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czkay"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czkay"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czkay"
        },
        "content": "            assertEquals(\"No task with index number 2 on your tasklist!\", e.getMessage());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czkay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czkay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czkay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czkay": 16
    }
  }
]
