[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "run {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    archiveVersion \u003d \"0.1.0\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 18,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * Duke Chat Class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eA Personal Assistant Chatbot that helps to keep track of various things."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Duke Constructor."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param filePath String containing path of data file for Duke."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        new Duke(System.getProperty(\"user.dir\") + \"/data/duke.txt\").run();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Runs chat bot interaction."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 55,
      "-": 4
    }
  },
  {
    "path": "src/main/java/command/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIoException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * AddTaskCommand class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eCommand to add Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public AddTaskCommand(String commandString, Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(commandString);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeIoException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        tasks.add(this.task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ui.showAddTask(task, tasks.size());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 30
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * Command class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eParent class for all Duke commands."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private String commandString;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private boolean exit;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Command(String commandString) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.commandString \u003d commandString;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.exit \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void setExit(boolean exit) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.exit \u003d exit;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 33
    }
  },
  {
    "path": "src/main/java/command/DeleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIoException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.InvalidIndexException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * DeleteTaskCommand class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eCommand to delete Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class DeleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DeleteTaskCommand(String commandString, int taskIndex) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(commandString);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException, DukeIoException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Task task \u003d tasks.delete(taskIndex);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ui.showDeleteTask(task, tasks.size());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 31
    }
  },
  {
    "path": "src/main/java/command/DoneTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIoException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.InvalidIndexException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * DoneTaskCommand class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eCommand to set task as done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class DoneTaskCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DoneTaskCommand(String commandString, int taskIndex) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(commandString);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException, DukeIoException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Task task \u003d tasks.done(taskIndex);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ui.showDoneTask(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 31
    }
  },
  {
    "path": "src/main/java/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * ExitCommand class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eCommand to exit application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public ExitCommand(String commandString) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(commandString);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.setExit(true);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ui.showBye();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 24
    }
  },
  {
    "path": "src/main/java/command/FindTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIoException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * FindTaskCommand class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eCommand to find a Task by searching for a keyword."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class FindTaskCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private String searchString;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public FindTaskCommand(String commandString, String searchString) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(commandString);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.searchString \u003d searchString;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeIoException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        TaskList matchingTasks \u003d tasks.find(this.searchString);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ui.showFoundTasks(matchingTasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 29
    }
  },
  {
    "path": "src/main/java/command/ListTasksCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import core.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * ListTaskCommand class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eCommand to show all tasks in list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class ListTasksCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public ListTasksCommand(String commandString) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(commandString);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ui.listTasks(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 24
    }
  },
  {
    "path": "src/main/java/core/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.EmptyFieldException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.InvalidCommandFormatException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.InvalidIndexException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.UnknownCommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.temporal.TemporalAccessor;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Parses user input and returns a Command object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param command User string input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return executable Command object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws EmptyFieldException           If input does not provide a required field value."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws DukeIllegalArgumentException  If input has invalid field value."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws InvalidCommandFormatException If input is not in the right format."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws UnknownCommandException       If a command cannot be understood."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws InvalidIndexException         If input provides an out-of-bound index."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public static Command parse(String command) throws EmptyFieldException, DukeIllegalArgumentException,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            InvalidCommandFormatException, UnknownCommandException, InvalidIndexException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        if (command.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return new ListTasksCommand(command);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (command.toLowerCase().startsWith(\"done\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                int taskIndex \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                return new DoneTaskCommand(command, taskIndex);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                throw new InvalidIndexException(\"OOPS!!! I can\u0027t do that, please gimme a valid task ID mate.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (command.toLowerCase().startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                //parse description from command string"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                int commandLength \u003d \"todo\".length();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                String description \u003d command.substring(commandLength).trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                if (description.isEmpty()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    throw new EmptyFieldException(\"OOPS!!! The description of a task cannot be empty mate.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                Task task \u003d new Todo(description);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                return new AddTaskCommand(command, task);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                throw new InvalidCommandFormatException(\"OOPS!!! Please gimme a todo with the right format: \""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        + \"\u0027todo [description]\u0027\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (command.toLowerCase().startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                int byLength \u003d \"/by\".length();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                int commandLength \u003d \"deadline\".length();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                int byIndex \u003d command.indexOf(\"/by\"); // look for \u0027/by\u0027 keyword from command"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                // parse description from command"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                String description \u003d command.substring(commandLength, byIndex).trim();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                if (description.isEmpty()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    throw new EmptyFieldException(\"OOPS!!! The description of a deadline cannot be empty mate.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                // parse by-datetime from command"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                String by \u003d command.substring(byIndex + byLength).trim();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                if (by.isEmpty()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    throw new EmptyFieldException(\"OOPS!!! The date of a deadline cannot be empty mate.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                DateTimeFormatter fmt \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy[ HHmm]\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                TemporalAccessor parsedBy \u003d fmt.parseBest(by, LocalDateTime::from, LocalDate::from);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                Task task \u003d null;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                // create task depending on given whether a by-time is given"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                if (parsedBy instanceof LocalDateTime) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    task \u003d new Deadline(description, (LocalDateTime) parsedBy);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                } else if (parsedBy instanceof LocalDate) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    task \u003d new Deadline(description, ((LocalDate) parsedBy).atStartOfDay(), true);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                return new AddTaskCommand(command, task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                throw new InvalidCommandFormatException(\"OOPS!!! Please gimme a deadline with the right format: \""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        + \"\u0027deadline [description] /by [datetime]\u0027\\n\\t\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        + \"datetime format: d/M/yyyy[ HHmm]\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (command.toLowerCase().startsWith(\"event\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                int atLength \u003d \"/at\".length();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                int commandLength \u003d \"event\".length();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                int atIndex \u003d command.indexOf(\"/at\"); // look for \u0027/at\u0027 keyword from command"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                // parse description from command"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                String description \u003d command.substring(commandLength, atIndex).trim();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                if (description.isEmpty()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    throw new EmptyFieldException(\"OOPS!!! The description of an event cannot be empty mate.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                // parse at-datetime from command"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                String at \u003d command.substring(atIndex + atLength).trim();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                if (at.isEmpty()) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    throw new EmptyFieldException(\"OOPS!!! The start \u0026 end dates of an event cannot be empty mate.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                DateTimeFormatter fmt \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy[ HHmm]\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                DateTimeFormatter fmt2 \u003d DateTimeFormatter.ofPattern(\"[d/M/yyyy][ ][HHmm]\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                Task task \u003d null;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                int dashIndex \u003d at.indexOf(\"-\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                if (dashIndex !\u003d -1) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    String atStart \u003d at.substring(0, dashIndex).trim();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    String atEnd \u003d at.substring(dashIndex + 1).trim();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    TemporalAccessor parsedStart \u003d fmt.parseBest(atStart, LocalDateTime::from, LocalDate::from);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    TemporalAccessor parsedEnd \u003d fmt2.parseBest(atEnd,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                            LocalDateTime::from, LocalDate::from, LocalTime::from);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    if ((parsedStart instanceof LocalDateTime) \u0026\u0026 (parsedEnd instanceof LocalDateTime)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        task \u003d new Event(description, (LocalDateTime) parsedStart,"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                                (LocalDateTime) parsedEnd);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    } else if ((parsedStart instanceof LocalDate) \u0026\u0026 ((parsedEnd instanceof LocalDate))) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        task \u003d new Event(description, ((LocalDate) parsedStart).atStartOfDay(),"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                                ((LocalDate) parsedEnd).atStartOfDay(), true);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    } else if ((parsedStart instanceof LocalDate) \u0026\u0026 (parsedEnd instanceof LocalTime)) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        task \u003d new Event(description, ((LocalDate) parsedStart).atStartOfDay(),"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                                ((LocalTime) parsedEnd).atDate((LocalDate) parsedStart), true);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        throw new InvalidCommandFormatException("
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                                \"OOPS!!! Please gimme an event with the right format: \\n\\t\\t\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                                        + \"\u0027event [description] /at [start datetime] - [end datetime]\u0027\\n\\t\""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                                        + \"datetime format: d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    TemporalAccessor parsedStart \u003d fmt.parseBest(at, LocalDateTime::from, LocalDate::from);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    if (parsedStart instanceof LocalDateTime) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        task \u003d new Event(description, (LocalDateTime) parsedStart);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    } else if (parsedStart instanceof LocalDate) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        task \u003d new Event(description, ((LocalDate) parsedStart).atStartOfDay(), true);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                return new AddTaskCommand(command, task);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                throw new InvalidCommandFormatException(\"OOPS!!! Please gimme an event with the right format: \\n\\t\\t\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        + \"\u0027event [description] /at [start datetime] - [end datetime]\u0027\\n\\t\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        + \"datetime format: d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (command.toLowerCase().startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                int taskIndex \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                return new DeleteTaskCommand(command, taskIndex);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                throw new InvalidIndexException(\"OOPS!!! I can\u0027t do that, please gimme a valid task ID mate.\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (command.toLowerCase().startsWith(\"find\")) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                //parse searchString from command string"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                int commandLength \u003d \"find\".length();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                String searchString \u003d command.substring(commandLength).trim();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                if (searchString.isEmpty()) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    throw new EmptyFieldException(\"OOPS!!! Can\u0027t search for somethin\u0027 with nothin\u0027 mate.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                return new FindTaskCommand(command, searchString);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                throw new InvalidCommandFormatException(\"OOPS!!! Please gimme the right format for searching: \""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        + \"\u0027find [keyword]\u0027\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (command.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return new ExitCommand(command);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new UnknownCommandException(\"OOPS!!! Sorry mate, I don\u0027t geddit.\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 181
    }
  },
  {
    "path": "src/main/java/core/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIoException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private Path path;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.path \u003d Paths.get(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Saves tasks into a file on hard disk."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param taskList TaskList to save."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws DukeIoException If file cannot be opened/modified."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void save(TaskList taskList) throws DukeIoException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            if (!Files.exists(path)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                Files.createFile(path);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            BufferedWriter writer \u003d Files.newBufferedWriter(path);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d taskList.toList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            // write tasks into file"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                StringBuilder rowBuilder \u003d new StringBuilder("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        String.format(\"%s|%s|%s\", task.getType().getTag(),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                                task.isDone() ? \"1\" : \"0\", task.getDescription()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    rowBuilder.append(String.format(\"|%s\","
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                            ((Deadline) task).getBy().format(DateTimeFormatter.ISO_DATE_TIME)));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    rowBuilder.append(String.format(\"|%s\","
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                            ((Deadline) task).isAllDay() ? \"1\" : \"0\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    rowBuilder.append(String.format(\"|%s|%s\","
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                            ((Event) task).getStartDateTime().format(DateTimeFormatter.ISO_DATE_TIME),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                            ((Event) task).getEndDateTime().format(DateTimeFormatter.ISO_DATE_TIME)));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    rowBuilder.append(String.format(\"|%s\","
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                            ((Event) task).isAllDay() ? \"1\" : \"0\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                rowBuilder.append(\"\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                sb.append(rowBuilder);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            writer.write(sb.toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new DukeIoException(\"OOPS!!! Error trying to save data to file.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Loads tasks from hard disk."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return An ArrayList of Tasks."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws DukeIoException              If file cannot be opened/read."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws DukeIllegalArgumentException If file data is corrupted and invalid values are read."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeIoException, DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            if (Files.exists(path)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                BufferedReader reader \u003d Files.newBufferedReader(path);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                String line \u003d null;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    String[] parts \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    String type \u003d parts[0];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    boolean isDone \u003d \"1\".equals(parts[1]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    String description \u003d parts[2];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    if (type.equalsIgnoreCase(TaskType.TODO.getTag())) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        Task task \u003d new Todo(description);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        task.setDone(isDone);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        tasks.add(task);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    } else if (type.equalsIgnoreCase(TaskType.DEADLINE.getTag())) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        LocalDateTime byDate \u003d LocalDateTime.parse(parts[3], DateTimeFormatter.ISO_DATE_TIME);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        boolean isAllDay \u003d \"1\".equals(parts[4]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        Task task \u003d new Deadline(description, byDate, isAllDay);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        task.setDone(isDone);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        tasks.add(task);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    } else if (type.equalsIgnoreCase(TaskType.EVENT.getTag())) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        LocalDateTime startDate \u003d LocalDateTime.parse(parts[3], DateTimeFormatter.ISO_DATE_TIME);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        LocalDateTime endDate \u003d LocalDateTime.parse(parts[4], DateTimeFormatter.ISO_DATE_TIME);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        boolean isAllDay \u003d \"1\".equals(parts[5]);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        Task task \u003d new Event(description, startDate, endDate, isAllDay);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        task.setDone(isDone);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        tasks.add(task);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                reader.close();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new DukeIoException(\"OOPS!!! Error trying to load data from file.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 127
    }
  },
  {
    "path": "src/main/java/core/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Read a string input from user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return String containing user input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Prints out message to user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param message String containing message."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void show(String message) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        System.out.println(\"\\t\" + message);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private void showLine() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Prints out message for adding a task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void showAddTask(Task task, int taskCount) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        StringBuilder messageBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        messageBuilder.append(\"Got it mate. I\u0027ve added this task:\\n\\t\" + task + \"\\n\\t\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        messageBuilder.append(\"Now you have \" + taskCount + \" tasks in the list mate.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        show(messageBuilder.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Prints out message for setting a task to done."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param task Task to set as done."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void showDoneTask(Task task) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        StringBuilder messageBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        messageBuilder.append(\"Nice one mate! I\u0027ve marked this task as done:\\n\\t\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        messageBuilder.append(\"  \" + task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        show(messageBuilder.toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Prints out message for deleting a task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param task      Task to delete."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param taskCount Current number of tasks in list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void showDeleteTask(Task task, int taskCount) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        StringBuilder messageBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        messageBuilder.append(\"Noted mate! I\u0027ve removed this task:\\n\\t\")"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                .append(\"  \" + task + \"\\n\\t\")"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                .append(\"Now you have \" + taskCount + \" tasks in the list mate.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        show(messageBuilder.toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Prints out list of tasks."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param tasks TaskList to print out."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void listTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        StringBuilder messageBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        if (tasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            messageBuilder.append(\"Here are the tasks in your list:\\n\\t\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                messageBuilder.append((i + 1) + \". \" + tasks.get(i) + \"\\n\\t\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            messageBuilder.setLength(messageBuilder.length() - 2); // strip trailing \\n\\t"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            messageBuilder.append(\"Can\u0027t see any tasks in the list, start adding tasks mate!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        show(messageBuilder.toString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Prints out list of tasks matching search string."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param matchingTasks TaskList to print out."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void showFoundTasks(TaskList matchingTasks) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        StringBuilder messageBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        if (matchingTasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            messageBuilder.append(\"Here are the matching tasks in your list:\\n\\t\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                messageBuilder.append((i + 1) + \". \" + matchingTasks.get(i) + \"\\n\\t\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            messageBuilder.setLength(messageBuilder.length() - 2); // strip trailing \\n\\t"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            messageBuilder.append(\"Mate, I found no matching tasks. Try something else.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        show(messageBuilder.toString());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Prints out loading error."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        showError(\"Oops! Unable to load tasks from hard disk, starting with an empty list.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Prints out welcome message."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        String logo \u003d \" ____        _        \\n\\t\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\\t\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\\t\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\\t\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\\t\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        String greeting \u003d logo + \"G\u0027day mate! I\u0027m Duke.\\n\\tWhatcha need help with?\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        show(greeting);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Prints out exit message."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        String bye \u003d \"Bye mate. Catch you later!\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        show(bye); //say goodbye"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Prints out generic error."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        show(message);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 153
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * DukeException Class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eParent class for all exceptions in Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeException(Throwable cause) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(cause);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 26
    }
  },
  {
    "path": "src/main/java/exception/DukeIllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * DukeIllegalArgumentException class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eException thrown when illegal arguments are given in Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class DukeIllegalArgumentException extends DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeIllegalArgumentException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeIllegalArgumentException(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeIllegalArgumentException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeIllegalArgumentException(Throwable cause) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(cause);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 26
    }
  },
  {
    "path": "src/main/java/exception/DukeIoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * DukeIoException class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eException thrown when input/output problems occur in Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class DukeIoException extends DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeIoException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeIoException(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeIoException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public DukeIoException(Throwable cause) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(cause);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 26
    }
  },
  {
    "path": "src/main/java/exception/EmptyFieldException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * EmptyFieldException class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eException thrown when required command fields are empty in Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class EmptyFieldException extends DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public EmptyFieldException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public EmptyFieldException(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public EmptyFieldException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public EmptyFieldException(Throwable cause) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(cause);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 27
    }
  },
  {
    "path": "src/main/java/exception/InvalidCommandFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * InvalidCommandFormatException class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eException thrown when invalid command formats are given in Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class InvalidCommandFormatException extends DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public InvalidCommandFormatException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public InvalidCommandFormatException(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public InvalidCommandFormatException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public InvalidCommandFormatException(Throwable cause) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(cause);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 27
    }
  },
  {
    "path": "src/main/java/exception/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * InvalidIndexException class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eException thrown when invalid index is given in Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public InvalidIndexException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public InvalidIndexException(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public InvalidIndexException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public InvalidIndexException(Throwable cause) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(cause);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 27
    }
  },
  {
    "path": "src/main/java/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * UnknownCommandException class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eException thrown when command given is unknown in Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public UnknownCommandException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public UnknownCommandException(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public UnknownCommandException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public UnknownCommandException(Throwable cause) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(cause);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 27
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * Deadline Class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eRepresents the deadline-type task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    protected boolean isAllDay;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Deadline Constructor."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param description Description of Deadline task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param by Deadline datetime."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(description, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.isAllDay \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Deadline Constructor."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param description Description of Deadline task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param by Deadline datetime."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param isAllDay Whether task is all day."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Deadline(String description, LocalDateTime by, boolean isAllDay) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(description, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.isAllDay \u003d isAllDay;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Getter for by."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return LocalDateTime representing by."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public LocalDateTime getBy() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Setter for by."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param by LocalDateTime representing by."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void setBy(LocalDateTime by) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Getter for isAllDay."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return boolean isAllDay."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public boolean isAllDay() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return isAllDay;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Setter for isAllDay."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param allDay boolean isAllDay."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void setAllDay(boolean allDay) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        isAllDay \u003d allDay;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        if (isAllDay) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return String.format(\"[%s]%s (by: %s)\", TaskType.DEADLINE.getTag(), super.toString(),"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    by.toLocalDate().format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM)));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return String.format(\"[%s]%s (by: %s)\", TaskType.DEADLINE.getTag(), super.toString(),"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    by.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM)));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 90
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * Event Class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eRepresents the event-type task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    protected LocalDateTime startDateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    protected LocalDateTime endDateTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    protected boolean isAllDay;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Event constructor."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param description Description of Event task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param startDateTime Start Datetime of event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Event(String description, LocalDateTime startDateTime) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(description, TaskType.EVENT);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.startDateTime \u003d startDateTime;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.endDateTime \u003d startDateTime;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.isAllDay \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Event constructor."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param description Description of Event task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param startDateTime Start Datetime of event."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param isAllDay Whether task is all day."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Event(String description, LocalDateTime startDateTime, boolean isAllDay) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(description, TaskType.EVENT);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.startDateTime \u003d startDateTime;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.endDateTime \u003d startDateTime;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.isAllDay \u003d isAllDay;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Event constructor."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param description Description of Event task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param startDateTime Start Datetime of event."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param endDateTime End Datetime of event."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws DukeIllegalArgumentException If end date is before start date."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Event(String description, LocalDateTime startDateTime, LocalDateTime endDateTime) throws"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(description, TaskType.EVENT);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        if (endDateTime.isBefore(startDateTime)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new DukeIllegalArgumentException(\"End date should be before start date!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.startDateTime \u003d startDateTime;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.endDateTime \u003d endDateTime;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.isAllDay \u003d false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Description of Event task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param description Description of Event task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param startDateTime Start Datetime of event."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param endDateTime End Datetime of event."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param isAllDay Whether task is all day."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws DukeIllegalArgumentException If end date is before start date."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Event(String description, LocalDateTime startDateTime, LocalDateTime endDateTime,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                 boolean isAllDay) throws DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(description, TaskType.EVENT);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        if (endDateTime.isBefore(startDateTime)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new DukeIllegalArgumentException(\"End date should be before start date!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.startDateTime \u003d startDateTime;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.endDateTime \u003d endDateTime;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.isAllDay \u003d isAllDay;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Getter for startDateTime."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return LocalDateTime object representing startDateTime."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public LocalDateTime getStartDateTime() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return startDateTime;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Setter for startDateTime."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param startDateTime LocalDateTime to set startDateTime."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws DukeIllegalArgumentException If end date is before start date."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void setStartDateTime(LocalDateTime startDateTime) throws DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        if (this.endDateTime.isEqual(this.startDateTime)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            this.endDateTime \u003d startDateTime;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        if (this.endDateTime.isBefore(startDateTime)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new DukeIllegalArgumentException(\"End date should be before start date!\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.startDateTime \u003d startDateTime;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Getter for endDateTime."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return LocalDateTime object representing endDateTime."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public LocalDateTime getEndDateTime() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return endDateTime;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Setter for startDateTime."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param endDateTime LocalDateTime to set endDateTime."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws DukeIllegalArgumentException If end date is before start date."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void setEndDateTime(LocalDateTime endDateTime) throws DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        if (endDateTime.isBefore(this.startDateTime)) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new DukeIllegalArgumentException(\"End date should be before start date!\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.endDateTime \u003d endDateTime;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Getter for isAllDay."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return boolean isAllDay."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public boolean isAllDay() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return isAllDay;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Setter for isAllDay."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param allDay boolean isAllDay."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void setAllDay(boolean allDay) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        isAllDay \u003d allDay;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        if (isAllDay \u0026\u0026 startDateTime.toLocalDate().isEqual(endDateTime.toLocalDate())) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return String.format(\"[%s]%s (at: %s)\", TaskType.EVENT.getTag(), super.toString(),"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    startDateTime.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM)));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (isAllDay) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return String.format(\"[%s]%s (at: %s - %s)\", TaskType.EVENT.getTag(), super.toString(),"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    startDateTime.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM)),"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    endDateTime.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM)));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (startDateTime.isEqual(endDateTime)) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return String.format(\"[%s]%s (at: %s)\", TaskType.EVENT.getTag(), super.toString(),"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    startDateTime.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM)));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else if (startDateTime.toLocalDate().isEqual(endDateTime.toLocalDate())) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return String.format(\"[%s]%s (at: %s - %s)\", TaskType.EVENT.getTag(), super.toString(),"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    startDateTime.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM)),"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    endDateTime.format(DateTimeFormatter.ofLocalizedTime(FormatStyle.MEDIUM)));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return String.format(\"[%s]%s (at: %s - %s)\", TaskType.EVENT.getTag(), super.toString(),"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    startDateTime.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM)),"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    endDateTime.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM)));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 175
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * Task Class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eRepresents a single task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    protected TaskType type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Task constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param type Type of task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Task(String description, TaskType type) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public TaskType getType() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void setType(TaskType type) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Get a status symbol for the task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return + for a done task or x for an undone task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return (isDone ? \"+\" : \"x\"); //return + or x symbols"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 63
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.InvalidIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * TaskList Class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eRepresents a list of Tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public ArrayList\u003cTask\u003e toList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param taskIndex Index of task to set as done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return Task set as done."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws InvalidIndexException Index is out-of-bounds."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Task done(int taskIndex) throws InvalidIndexException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            Task task \u003d tasks.get(taskIndex - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            task.setDone(true);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new InvalidIndexException(\"OOPS!!! I can\u0027t do that, please gimme a valid task ID mate.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Deletes a task from the list permanently."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param taskIndex Index of task to delete."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return Task that was deleted."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @throws InvalidIndexException Index is out-of-bounds."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Task delete(int taskIndex) throws InvalidIndexException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            Task task \u003d tasks.remove(taskIndex - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            throw new InvalidIndexException(\"OOPS!!! I can\u0027t do that, please gimme a valid task ID mate.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return tasks.get(i);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * Finds all tasks in list which contains searchString in its description."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @param searchString Search string to match in a Task description."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     * @return TaskList containing Tasks which contains searchString in their description."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public TaskList find(String searchString) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        TaskList matchingTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            if (t.getDescription().toLowerCase().contains(searchString.toLowerCase())) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                matchingTasks.add(t);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return matchingTasks;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 90
    }
  },
  {
    "path": "src/main/java/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * TaskType Enum."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eRepresents the type of a Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    TODO(\"T\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    EVENT(\"E\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    DEADLINE(\"D\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    private final String tag;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    TaskType(String tag) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public String getTag() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return tag;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return getTag();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 30
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * Todo Class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * \u003cp\u003eRepresents the todo-type task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " * @author Marcus Ong"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        super(description, TaskType.TODO);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        return String.format(\"[%s]%s\", TaskType.TODO.getTag(), super.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 20
    }
  },
  {
    "path": "src/test/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void getBy_sameDateTime_success() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Deadline\", LocalDate.parse(\"2019-05-10\").atStartOfDay());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(deadline.getBy(), LocalDate.parse(\"2019-05-10\").atStartOfDay());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void setBy_sameDateTime_success() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Deadline\", LocalDate.parse(\"2019-05-10\").atStartOfDay());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        deadline.setBy(LocalDate.parse(\"2019-06-22\").atStartOfDay());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(deadline.by, LocalDate.parse(\"2019-06-22\").atStartOfDay());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void isAllDay_true_success() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Event event \u003d new Event(\"Event\", LocalDate.parse(\"2019-05-10\").atStartOfDay(), true);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(event.isAllDay(), true);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void setAllDay() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Event\", LocalDate.parse(\"2019-05-10\").atStartOfDay());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        deadline.setAllDay(true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(deadline.isAllDay, true);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void testToString_byDateOnly_success() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(\"[D][x] Achieve Goal A (at: May 10, 2019)\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                new Deadline(\"Achieve Goal A\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        LocalDate.parse(\"2019-05-10\").atStartOfDay(), true).toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void testToString_byDateTime_success() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(\"[D][x] Achieve Goal A (at: May 10, 2019 11:00:00 AM)\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                new Deadline(\"Achieve Goal A\","
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        LocalDateTime.parse(\"2019-05-10T11:00\")).toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 51
    }
  },
  {
    "path": "src/test/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import exception.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void getStartDateTime_sameDateTime_success() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Event event \u003d new Event(\"Event\", LocalDate.parse(\"2019-05-10\").atStartOfDay());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(event.getStartDateTime(), LocalDate.parse(\"2019-05-10\").atStartOfDay());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void setStartDateTime_sameDateTime_success() throws DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Event event \u003d new Event(\"Event\", LocalDate.parse(\"2019-05-10\").atStartOfDay());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        event.setStartDateTime(LocalDate.parse(\"2019-06-22\").atStartOfDay());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(event.startDateTime, LocalDate.parse(\"2019-06-22\").atStartOfDay());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void getEndDateTime_sameDateTime_success() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Event event \u003d new Event(\"Event\", LocalDate.parse(\"2019-05-10\").atStartOfDay());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(event.getEndDateTime(), LocalDate.parse(\"2019-05-10\").atStartOfDay());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void setEndDateTime_sameDateTime_success() throws DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Event event \u003d new Event(\"Event\", LocalDate.parse(\"2019-05-10\").atStartOfDay());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        event.setEndDateTime(LocalDate.parse(\"2019-06-22\").atStartOfDay());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(event.endDateTime, LocalDate.parse(\"2019-06-22\").atStartOfDay());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void isAllDay_true_success() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Event event \u003d new Event(\"Event\", LocalDate.parse(\"2019-05-10\").atStartOfDay(), true);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(event.isAllDay(), true);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void setAllDay_true_success() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        Event event \u003d new Event(\"Event\", LocalDate.parse(\"2019-05-10\").atStartOfDay());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        event.setAllDay(true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(event.isAllDay, true);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void testToString_startDateOnly_success() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(\"[E][x] Mother\u0027s Day (at: May 10, 2019)\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                new Event(\"Mother\u0027s Day\", LocalDate.parse(\"2019-05-10\").atStartOfDay(), true).toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void testToString_startDateTimeOnly_success() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(\"[E][x] Start of Long Project (at: May 10, 2019, 11:00:00 AM)\","
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                new Event(\"Start of Long Project\", LocalDateTime.parse(\"2019-05-10T11:00\")).toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void testToString_startEndDate_success() throws DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(\"[E][x] Conference (at: May 10, 2019 - May 11, 2019)\","
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                new Event(\"Conference\","
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        LocalDate.parse(\"2019-05-10\").atStartOfDay(),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        LocalDate.parse(\"2019-05-11\").atStartOfDay(),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        true).toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void testToString_startEndDateTime_success() throws DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(\"[E][x] Hackathon (at: May 10, 2019, 10:00:00 AM - May 11, 2019, 1:00:00 PM)\","
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                new Event(\"Hackathon\","
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        LocalDateTime.parse(\"2019-05-10T10:00\"),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        LocalDateTime.parse(\"2019-05-11T13:00\")).toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void testToString_startEndDateTimeSame_success() throws DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        assertEquals(\"[E][x] Meeting (at: May 10, 2019, 10:00:00 AM - 1:00:00 PM)\","
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                new Event(\"Meeting\","
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        LocalDateTime.parse(\"2019-05-10T10:00\"),"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                        LocalDateTime.parse(\"2019-05-10T13:00\")).toString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    void testToString_endBeforeStart_exceptionThrown() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            assertEquals(\"[E][x] Meeting (at: May 10, 2019, 10:00:00 AM - 1:00:00 PM)\","
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                    new Event(\"Meeting\","
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                            LocalDateTime.parse(\"2019-05-10T10:00\"),"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "                            LocalDateTime.parse(\"2019-05-10T13:00\")).toString());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        } catch (DukeIllegalArgumentException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "            assertEquals(\"End date should be before start date!\", e.getMessage());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 100
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tG\u0027day mate! I\u0027m Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tWhatcha need help with?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tGot it mate. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t[T][x] borrow book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tNow you have 1 tasks in the list mate."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t1. [T][x] borrow book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tGot it mate. I\u0027ve added this task:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t[D][x] return book (by: Sunday)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tNow you have 2 tasks in the list mate."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tGot it mate. I\u0027ve added this task:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t[E][x] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tNow you have 3 tasks in the list mate."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tNice one mate! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t  [T][+] borrow book"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t1. [T][+] borrow book"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t2. [D][x] return book (by: Sunday)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t3. [E][x] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tNoted mate! I\u0027ve removed this task:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t  [D][x] return book (by: Sunday)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tNow you have 2 tasks in the list mate."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tOOPS!!! Sorry mate, I don\u0027t geddit."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\tBye mate. Catch you later!"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "\t____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 49
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 21
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marqueurs404"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "marqueurs404": 34
    }
  }
]
