[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Constructor for deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @param description  description of deadline"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @param by string indicating date and time"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        this.by \u003d Parser.parseInput(by);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d \u0027of\u0027 MMM yyyy h:mm a\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sreesubbash": 26
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    private static TaskList TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Duke begins at this main method"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        Ui.greet();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            Ui.serve(Storage.load());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        } catch (IOException | ClassNotFoundException ce) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            Ui.serve(new TaskList());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sreesubbash": 16,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sreesubbash": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Constructor for event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @param description  description of event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @param at string indicating date and time"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        this.at \u003d Parser.parseInput(at);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d \u0027of\u0027 MMM yyyy h:mm a\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        return \"[D]\" + super.toString() + \" (at: \" + at.format(formatter) + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sreesubbash": 26
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    private String raw;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    List\u003cString\u003e args;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    String type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    String remainingArgs;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    List\u003cString\u003e argsWithDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Constructor for Parser"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @param move string that user types in"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public Parser(String move) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        raw \u003d move;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        args \u003d new LinkedList\u003c\u003e(Arrays.asList(move.split(\" \")));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        type \u003d args.get(0);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        args.remove(0);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        remainingArgs \u003d String.join(\" \", args);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Getter for type of action"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @return type of action"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        if (args.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            return raw;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            return type;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Getter for Task Number from action"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @return Task Number"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @throws DukeException if task number incorrect"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public int getTaskNo() throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            int taskNo \u003d Integer.parseInt(args.get(0)) - 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            return taskNo;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            throw new DukeException(\"Please give a task number\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Getter for Task Name from action"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @return Task Name"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @throws DukeException if task name missing"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public String getTaskName() throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            String name \u003d args.get(0);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            return name;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            throw new DukeException(\"Please give a task name\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Getter for description without type"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @return description"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        return remainingArgs;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    private void parseArgsWithDate(String delimitter) throws DukeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        argsWithDate \u003d new LinkedList\u003c\u003e(Arrays.asList(remainingArgs.split(delimitter)));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        if (argsWithDate.size() !\u003d 2) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Set date after\" + delimitter);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Getter Deadline Description"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @return Deadline description"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @throws DukeException if no date provided"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public String getDeadlineDescription() throws DukeException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        if (argsWithDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            this.parseArgsWithDate(\" /by \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        return argsWithDate.get(0);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Getter Deadline Date"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @return Deadline date"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @throws DukeException if no date provided"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public String getDeadlineDate() throws DukeException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        if (argsWithDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            this.parseArgsWithDate(\" /by \");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        return argsWithDate.get(1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Getter Event Description"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @return Event description"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @throws DukeException if no date provided"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public String getEventDescription() throws DukeException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        if (argsWithDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            this.parseArgsWithDate(\" /at \");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        return argsWithDate.get(0);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Getter Event Date"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @return Event date"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @throws DukeException if no date provided"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public String getEventDate() throws DukeException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        if (argsWithDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            this.parseArgsWithDate(\" /at \");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        return argsWithDate.get(1);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Parses string date time to LocalDateTime object"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @return LocalDateTime object"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public static LocalDateTime parseInput(String at) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        LocalDateTime temp \u003d LocalDateTime.parse(at, formatter);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        //System.out.println(temp);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sreesubbash": 153
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Saves TaskList into drive"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @param toSave is the TaskList to be saved"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @throws IOException if file cannot be written in drive"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public static void save(TaskList toSave) throws IOException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        FileOutputStream fos \u003d new FileOutputStream(System.getProperty(\"user.dir\") + \"/notes.ser\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        ObjectOutputStream oos \u003d new ObjectOutputStream(fos);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        oos.writeObject(toSave);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        oos.close();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Loads TaskList from drive"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @return TaskList from drive"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @throws IOException  file cannot be found"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @throws ClassNotFoundException  if object to be loaded cannot be founf"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public static TaskList load() throws IOException, ClassNotFoundException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        FileInputStream fis \u003d new FileInputStream(System.getProperty(\"user.dir\") + \"/notes.ser\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        ObjectInputStream ois \u003d new ObjectInputStream(fis);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        TaskList toLoad \u003d (TaskList) ois.readObject();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        ois.close();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        return toLoad;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sreesubbash": 35
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    private static final long serialVersionUID \u003d 42L;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Constructor of task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @param description is the task description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Marks task as completed"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sreesubbash": 37
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "public class TaskList implements Serializable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    private List\u003cTask\u003e todos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        todos \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Carries out action on TaskList using move"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @param move is passed by user thru UI"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @return true if move was successful else false"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public boolean action(String move) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        Parser current \u003d new Parser(move);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            if (current.getType().equals(\"list\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                Ui.printList(todos);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            } else if (current.getType().equals(\"find\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                Ui.findTasks(todos, current.getTaskName());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            } else if (current.getType().equals(\"done\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                completeTask(current.getTaskNo());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            } else if (current.getType().equals(\"delete\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                deleteTask(current.getTaskNo());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                addTask(current);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            Ui.printError(de);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        } catch (DateTimeParseException dtpe) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            System.out.println(dtpe.getMessage() + \"\\nUse dd/MM/yyyy HHmm formatting\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    private void addTask(Parser parser) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        Task current;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        if (parser.getType().equals(\"todo\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            if (parser.getDescription().equals(\"\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            current \u003d new ToDo(parser.getDescription());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        } else if (parser.getType().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            if (parser.remainingArgs.equals(\"\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            current \u003d new Deadline(parser.getDeadlineDescription(), parser.getDeadlineDate());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        } else if (parser.getType().equals(\"event\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            if (parser.remainingArgs.equals(\"\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            current \u003d new Event(parser.getEventDescription(), parser.getEventDate());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        todos.add(current);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + current"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                + \"\\nNow you have \" + todos.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    private void completeTask(int taskNo) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            Task current \u003d todos.get(taskNo);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            current.markAsDone();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            Ui.completedTask(current);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            throw new DukeException(\"Please give correct task number\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    private void deleteTask(int taskNo) throws DukeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            Task current \u003d todos.get(taskNo);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            todos.remove(current);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            Ui.deletedTask(current, todos);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            throw new DukeException(\"Please give correct task number\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sreesubbash": 92
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Constructor for todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @param description  description of todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sreesubbash": 16
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Greets user"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke \\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Serves user while waiting for input"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @param taskList on which user can have his actions on"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public static void serve(TaskList taskList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            String move \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            if (move.equals(\"bye\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            taskList.action(move);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                Storage.save(taskList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Prints errors raised due to wrong input"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @param de DukeException to be printed"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public static void printError(DukeException de) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        System.out.println(de.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Prints task which was completed"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @param t task which was completed"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public static void completedTask(Task t) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + t);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Prints task which was deleted"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @param t task which was deleted"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @param todos remaining list used to calculate tasks left"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public static void deletedTask(Task t, List\u003cTask\u003e todos) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + t"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                + \"\\nNow you have \" + todos.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * Prints entire list of tasks"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     * @param todos list with all the tasks"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public static void printList(List\u003cTask\u003e todos) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        for (int i \u003d 0; i \u003c todos.size(); i++) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            System.out.println((i + 1) + \". \" + todos.get(i));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public static void findTasks(List\u003cTask\u003e todos, String name) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        for (int i \u003d 0; i \u003c todos.size(); i++) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            Task curr \u003d todos.get(i);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            if (curr.getDescription().contains(name)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                System.out.println((i + 1) + \". \" + curr);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sreesubbash": 92
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public void parserGetDate() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            Parser parser \u003d new Parser(\"deadline CS3230 Assignment by 19/12/2019 1500\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            String date \u003d parser.getDeadlineDate();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            assertEquals(\"19/12/2019 1500\", date);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public void parserDateInput() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        LocalDateTime dateTime \u003d Parser.parseInput(\"19/12/2019 1500\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d \u0027of\u0027 MMM yyyy h:mm a\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        assertEquals(\"19 of Dec 2019 3:00 PM\", dateTime.format(formatter));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public void deleteWrongTask() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        assertEquals(false, taskList.action(\"delete 1\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sreesubbash": 34
    }
  }
]
