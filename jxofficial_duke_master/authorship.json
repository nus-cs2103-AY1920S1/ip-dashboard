[
  {
    "path": "src/main/java/CommandHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class CommandHandler {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    private LocalStorage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public CommandHandler(TaskList tasks, LocalStorage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void executeCommand(String cmd, String input) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        OutputUtilities.printLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            switch (cmd) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    OutputUtilities.sayBye();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    tasks.printTasks();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    tasks.markTaskAsCompleted(taskNumber, true);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    storage.writeToTasksFile(tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    String todoText \u003d input;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    tasks.addTask(new Todo(todoText),true);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    storage.writeToTasksFile(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    String deadline \u003d input;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    String[] deadlineParts \u003d deadline.split(\" /by \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    String deadLineText \u003d deadlineParts[0];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    String by \u003d deadlineParts[1];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                        tasks.addTask(new Deadline(deadLineText, by), true);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                        System.out.println(\"\\t \" + e.getMessage() + \". Please enter date in this format DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    storage.writeToTasksFile(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    String event \u003d input;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    String[] eventParts \u003d event.split(\" /at \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    String eventText \u003d eventParts[0];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    String at \u003d eventParts[1];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                        tasks.addTask(new Event(eventText, at),true);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                        System.out.println(\"\\t \" + e.getMessage() + \". Please enter date in this format DD/MM/YYYY HHMM - DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    storage.writeToTasksFile(tasks);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    int taskNumberToRemove \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    tasks.deleteTask(taskNumberToRemove, true);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    storage.writeToTasksFile(tasks);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    throw new InvalidCommandException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        } catch (DukeException dukeException) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            System.out.println(\"\\t ☹ OOPS!!! \" + dukeException.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        OutputUtilities.printLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 77
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    protected Date byDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public Deadline(String taskName, String by) throws ParseException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.taskType \u003d TypeOfTask.DEADLINE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.byDate \u003d formatter.parse(by);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.details \u003d \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public Deadline(String taskName, String by, boolean isCompleted) throws ParseException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(taskName, isCompleted);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.taskType \u003d TypeOfTask.DEADLINE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.byDate \u003d formatter.parse(by);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.details \u003d \"(by: \" + by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 28
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public static final String filePath \u003d \"C:/Users/jxken/Desktop/Github/duke/data/duke.txt\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        LocalStorage storage \u003d new LocalStorage(filePath);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        TaskList tasks \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        CommandHandler commandHandler \u003d new CommandHandler(tasks, storage);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        OutputUtilities outputUtilities \u003d new OutputUtilities(tasks, storage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        outputUtilities.sayHi();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            String[] parts \u003d input.split(\"\\\\s\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            String cmd \u003d parts[0];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            String text \u003d input.substring(cmd.length()).stripLeading();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            commandHandler.executeCommand(cmd, text);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            if (cmd.equals(\"bye\")) System.exit(0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 24,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "class EmptyTodoTextException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public EmptyTodoTextException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "class TaskDoesNotExistException extends DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public TaskDoesNotExistException(String message) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 25
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    Date date1;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    Date date2;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public Event(String taskName, String at) throws ParseException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.taskType \u003d TypeOfTask.EVENT;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String[] parts \u003d at.split(\" - \");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.date1 \u003d formatter.parse(parts[0]);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.date2 \u003d formatter.parse(parts[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.details \u003d \"(at: \" + at + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public Event(String taskName, String at, boolean isCompleted) throws ParseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(taskName, isCompleted);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.taskType \u003d TypeOfTask.EVENT;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String[] parts \u003d at.split(\" - \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.date1 \u003d formatter.parse(parts[0]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.date2 \u003d formatter.parse(parts[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.details \u003d \"(at: \" + at;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 31
    }
  },
  {
    "path": "src/main/java/FileReaderHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class FileReaderHandler {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public FileReaderHandler(TaskList tasks) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void readLineFromFileToList(String taskType, boolean isCompleted, String taskString) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                case \"TODO\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    tasks.addTask(new Todo(taskString, isCompleted), false);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                case \"DEADLINE\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    String[] deadlineParts \u003d taskString.split(\" \\\\(by: \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    String deadlineText \u003d deadlineParts[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                        tasks.addTask(new Deadline(deadlineText, deadlineParts[1], isCompleted), false);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                        System.out.println(e.getMessage() + \". Please make sure date from file is in this format DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                case \"EVENT\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    String[] eventParts \u003d taskString.split(\" \\\\(at: \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    String eventText \u003d eventParts[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                        tasks.addTask(new Event(eventText, eventParts[1], isCompleted), false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                        System.out.println(e.getMessage() + \". Please enter date from file in this format DD/MM/YYYY HHMM - DD/MM/YYYY HHMM\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            System.out.println(\"\\t ☹ OOPS!!! \" + e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 43
    }
  },
  {
    "path": "src/main/java/LocalStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class LocalStorage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    private File tasksFile;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public LocalStorage(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.tasksFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void writeToTasksFile(TaskList tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        List\u003cTask\u003e taskList \u003d tasks.getList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            FileWriter fw \u003d new FileWriter(tasksFile);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            for (Task t : taskList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                String fileString \u003d t.convertTaskToFileString() + \"\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                fw.write(fileString);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            System.out.println( e.getMessage() );"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void readFromTasksFileToList (TaskList tasks) throws FileNotFoundException  {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        FileReaderHandler fileReaderHandler \u003d new FileReaderHandler(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            Scanner sc \u003d new Scanner(tasksFile);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                String fileLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                String[] parts \u003d fileLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                String taskType \u003d parts[0].toUpperCase();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                boolean isCompleted \u003d parts[1].equals(\"T\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                String taskString \u003d parts[2];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                fileReaderHandler.readLineFromFileToList(taskType, isCompleted, taskString);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 46
    }
  },
  {
    "path": "src/main/java/OutputUtilities.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class OutputUtilities {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    private LocalStorage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public OutputUtilities(TaskList tasks, LocalStorage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.taskList \u003d tasks.getList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public static void sayBye() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        System.out.println(\"\\t Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "   public void sayHi() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        System.out.println(\"\\t Hello! I\u0027m Duke.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            storage.readFromTasksFileToList(tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            System.out.println(\"\\t This is where you left off previously: \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            System.out.println(\"\\t Fetching failed. \" + e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            System.out.println(\"\\t Creating file now...\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            File dukeTxt \u003d new File(Duke.filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                dukeTxt.createNewFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                System.out.println(\"\\t File created! \" + dukeTxt.getAbsolutePath());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                System.out.println(\"\\t Reading file...\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            } catch (IOException ioe) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                System.out.println(\"\\t File creation was not successful. \" + ioe);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                System.out.println(\"Exiting system.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                System.exit(-1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        printTasks();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "   }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "   public static void printLine() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        System.out.println(\"\\t_______________________________\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void printAddTaskMessage(Task t) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String pluralOrNot \u003d taskList.size() \u003d\u003d 1 ? \"task\" : \"tasks\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        List\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        System.out.println(\"\\t Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                \"\\t  \" + t.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                \"\\t Now you have \" + list.size() + \" \" + pluralOrNot + \" in the list\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void printTasks() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) System.out.println(\"\\t No pending tasks\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            String pluralOrNot \u003d taskList.size() \u003d\u003d 1 ? \"Task\" : \"Tasks\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            System.out.println(\"\\t \" + pluralOrNot);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                System.out.print(\"\\t \" + (i + 1) + \".\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                System.out.println(taskList.get(i));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void printMarkTaskAsCompletedMessage(Task t) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        System.out.println(\"\\t Nice! I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                \"\\t  [✓] \" + t.getTaskName() + \" \" + t.getDetails() );"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void printDeleteTaskMessage(Task t) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String pluralOrNot \u003d taskList.size() \u003d\u003d 1 ? \"task\" : \"tasks\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        System.out.println(\"\\t I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                \"\\t  [✓] \" + t.getTaskName() + \" \" + t.getDetails() + \"\\n\" +"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "                \"\\t Now you have \" + taskList.size() + \" \" + pluralOrNot + \" in the list\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 89
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    protected boolean isCompleted;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    protected String details;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    protected TypeOfTask taskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.isCompleted \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public Task(String taskName, boolean isCompleted) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.isCompleted \u003d isCompleted;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public String convertTaskToFileString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        char isCompleted \u003d this.isCompleted ? \u0027T\u0027 : \u0027F\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String taskType \u003d this.taskType.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String result \u003d  taskType + \" | \" + isCompleted + \" | \" + this.taskName + \" \" + this.details;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        return result.stripTrailing();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void markAsCompleted() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.isCompleted \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        char symbol \u003d this.isCompleted ? \u0027✓\u0027 : \u0027✗\u0027;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String result \u003d \"[\" + taskType + \"][\" + symbol + \"] \" + taskName + \" \" + details;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        return result.stripTrailing();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 46
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    private OutputUtilities outputUtilities;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public TaskList(LocalStorage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        outputUtilities \u003d new OutputUtilities(this, storage);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public TaskList(List taskList, OutputUtilities ou) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.outputUtilities \u003d ou;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void addTask(Task t, boolean printMessage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        if (t.getTaskName().isBlank()) throw new EmptyTodoTextException(\"The description of a todo cannot be empty\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        if (printMessage) outputUtilities.printAddTaskMessage(t);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void printTasks() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "       outputUtilities.printTasks();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void markTaskAsCompleted(int taskNumber, boolean printMessage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        if (taskNumber \u003c 1 || taskNumber \u003e taskList.size()) throw new TaskDoesNotExistException(\"Task not found\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        Task t \u003d taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        t.markAsCompleted();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        if (printMessage) outputUtilities.printMarkTaskAsCompletedMessage(t);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public void deleteTask(int taskNumber, boolean printMessage) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        Task t \u003d taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        taskList.remove(t);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        if (printMessage) outputUtilities.printDeleteTaskMessage(t);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 53
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public Todo(String taskName) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.taskType \u003d TypeOfTask.TODO;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.details \u003d \"\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public Todo(String taskName, boolean isCompleted) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        super(taskName, isCompleted);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.taskType \u003d TypeOfTask.TODO;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        this.details \u003d \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 19
    }
  },
  {
    "path": "src/main/java/TypeOfTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "public enum TypeOfTask {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    TODO, DEADLINE, EVENT;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jxofficial"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        String taskType \u003d super.toString();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "        return taskType.substring(0, 1) + taskType.substring(1).toLowerCase();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jxofficial"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jxofficial": 9
    }
  }
]
