[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "MistyRainforest": 33
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "false@[E]@asdasda1@at 02/12/19 0600"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "false@[E]@asdasda2@at 01/12/19 0600"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "true@[E]@asdasda3@at 02/12/19 0600"
      }
    ],
    "authorContributionMap": {
      "MistyRainforest": 3
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "false@[E]@animal book carnival@at 02/12/19 0600"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "false@[E]@club carnival@at 01/12/19 0600"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "true@[E]@book club bees@at 02/12/19 0600"
      }
    ],
    "authorContributionMap": {
      "MistyRainforest": 3
    }
  },
  {
    "path": "src/main/java/Date.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": " * Date representation of date string that\u0027s given"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "public class Date {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    boolean exists \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    String precursor \u003d \"\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yy HHss\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    java.util.Date data;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    public Date(String dateString) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        precursor \u003d dateString.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        if (!dateString.equals(\"  \")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                this.data \u003d formatter.parse(dateString.split(\" \", 2)[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                this.exists \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            catch (Exception e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                System.out.println(\"WrongDateFormat\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        if (exists) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            return precursor + \" \" + formatter.format(data);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            return \"NIL\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        if (exists) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            return \"(\" + precursor + \" \" + formatter.format(data) + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            return \"  \";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MistyRainforest": 42
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MistyRainforest": 48
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "public class Duke extends Application{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private UserInterface ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private ArrayList\u003cString\u003e userIn \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private ArrayList\u003cString\u003e reply \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.jpg\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.jpg\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        storage \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            tasks \u003d new TaskList(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        ui \u003d new UserInterface(tasks, storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            tasks \u003d new TaskList(filePath);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        ui \u003d new UserInterface(tasks, storage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        dukePrint(\"Hello! I\u0027m Duke\", \"What can I do for you?\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        this.ui.listen();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        dukePrint(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * Main driver class for Duke."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * Echos string."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * @param echoedString targeted String to be echoed"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private static void echo(String echoedString) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        dukePrint(echoedString);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * Prints what Duke says in correct format."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * @param texts any number of String arguments"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     *              each prints on a new line."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * Prints texts in the correct format on console"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * @param texts varargs to print on different lines"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private static void dukePrint(Object... texts) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        System.out.println(\"    _____________________________\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        for (Object text : texts) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            System.out.println(\"     \" + text);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        System.out.println(\"    _____________________________\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        Button sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        Scene scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        });"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        });"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        });"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        });"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        );"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        return ui.getReply(input);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "MistyRainforest": 205
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MistyRainforest": 10
    }
  },
  {
    "path": "src/main/java/ListItem.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "public class ListItem {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private String status;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private boolean isDone \u003d false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    ListItem(String description, String command, String date) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            assert(!command.equals(\"\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            assert (!description.equals(\"\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                case \"[T]\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    this.status \u003d \"[T]\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    this.date \u003d new Date(\"  \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                case \"[E]\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    this.status \u003d \"[E]\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    this.description \u003d description.split(\"/\")[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    this.date \u003d new Date(date);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                case \"[D]\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    this.status \u003d \"[D]\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    this.description \u003d description.split(\"/\")[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    this.date \u003d new Date(date);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        catch (Error e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            System.out.println(\"Item Creation Error\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    void done() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    String format() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        return isDone + \"@\" + this.status + \"@\" + this.description + \"@\" + this.date.format() + \"\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        String toReturn;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            toReturn \u003d \"[DONE] \" + this.description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            toReturn \u003d \"[X] \" + this.description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        return this.status + toReturn + this.date;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MistyRainforest": 64
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    String filepath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    Storage(String filepath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * loads a list from the initiated filepath"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * @return formatted and read list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    ArrayList\u003cListItem\u003e load() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            Scanner reader \u003d new Scanner(new FileReader(filepath));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            ArrayList\u003cListItem\u003e tempArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            while(reader.hasNext()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                String commandIn \u003d reader.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                String[] commandArray \u003d commandIn.split(\"@\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                tempArray.add(new ListItem(commandArray[2], commandArray[1], commandArray[3]));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                if (commandArray[0].equals(\"true\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    tempArray.get((tempArray.size() - 1)).done();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            ArrayList toReturn \u003d new ArrayList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            toReturn.addAll(tempArray);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            return toReturn;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            System.out.println(\"ERROR cannot read\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * Saves data to associated filepath"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * @param toSave List that you want to save"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    void save(ArrayList\u003cListItem\u003e toSave) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filepath));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            for (ListItem item : toSave) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                writer.write(item.format());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            System.out.println(\"ERROR Cannot Save\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MistyRainforest": 59
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    static ArrayList\u003cListItem\u003e lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private static String filename;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    TaskList(String filepath) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        TaskList.filename \u003d filepath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    TaskList(ArrayList\u003cListItem\u003e loadedList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        lst \u003d loadedList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * adds an item to the todoList"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * @param description of the list item"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * @param command type of item it is"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * @param date due date if any for the item"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * @return Output string for Duke to print"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    static String addToTodo(String description, String command, String date) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        lst.add(new ListItem(description, command, date));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        String ret \u003d \"Got it. I\u0027ve added this task:\" + \"\\n\" + lst.get(lst.size() - 1).toString() + \"\\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                \"Now you have \" + lst.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        return ret;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * removes an item from list based off of index"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * @param index of the item to be removed"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * @return Output string for Duke to print"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    static String removeFromTodo(String index) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        assert(lst.size() !\u003d 0);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        ListItem target \u003d lst.get(Integer.parseInt(index) - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        lst.remove(target);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        String ret \u003d \"Noted. I\u0027ve removed this task:\" + target + \"\\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                (\"Now you have \" + lst.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        return ret;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        String toReturn \u003d \"\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        for (int i \u003d 0; i \u003c TaskList.lst.size(); i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            toReturn \u003d toReturn.concat((i + 1) + \".\" + TaskList.lst.get(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        if (TaskList.lst.size() \u003c 1) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            return \"To do list is Empty :)\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        assert(toReturn.length() \u003e 6);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MistyRainforest": 58
    }
  },
  {
    "path": "src/main/java/UserInterface.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "class UserInterface {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    static TaskList todoList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    static Storage data;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    UserInterface(TaskList todoList, Storage store) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        this.todoList \u003d todoList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        this.data \u003d store;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * starts Duke up until exit command is entered"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    static void listen () {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        String userCommand \u003d \"\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        String date \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        while (!userCommand.equals(\"exit\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            userInput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            userCommand \u003d userInput.split(\" \",2)[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                description \u003d userInput.split(\" \", 2)[1].split(\"/\")[0];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            } catch (Exception ignored) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            if (userInput.split(\"/\").length \u003e 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                date \u003d userInput.split(\"/\")[1];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                date \u003d \" \";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            switch(userCommand) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    dukePrint(todoList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    ListItem target \u003d todoList.lst.get(Integer.parseInt(userInput.split(\" \", 2)[1]) - 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    target.done();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    dukePrint(\"Nice! I\u0027ve marked this task as done:\", \"  \" + target);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                        dukePrint(todoList.addToTodo(description, userCommand, date));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    //try to catch more exceptions"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    catch (Exception e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                        dukePrint(\"OOPS!!! The description of a \" + userCommand + \" cannot be empty.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                        dukePrint(todoList.removeFromTodo(userInput.split(\" \", 2)[1]));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    catch (Exception e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                        dukePrint(\"Nothing to delete\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    String lst \u003d \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    int counter \u003d 1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    for (ListItem item : TaskList.lst) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                        if (item.getDescription().contains(description)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                            lst +\u003d counter + \".\" + item.toString() + \"\\n     \";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                            counter++;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    dukePrint(\"Here are the matching tasks in your list:\", lst.substring(0, lst.length() - 6));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                case \"pause\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                        Thread.sleep(1000);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    } catch (Exception ignored) {}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    dukePrint(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            data.save(todoList.lst);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    static String getReply(String userInput) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        String description \u003d \" \";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        String date;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        String userCommand \u003d userInput.split(\" \",2)[0];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            description \u003d userInput.split(\" \", 2)[1].split(\"/\")[0];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        if (userInput.split(\"/\").length \u003e 1) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            date \u003d userInput.split(\"/\")[1];"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            date \u003d \" \";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        switch(userCommand) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                return (todoList.toString());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                ListItem target \u003d todoList.lst.get(Integer.parseInt(userInput.split(\" \", 2)[1]) - 1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                target.done();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                return (\"Nice! I\u0027ve marked this task as done:\" + \"  \" + target);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    return (todoList.addToTodo(description, userCommand, date));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                //try to catch more exceptions"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                catch (Exception e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    return (\"OOPS!!! The description of a \" + userCommand + \" cannot be empty.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    return (todoList.removeFromTodo(userInput.split(\" \", 2)[1]));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                catch (Exception e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    return (\"Nothing to delete\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                String lst \u003d \"\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                int counter \u003d 1;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                for (ListItem item : TaskList.lst) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    if (item.getDescription().contains(description)) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                        lst +\u003d counter + \".\" + item.toString() + \"\\n     \";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                        counter++;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                return (\"Here are the matching tasks in your list:\" + \"\\n\" + lst.substring(0, lst.length() - 6));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            case \"pause\":"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                    Thread.sleep(1000);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                } catch (Exception ignored) {}"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "                return (\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        data.save(todoList.lst);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * Prints what Duke says in correct format."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     * @param texts any number of String arguments"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     *              each prints on a new line."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    private static void dukePrint(Object... texts) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        System.out.println(\"    _____________________________\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        for (Object text : texts) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "            System.out.println(\"     \" + text);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        System.out.println(\"    _____________________________\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MistyRainforest": 169
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        TaskList test \u003d new TaskList(\"data/TaskListTest1\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        test.addToTodo(\"Test1 Description\", \"event\", \"at 2/12/2019 1800\" );"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        Assertions.assertEquals(\"[E][✗] Test1 Description(at 02/12/19 0600)\", test.lst.get(0).toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        System.out.println(\"Tested\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MistyRainforest": 15
    }
  },
  {
    "path": "src/test/java/ListItemTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "public class ListItemTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        ListItem testSubject \u003d new ListItem(\"Description\", \"deadline\", \"by 2/12/2019 1800\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        Assertions.assertEquals(\"[D]\" + \"[✗] \"+ \"Description\" + \"(by 02/12/19 1800)\",testSubject.toString());"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MistyRainforest": 9
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "HELP"
      }
    ],
    "authorContributionMap": {
      "MistyRainforest": 1
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "HELP"
      }
    ],
    "authorContributionMap": {
      "MistyRainforest": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MistyRainforest"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "MistyRainforest": 21
    }
  }
]
