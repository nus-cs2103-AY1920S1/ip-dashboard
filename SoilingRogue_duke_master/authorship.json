[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "test {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 22,
      "-": 15
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "T | 0 | sleep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "D | 0 | 2103T ip| 28 of August 2019, 11:59 PM"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "E | 1 | project meeting| Friday 2101 classroom"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "T | 1 | run"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "D | 0 | return book| June 6th"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 5
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 37,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 8
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        String[] strArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        String command \u003d strArr[0];"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        String next \u003d String.join(\" \", strArr).replace(command, \"\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            return new DoneCommand(next);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            return new DeadlineCommand(next);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            return new EventCommand(next);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            return new TodoCommand(next);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            return new DeleteCommand(next);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 30
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     * Reads the file with the given filePath and saves it as a LinkedList\u003cString\u003e to be"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     * processed by the TaskList. Creates the relevant directory and files if none are present."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     * @return LinkedList\u003cString\u003e which contains the list of tasks in the saved format"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public LinkedList\u003cString\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        LinkedList\u003cString\u003e lst \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            Scanner fs \u003d new Scanner(file);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            while (fs.hasNext()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                String next \u003d fs.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                lst.addLast(next);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "//            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            file.getParentFile().mkdir();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            throw new DukeException(\"File not found\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return lst;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     * Saves the LinkedList\u003cString\u003e element by element separated by a lineSeparator"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     * into the given filePath."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     * @param lst The LinkedList\u003cString\u003e to be saved"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void save(LinkedList\u003cString\u003e lst) throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            for (String task : lst) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                fw.write(task + System.lineSeparator());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 60
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private LinkedList\u003cTask\u003e lst;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public TaskList(LinkedList\u003cString\u003e list) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        lst \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        for (String s : list) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            String[] arr \u003d s.split(\"\\\\|\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            String task \u003d arr[0].trim();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            int done \u003d Integer.parseInt(arr[1].trim());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            String desc \u003d arr[2];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            switch (task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                Deadline deadline \u003d Deadline.of(desc, arr[3]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                if (done \u003d\u003d 1) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    deadline.markAsDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                lst.addLast(deadline);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                Todo todo \u003d Todo.of(desc);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                if (done \u003d\u003d 1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    todo.markAsDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                lst.addLast(todo);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                Event event \u003d Event.of(desc, arr[3]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                if (done \u003d\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                    event.markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                lst.addLast(event);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        lst \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public int getNumTasks() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return lst.size();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public ArrayList\u003cString\u003e findTask(String keyword) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        ArrayList\u003cString\u003e matches \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        for (Task task : lst) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            if (description.contains(keyword)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                matches.add(task.toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return matches;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        lst.addLast(task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public String deleteTask(int index) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return lst.remove(index).toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public String doneTask(int index) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        Task task \u003d lst.get(index);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return task.toString();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public LinkedList\u003cString\u003e tasksToStringList(boolean isSaveFormat) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        LinkedList\u003cString\u003e stringLst \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        for (Task task : lst) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            if (isSaveFormat) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                stringLst.addLast(task.toSaveFormat());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                stringLst.addLast(String.format(\"%d.%s\", i, task.toString().trim()));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                ++i;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return stringLst;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 94
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     * Prints welcome message during startup"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        printStandard(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        printStandard(\"What can I do for you?\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     * Prints farewell message when \"bye\" is entered"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        printStandard(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     * Prints the standard line output for visual differentiation between user input and system output"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     * Reads a line of user input via a Scanner variable whenever the \"enter\" key is pressed"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     * Prints the error message of the DukeException being thrown"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void showError(String s) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        printStandard(s);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     * Prints all matching tasks to the keyword"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void showMatches(ArrayList\u003cString\u003e matches) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        printStandard(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        for (int i \u003d 0; i \u003c matches.size(); ++i) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            printStandard(String.format(\"%d.%s\", i + 1, matches.get(i).trim()));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     * Prints the most recent task that was added"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void showAddedTask(String task, int lstSize) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        printStandard(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        printStandard(task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        showTaskSize(lstSize);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     * Prints the most recent task that was deleted"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void showDeletedTask(String task, int lstSize) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        printStandard(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        printStandard(task);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        showTaskSize(lstSize);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     * Prints the most recent task that was marked as done"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void showDoneTask(String task) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        printStandard(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        printStandard(task);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     * Prints the task list size for both add \u0026 delete"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private void showTaskSize(int size) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        printStandard(String.format(\"Now you have %d tasks in the list.\", size));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     * Prints all the tasks in the TaskList and numbers them"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void showAllTasks(LinkedList\u003cString\u003e taskLst) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        printStandard(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        for (String task : taskLst) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            printStandard(task);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     * Converts and prints any given String into the correct output format"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private void printStandard(String string) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        System.out.println(\"     \" + string);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 122
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public abstract class AddCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private String desc;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public AddCommand(String desc) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return this.desc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 13
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 14
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public class DeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public DeadlineCommand(String desc) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            String[] deadlineArr \u003d getDesc().split(\"/by\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            Deadline deadlineTask \u003d Deadline.of(deadlineArr[0], deadlineArr[1]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            taskList.addTask(deadlineTask);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "//            storage.store(deadlineTask);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            ui.showAddedTask(deadlineTask.toString(), taskList.getNumTasks());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please follow correct format of \\\"deadline [description] /by [date]\\\".\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 26
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public class DeleteCommand extends InputCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public DeleteCommand(String index) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        super(index);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            String index \u003d getString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            if (index.split(\" \").length \u003e 1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                throw new InputMismatchException();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            int del \u003d Integer.parseInt(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            if (taskList.getNumTasks() \u003e del) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            ui.showDeletedTask(taskList.deleteTask(del - 1), taskList.getNumTasks());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please enter a single number.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The index of the task to delete is not within the task list size.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please enter a valid number.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 37
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public class DoneCommand extends InputCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public DoneCommand(String index) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        super(index);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            String index \u003d getString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            if (index.split(\" \").length \u003e 1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                throw new InputMismatchException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            int done \u003d Integer.parseInt(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            if (taskList.getNumTasks() \u003e done) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            ui.showDoneTask(taskList.doneTask(done - 1));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The index is not within the task list size.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please enter a valid number.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please enter a single number.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 36
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public class EventCommand extends AddCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public EventCommand(String desc) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            String[] eventArr \u003d getDesc().split(\"/at\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            Event eventTask \u003d Event.of(eventArr[0], eventArr[1]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            taskList.addTask(eventTask);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "//            storage.store(eventTask);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            ui.showAddedTask(eventTask.toString(), taskList.getNumTasks());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please follow correct format of \\\"event [description] /at [date]\\\".\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 26
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        storage.save(taskList.tasksToStringList(true));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 19
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public class FindCommand extends InputCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public FindCommand(String toFind) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        super(toFind);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        String toFind \u003d getString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        ui.showMatches(taskList.findTask(toFind));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 18
    }
  },
  {
    "path": "src/main/java/duke/command/InputCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public abstract class InputCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private String string;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public InputCommand(String string) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        this.string \u003d string.trim();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public String getString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return this.string;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 13
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        ui.showAllTasks(taskList.tasksToStringList(false));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 13
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public class TodoCommand extends AddCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public TodoCommand(String desc) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        Todo todoTask \u003d Todo.of(getDesc());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        taskList.addTask(todoTask);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "//        storage.store(todoTask);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        ui.showAddedTask(todoTask.toString(), taskList.getNumTasks());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 21
    }
  },
  {
    "path": "src/main/java/duke/task/DatedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public abstract class DatedTask extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    DatedTask(String icon, String description, String dateTime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        super(icon, description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        this.dateTime \u003d dateTimeConvert(dateTime.trim());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private String dateTimeConvert(String s) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(s);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            DateFormat df \u003d new SimpleDateFormat(\"d \u0027of\u0027 MMMMMMMMM yyyy, h:mm a\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            return df.format(date);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            return s;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    String getDateTime() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return super.toSaveFormat().concat(String.format(\"| %s\", this.getDateTime()));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 34
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public class Deadline extends DatedTask {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public static Deadline of(String description, String date) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        if (description.length() \u003d\u003d 0 || date.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description or date/time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            return new Deadline(description, date);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private Deadline(String description, String date) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        super(\"D\", description, date);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return super.toString().concat(String.format(\" (by: %s)\", getDateTime()));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 23
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public class Event extends DatedTask {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public static Event of(String description, String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        if (description.length() \u003d\u003d 0 || dateTime.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description or date/time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            return new Event(description, dateTime);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private Event(String description, String dateTime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        super(\"E\", description, dateTime);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return super.toString().concat(String.format(\" (at: %s)\", getDateTime()));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 23
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private String icon;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    Task(String icon, String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        this.icon \u003d icon.trim();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        this.description \u003d description.trim();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    String getIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return this.icon;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return String.format(\"%s | %d | %s\", getIcon(), isDone ? 1 : 0, getDescription());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        return String.format(\"  [%s][%s] %s\", getIcon(), getStatusIcon(), getDescription());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public static Todo of(String description) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "            return new Todo(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    private Todo(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        super(\"T\", description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 18
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 10
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void test() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 12
    }
  },
  {
    "path": "src/test/java/duke/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 9
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void test() throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        TaskList test \u003d new TaskList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        test.addTask(Todo.of(\"borrow book\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        assertEquals(test.getNumTasks(), 1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        String done \u003d test.doneTask(0);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        assertEquals(done, \"  [T][\" + \"\\u2713\" + \"] borrow book\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        test.deleteTask(0);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        assertEquals(test.getNumTasks(), 0);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 19
    }
  },
  {
    "path": "src/test/java/duke/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void test() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 13
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    public void dummyTodoTest() throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        Todo test \u003d Todo.of(\"borrow book\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "        assertEquals(test.toString(), \"  [T][\" + \"\\u2718\" + \"] borrow book\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 15
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "﻿Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "       [T][?] borrow book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "       [T][?] read book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "       [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "       [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     ☹ OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     1.  [T][?] borrow book"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     2.  [T][?] read book"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     3.  [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     4.  [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "       [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "       [T][?] read book"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     1.  [T][?] borrow book"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     2.  [T][?] read book"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     3.  [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 62
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "blah"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "bye"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SoilingRogue"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "SoilingRogue": 21
    }
  }
]
