[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public AddCommand(String fullCommand) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        Scanner sc \u003d new Scanner(fullCommand);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        sc.next();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        ArrayList\u003cTask\u003e taskLst \u003d tasks.getTaskLst();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        if (fullCommand.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            // Add a ToDo task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            if (!sc.hasNextLine()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                throw new DukeException(\"     \\u2639 OOPS!!! \" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        \"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            taskLst.add(new ToDo(sc.nextLine().substring(1), false));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        } else if (fullCommand.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            // Add a Deadline task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            String by \u003d sc.nextLine().substring(1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            String description \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            for (int i \u003d 0; i \u003c by.length(); i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                char c \u003d by.charAt(i);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                if (c !\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    description +\u003d c;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    by \u003d by.substring(i + 4);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    // get rid of space"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    description \u003d description.substring(0, description.length() - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            taskLst.add(new Deadline(description,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\")),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    false));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        } else if (fullCommand.startsWith(\"event\")) { // assume that task is an event"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            String at \u003d sc.nextLine().substring(1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            String description \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            for (int i \u003d 0; i \u003c at.length(); i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                char c \u003d at.charAt(i);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                if (c !\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    description +\u003d c;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    at \u003d at.substring(i + 4);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    // get rid of space"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    description \u003d description.substring(0, description.length() - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            taskLst.add(new Event(description,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    LocalDateTime.parse(at, DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\")),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    false));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            throw new DukeException(\"     \\u2639 OOPS!!! I\u0027m sorry, \" +"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    \"but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        System.out.printf(\"     Got it. I\u0027ve added this task:\\n       %s\\n\" +"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        \"     Now you have %d tasks in the list.\\n\","
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        taskLst.get(taskLst.size() - 1), taskLst.size());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 68
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    protected String fullCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 18
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public Deadline(String description, LocalDateTime by, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"d MMMM yyyy, ha\")) + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public String fileString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return \"D\" + super.fileString() + \" | \" + by.format(DateTimeFormatter.ofPattern(\"d MMMM yyyy, ha\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 22
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public DeleteCommand(String fullCommand) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        Scanner sc \u003d new Scanner(fullCommand);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        sc.next();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        ArrayList\u003cTask\u003e taskLst \u003d tasks.getTaskLst();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        int delTaskIndex \u003d sc.nextInt() - 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        Task deletedTask \u003d taskLst.remove(delTaskIndex);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        System.out.printf(\"     Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        \"       %s\\n     Now you have %d tasks in the list.\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                , deletedTask, taskLst.size());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 22
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public DoneCommand(String fullCommand) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        Scanner sc \u003d new Scanner(fullCommand);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        sc.next();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        ArrayList\u003cTask\u003e taskLst \u003d tasks.getTaskLst();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        int taskDoneIndex \u003d sc.nextInt() - 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        taskLst.get(taskDoneIndex).markAsDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        System.out.printf(\"     Nice! I\u0027ve marked this task as done:\\n       %s\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                , taskLst.get(taskDoneIndex));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 21
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            ui.showLoadingError(e.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                ui.showOpeningLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                ui.showClosingLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Save the new task list to the hard disk"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            ui.showSavingError(e.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        String filePath \u003d \".\" + File.separator + \"data\" + File.separator + \"duke.txt\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        new Duke(filePath).run();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 51,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public Event(String description, LocalDateTime at, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"d MMMM yyyy, ha\")) + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public String fileString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return \"E\" + super.fileString() + \" | \" + at.format(DateTimeFormatter.ofPattern(\"d MMMM yyyy, ha\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 23
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public ExitCommand(String fullCommand) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 12
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public ListCommand(String fullCommand) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        ArrayList\u003cTask\u003e taskLst \u003d tasks.getTaskLst();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        for (int i \u003d 0; i \u003c taskLst.size(); i++) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            System.out.printf(\"     %d.%s\\n\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    i + 1, taskLst.get(i));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 19
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        Scanner sc \u003d new Scanner(fullCommand);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        String command \u003d sc.next();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            return new ExitCommand(fullCommand);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            return new ListCommand(fullCommand);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            return new DeleteCommand(fullCommand);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            return new DoneCommand(fullCommand);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        } else if (command.startsWith(\"todo\") || command.startsWith(\"deadline\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                || command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            return new AddCommand(fullCommand);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            throw new DukeException(\"     \\u2639 OOPS!!! I\u0027m sorry, \" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    \"but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 25
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException, IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        // Create a new txt file if it currently does not exist"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        f.createNewFile();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        ArrayList\u003cTask\u003e taskLst \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            String s \u003d sc.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            String line \u003d s.substring(8);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            if (s.charAt(0) \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                taskLst.add(new ToDo(line, s.charAt(4) \u003d\u003d \u00271\u0027 ? true: false));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            } else if (s.charAt(0) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                for (int i \u003d 0; i \u003c line.length(); i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    if (line.charAt(i) \u003d\u003d \u0027|\u0027) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        taskLst.add(new Deadline(line.substring(0, i - 1),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                            LocalDateTime.parse(line.substring(i + 2), DateTimeFormatter.ofPattern(\"d MMMM yyyy, ha\")),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                                s.charAt(4) \u003d\u003d \u00271\u0027 ? true : false));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            } else if (s.charAt(0) \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                for (int i \u003d 0; i \u003c line.length(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    if (line.charAt(i) \u003d\u003d \u0027|\u0027) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                        taskLst.add(new Event(line.substring(0, i - 1),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                            LocalDateTime.parse(line.substring(i + 2), DateTimeFormatter.ofPattern(\"d MMMM yyyy, ha\")),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                                s.charAt(4) \u003d\u003d \u00271\u0027 ? true : false));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "                throw new DukeException(\"Invalid file format.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return taskLst;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    // Saving new task list to the hard disk"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public void save(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        String textToAdd \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        for (Task task : tasks.getTaskLst()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "            textToAdd +\u003d task.fileString() + \"\\n\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 65
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public String fileString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return \" | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 32
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private ArrayList\u003cTask\u003e taskLst;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.taskLst \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskLst) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        this.taskLst \u003d taskLst;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskLst() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return taskLst;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 19
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public String fileString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return \"T\" + super.fileString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 18
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    private String hLine \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        System.out.println(hLine);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\\n     What can I do for you?\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        System.out.printf(\"%s\\n\\n\", hLine);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public void showOpeningLine() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        System.out.println(hLine);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public void showClosingLine() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        System.out.printf(\"%s\\n\\n\", hLine);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public void showError(String err) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        System.out.println(err);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public void showLoadingError(String err) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        System.out.println(hLine);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        System.out.printf(\"     %s\\n\", err);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        System.out.printf(\"%s\\n\\n\", hLine);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    public void showSavingError(String err) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "        showLoadingError(err);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bruceskellator"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bruceskellator": 40
    }
  }
]
