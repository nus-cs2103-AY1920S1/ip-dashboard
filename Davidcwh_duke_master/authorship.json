[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidcwh": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    public static void runDuke() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        String line \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        String currentCommand \u003d \"\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        ArrayList\u003cTask\u003e addedItems \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        System.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        while (!currentCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "            currentCommand \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                if (!currentCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                    if (currentCommand.equals(\"list\")) { // Showing list of tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                        System.out.println(line);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                        for (int i \u003d 0; i \u003c addedItems.size(); i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            System.out.println(\"     \" + (i + 1) + \".\" + addedItems.get(i));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                        System.out.println(line);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                    } else if (currentCommand.length() \u003e\u003d 6 \u0026\u0026 currentCommand.substring(0, 4).equals(\"done\")) { // Marking a task as done"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(currentCommand.substring(5)) - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                        if (taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c addedItems.size()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            addedItems.get(taskNumber).markAsDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            System.out.println(line);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            System.out.println(\"       \" + addedItems.get(taskNumber));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            System.out.println(line);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            throw new InvalidCommandDukeException(\"â˜¹ OOPS!!! There is no task labelled that number.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                    } else if (currentCommand.length() \u003e\u003d 8 \u0026\u0026 currentCommand.substring(0, 6).equals(\"delete\")) { // Deleting a task in the list"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(currentCommand.substring(7)) - 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                        if (taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c addedItems.size()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            Task removedTask \u003d addedItems.get(taskNumber);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            addedItems.remove(taskNumber);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            System.out.println(line);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            System.out.println(\"     Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            System.out.println(\"       \" + removedTask);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            System.out.println(\"     Now you have \" + addedItems.size() + (addedItems.size() \u003e 1 ? \" tasks in the list.\" : \" task in the list.\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            System.out.println(line);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            throw new InvalidCommandDukeException(\"â˜¹ OOPS!!! There is no task labelled that number.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                    } else if (!currentCommand.equals(\"\")){ // Adding new task to the list"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                        String[] tempArray \u003d currentCommand.split(\" \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                        Task currentTask \u003d null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                        String description \u003d \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                        if (tempArray[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            description \u003d currentCommand.substring(5);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            if (!description.equals(\"\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                currentTask \u003d new ToDo(description);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                addedItems.add(currentTask);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                throw new InvalidTaskDescriptionDukeException(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                        } else if (tempArray[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            String by \u003d \"\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            boolean descriptionRecorded \u003d false;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            for (int i \u003d 1; i \u003c tempArray.length; i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                if (!tempArray[i].equals(\"/by\") \u0026\u0026 !descriptionRecorded) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                    description +\u003d tempArray[i];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                    if (i + 1 \u003c tempArray.length \u0026\u0026 !tempArray[i + 1].equals(\"/by\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                        description +\u003d \" \";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                } else if (tempArray[i].equals(\"/by\") \u0026\u0026 !descriptionRecorded){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                    descriptionRecorded \u003d true;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                } else if (!tempArray[i].equals(\"/by\") \u0026\u0026 descriptionRecorded){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                    by +\u003d tempArray[i];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                    if (i !\u003d tempArray.length - 1) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                        by +\u003d \" \";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            if (!description.equals(\"\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                currentTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                addedItems.add(currentTask);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                throw new InvalidTaskDescriptionDukeException(\"â˜¹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                        } else if (tempArray[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            String at \u003d \"\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            boolean descriptionRecorded \u003d false;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            for (int i \u003d 1; i \u003c tempArray.length; i++) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                if (!tempArray[i].equals(\"/at\") \u0026\u0026 !descriptionRecorded) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                    description +\u003d tempArray[i];"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                    if (i + 1 \u003c tempArray.length \u0026\u0026 !tempArray[i + 1].equals(\"/at\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                        description +\u003d \" \";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                } else if (tempArray[i].equals(\"/at\") \u0026\u0026 !descriptionRecorded){"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                    descriptionRecorded \u003d true;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                } else if (!tempArray[i].equals(\"/at\") \u0026\u0026 descriptionRecorded){"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                    at +\u003d tempArray[i];"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                    if (i !\u003d tempArray.length - 1) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                        at +\u003d \" \";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            if (!description.equals(\"\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                currentTask \u003d new Event(description, at);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                addedItems.add(currentTask);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                                throw new InvalidTaskDescriptionDukeException(\"â˜¹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                        if (currentTask !\u003d null) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            System.out.println(line);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            System.out.println(\"       \" + currentTask);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            System.out.println(\"     Now you have \" + addedItems.size() + (addedItems.size() \u003e 1 ? \" tasks in the list.\" : \" task in the list.\"));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            System.out.println(line);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                            throw new InvalidCommandDukeException(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                        throw new InvalidCommandDukeException(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "            } catch (InvalidCommandDukeException e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                System.out.println(\"     \" + e.getMessage());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "            } catch (InvalidTaskDescriptionDukeException e) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                System.out.println(\"     \" + e.getMessage());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        runDuke();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidcwh": 159,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidcwh": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidcwh": 13
    }
  },
  {
    "path": "src/main/java/InvalidCommandDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "public class InvalidCommandDukeException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    public InvalidCommandDukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidcwh": 5
    }
  },
  {
    "path": "src/main/java/InvalidTaskArgumentDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "public class InvalidTaskArgumentDukeException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    public InvalidTaskArgumentDukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidcwh": 5
    }
  },
  {
    "path": "src/main/java/InvalidTaskDescriptionDukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "public class InvalidTaskDescriptionDukeException extends InvalidTaskArgumentDukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    public InvalidTaskDescriptionDukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidcwh": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    public Task (String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + \" \" + this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidcwh": 22
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "davidcwh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "davidcwh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "davidcwh": 11
    }
  }
]
