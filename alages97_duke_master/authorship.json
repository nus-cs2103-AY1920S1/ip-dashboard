[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alages97"
        },
        "content": "import customexceptions.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alages97"
        },
        "content": "import customexceptions.IncorrectInputException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alages97"
        },
        "content": "import tasks.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alages97"
        },
        "content": "import tasks.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alages97"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alages97"
        },
        "content": "import tasks.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alages97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alages97"
        },
        "content": " * Represents a command that is perceived by Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alages97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alages97"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alages97"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Constructor for command object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param input The input given by the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public Command(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alages97"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Executes the command that Duke receieves."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param ui Ui object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param t TaskList object storing list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param s Storage object storing data input by the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @throws DukeException if there is an error with the user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public void execute(Ui ui, TaskList t, Storage s) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alages97"
        },
        "content": "        boolean find \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alages97"
        },
        "content": "        if (input.length() \u003c\u003d 3) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alages97"
        },
        "content": "            throw new IncorrectInputException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alages97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alages97"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alages97"
        },
        "content": "                ui.printList(t, s);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alages97"
        },
        "content": "            } else if (input.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alages97"
        },
        "content": "                Parser.parseDone(input, t, s);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alages97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alages97"
        },
        "content": "                if (input.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alages97"
        },
        "content": "                    Parser.parseToDo(input, t, ui, s);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alages97"
        },
        "content": "                } else if (input.substring(0, 4).equals(\"find\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alages97"
        },
        "content": "                    Parser.parseFind(input, t, ui, s);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alages97"
        },
        "content": "                    find \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alages97"
        },
        "content": "                } else if (input.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alages97"
        },
        "content": "                    throw new IncorrectInputException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alages97"
        },
        "content": "                } else if (input.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alages97"
        },
        "content": "                    Parser.parseEvent(input, t, ui, s);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alages97"
        },
        "content": "                } else if (input.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alages97"
        },
        "content": "                    Parser.parseDelete(input, t, ui, s);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alages97"
        },
        "content": "                } else if (input.length() \u003c\u003d 7) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alages97"
        },
        "content": "                    throw new IncorrectInputException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alages97"
        },
        "content": "                } else if (input.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alages97"
        },
        "content": "                    Parser.parseDeadline(input, t, ui, s);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alages97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alages97"
        },
        "content": "                    throw new IncorrectInputException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alages97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alages97"
        },
        "content": "                int numberOfTasks \u003d t.getCommandList().size();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alages97"
        },
        "content": "                if (find \u003d\u003d false) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alages97"
        },
        "content": "                    System.out.println(\"Now you have \" + numberOfTasks + \" tasks in the list\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alages97"
        },
        "content": "                    find \u003d false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alages97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alages97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alages97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alages97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alages97": 65
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alages97"
        },
        "content": "import customexceptions.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alages97"
        },
        "content": "import tasks.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alages97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alages97"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alages97"
        },
        "content": "import tasks.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alages97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alages97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alages97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alages97"
        },
        "content": " * Represents Duke bot."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alages97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alages97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alages97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alages97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Constructor for the Duke object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param path Path of the file where data is to be stored."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param tasks List of tasks input by the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public Duke(String path, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alages97"
        },
        "content": "        storage \u003d new Storage(path);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alages97"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alages97"
        },
        "content": "        this.tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Main program."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alages97"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alages97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alages97"
        },
        "content": "            new Duke(\"storage.txt\", tasks).run();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alages97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alages97"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alages97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Main running program."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alages97"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alages97"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alages97"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alages97"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alages97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alages97"
        },
        "content": "                Command command \u003d new Command(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alages97"
        },
        "content": "                command.execute(ui,tasks,storage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alages97"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alages97"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alages97"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alages97"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alages97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alages97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alages97"
        },
        "content": "        ui.showBye();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alages97": 60,
      "-": 4
    }
  },
  {
    "path": "src/main/java/customexceptions/DeadlineDetailsEmptyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alages97"
        },
        "content": "package customexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alages97"
        },
        "content": "import customexceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alages97"
        },
        "content": "public class DeadlineDetailsEmptyException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public DeadlineDetailsEmptyException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alages97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alages97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alages97": 9
    }
  },
  {
    "path": "src/main/java/customexceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alages97"
        },
        "content": "package customexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alages97"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alages97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alages97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alages97": 7
    }
  },
  {
    "path": "src/main/java/customexceptions/EventDetailsEmptyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alages97"
        },
        "content": "package customexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alages97"
        },
        "content": "import customexceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alages97"
        },
        "content": "public class EventDetailsEmptyException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public EventDetailsEmptyException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alages97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alages97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alages97": 9
    }
  },
  {
    "path": "src/main/java/customexceptions/IncorrectInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alages97"
        },
        "content": "package customexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alages97"
        },
        "content": "import customexceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alages97"
        },
        "content": "public class IncorrectInputException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public IncorrectInputException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alages97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alages97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alages97": 9
    }
  },
  {
    "path": "src/main/java/customexceptions/TaskNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alages97"
        },
        "content": "package customexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alages97"
        },
        "content": "import customexceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alages97"
        },
        "content": "public class TaskNotFoundException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public TaskNotFoundException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alages97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alages97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alages97": 9
    }
  },
  {
    "path": "src/main/java/customexceptions/TodoEmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alages97"
        },
        "content": "package customexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alages97"
        },
        "content": "import customexceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alages97"
        },
        "content": "public class TodoEmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public TodoEmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alages97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alages97"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alages97": 10
    }
  },
  {
    "path": "src/main/java/storage.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alages97"
        },
        "content": "D|-|meet parents|21/08/2019 2100"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alages97"
        },
        "content": "E|+|meet friends|12/04/2019 2100"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alages97"
        },
        "content": "T|+|meet gf"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alages97"
        },
        "content": "T|-|njoy"
      }
    ],
    "authorContributionMap": {
      "alages97": 4
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alages97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alages97"
        },
        "content": "import customexceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alages97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alages97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alages97"
        },
        "content": " * Represents a deadline that is input by the user"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alages97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alages97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alages97"
        },
        "content": "    private String deadlineTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alages97"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Constructor for deadline object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param name Name of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public Deadline(String name) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alages97"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Constructor for deadline object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param name Name of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param dT Details of the deadline."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public Deadline(String name, String dT) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alages97"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alages97"
        },
        "content": "        this.deadlineTime \u003d dT;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alages97"
        },
        "content": "        this.dateTime \u003d formatDateTime(dT.trim());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alages97"
        },
        "content": "        return \"D|\" + super.toString().trim() + \"|\" + dateTime.trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Formats the string given by user to date time."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param details details of the task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @return the formatted date time."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alages97"
        },
        "content": "    private String formatDateTime(String details) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alages97"
        },
        "content": "        StringBuilder formattedDateTime \u003d new StringBuilder();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alages97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alages97"
        },
        "content": "            String[] split \u003d details.split(\" \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alages97"
        },
        "content": "            String date \u003d split[0];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alages97"
        },
        "content": "            String time \u003d split[1];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alages97"
        },
        "content": "            String splitDate[] \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alages97"
        },
        "content": "            formattedDateTime.append(String.format(\"%02d\", Integer.parseInt(splitDate[0])));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alages97"
        },
        "content": "            formattedDateTime.append(\"/\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alages97"
        },
        "content": "            formattedDateTime.append(String.format(\"%02d\", Integer.parseInt(splitDate[1])));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alages97"
        },
        "content": "            formattedDateTime.append(\"/\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alages97"
        },
        "content": "            formattedDateTime.append(splitDate[2]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alages97"
        },
        "content": "            formattedDateTime.append(\" \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alages97"
        },
        "content": "            formattedDateTime.append(time);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alages97"
        },
        "content": "            return formattedDateTime.toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alages97"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alages97"
        },
        "content": "            throw new DukeException(\"the date time format entered is incorrect. \" +"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alages97"
        },
        "content": "                    \"Please enter again in the following format: dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alages97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alages97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alages97": 64
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alages97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alages97"
        },
        "content": "import customexceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alages97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alages97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alages97"
        },
        "content": " * Represent an event that was input by the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alages97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alages97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alages97"
        },
        "content": "    private String eventTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alages97"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Constructor for event object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param name The event name."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public Event(String name) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alages97"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Constructor for event object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param name The event name."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param eT The details of the event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public Event(String name, String eT) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alages97"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alages97"
        },
        "content": "        this.eventTime \u003d eT;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alages97"
        },
        "content": "        this.dateTime \u003d formatDateTime(eT.trim());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alages97"
        },
        "content": "        return \"E|\" + super.toString().trim() + \"|\" + dateTime.trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Formats the string input by user to date time."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param details Event details."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @return the formatted date time."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @throws DukeException if the details are not in the correct format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alages97"
        },
        "content": "    private String formatDateTime(String details) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alages97"
        },
        "content": "        StringBuilder formattedDateTime \u003d new StringBuilder();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alages97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alages97"
        },
        "content": "            String[] split \u003d details.split(\" \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alages97"
        },
        "content": "            String date \u003d split[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alages97"
        },
        "content": "            String time \u003d split[1];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alages97"
        },
        "content": "            String splitDate[] \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alages97"
        },
        "content": "            formattedDateTime.append(String.format(\"%02d\", Integer.parseInt(splitDate[0])));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alages97"
        },
        "content": "            formattedDateTime.append(\"/\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alages97"
        },
        "content": "            formattedDateTime.append(String.format(\"%02d\", Integer.parseInt(splitDate[1])));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alages97"
        },
        "content": "            formattedDateTime.append(\"/\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alages97"
        },
        "content": "            formattedDateTime.append(splitDate[2]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alages97"
        },
        "content": "            formattedDateTime.append(\" \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alages97"
        },
        "content": "            formattedDateTime.append(time);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alages97"
        },
        "content": "            return formattedDateTime.toString();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alages97"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alages97"
        },
        "content": "            throw new DukeException(\"the date time format entered is incorrect. \" +"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alages97"
        },
        "content": "                    \"Please enter again in the following format: dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alages97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alages97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alages97": 65
    }
  },
  {
    "path": "src/main/java/tasks/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alages97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alages97"
        },
        "content": "import customexceptions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alages97"
        },
        "content": "import tasks.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alages97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alages97"
        },
        "content": " * Represents a parser that parses the information that is input by the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alages97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alages97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Parses a deadline that is input by the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param input Input given by the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param t List of tasks input by the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param ui Ui object handling interactions with the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param s Storage object storing data input by the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @throws DukeException if user input is wrong."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public static void parseDeadline(String input, TaskList t, Ui ui, Storage s) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alages97"
        },
        "content": "        String deadlineDetails \u003d input.substring(9);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alages97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alages97"
        },
        "content": "            int index \u003d deadlineDetails.indexOf(\"/\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alages97"
        },
        "content": "            String name \u003d deadlineDetails.substring(0,index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alages97"
        },
        "content": "            String details \u003d deadlineDetails.substring(index+4);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alages97"
        },
        "content": "            Deadline deadline \u003d new Deadline(name, details);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alages97"
        },
        "content": "            if (details.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alages97"
        },
        "content": "                throw new DeadlineDetailsEmptyException(\"OOPS!!! tasks.Deadline details cannot be empty\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alages97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alages97"
        },
        "content": "            t.addTask(deadline);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alages97"
        },
        "content": "            ui.showAdded();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alages97"
        },
        "content": "            s.writeListToFile(t);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alages97"
        },
        "content": "            System.out.println(deadline);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alages97"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alages97"
        },
        "content": "            ui.inputWrong();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alages97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Parses a event that is input by the user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param input Input given by the user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param t List of tasks input by the user."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param ui Ui object handling interactions with the user."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param s Storage object storing data input by the user."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @throws DukeException if user input is wrong."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public static void parseEvent(String input, TaskList t,Ui ui,Storage s) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alages97"
        },
        "content": "        String eventDetails \u003d input.substring(6);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alages97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alages97"
        },
        "content": "            int index \u003d eventDetails.indexOf(\"/\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alages97"
        },
        "content": "            String name \u003d eventDetails.substring(0,index);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alages97"
        },
        "content": "            String details \u003d eventDetails.substring(index+3);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alages97"
        },
        "content": "            Event event \u003d new Event(name, details);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alages97"
        },
        "content": "            if (details.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alages97"
        },
        "content": "                throw new EventDetailsEmptyException(\"OOPS!!! tasks.Event details cannot be empty.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alages97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alages97"
        },
        "content": "            t.addTask(event);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alages97"
        },
        "content": "            ui.showAdded();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alages97"
        },
        "content": "            s.writeListToFile(t);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alages97"
        },
        "content": "            System.out.println(event);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alages97"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alages97"
        },
        "content": "            ui.inputWrong();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alages97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Parses a toDo that is input by the user."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param input Input given by the user."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param t List of tasks input by the user."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param ui Ui object handling interactions with the user."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param s Storage object storing data input by the user."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @throws DukeException if user input is wrong."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public static void parseToDo(String input, TaskList t,Ui ui,Storage s) throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alages97"
        },
        "content": "        if (input.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alages97"
        },
        "content": "            throw new TodoEmptyDescriptionException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alages97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alages97"
        },
        "content": "        ToDo todo \u003d new ToDo(input.substring(5));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alages97"
        },
        "content": "        t.addTask(todo);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alages97"
        },
        "content": "        ui.showAdded();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alages97"
        },
        "content": "        s.writeListToFile(t);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alages97"
        },
        "content": "        System.out.println(todo);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Parses a done command that is input by the user."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param input Input given by the user."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param t List of tasks input by the user."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param s Storage object storing data input by the user."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @throws DukeException if user input is wrong."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public static void parseDone(String input, TaskList t,Storage s) throws DukeException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alages97"
        },
        "content": "        String[] arr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alages97"
        },
        "content": "        int number \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alages97"
        },
        "content": "        if (number \u003e t.getCommandList().size() + 1) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alages97"
        },
        "content": "            throw new TaskNotFoundException(\"OOPS!!! tasks.Task number is incorrect\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alages97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alages97"
        },
        "content": "        t.getCommandList().get(number - 1).complete();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alages97"
        },
        "content": "        s.writeListToFile(t);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Parses a delete command that is input by the user."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param input Input given by the user."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param t List of tasks input by the user."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param ui Ui object handling interactions with the user."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param s Storage object storing data input by the user."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @throws DukeException if user input is wrong."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public static void parseDelete(String input, TaskList t,Ui ui, Storage s) throws DukeException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alages97"
        },
        "content": "        String[] arr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alages97"
        },
        "content": "        int number \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alages97"
        },
        "content": "        if (number \u003e t.getCommandList().size() + 1) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alages97"
        },
        "content": "            throw new TaskNotFoundException(\"OOPS!!! tasks.Task number is incorrect\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alages97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alages97"
        },
        "content": "        ui.showDeleted();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alages97"
        },
        "content": "        System.out.println(t.getCommandList().get(number - 1));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alages97"
        },
        "content": "        t.deleteTask(number);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alages97"
        },
        "content": "        s.writeListToFile(t);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public static void parseFind(String input, TaskList t, Ui ui, Storage s) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alages97"
        },
        "content": "        String[] arr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alages97"
        },
        "content": "        String keyword \u003d arr[1];"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alages97"
        },
        "content": "        ui.printMatching(t,keyword);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "alages97"
        },
        "content": "}"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alages97": 128
    }
  },
  {
    "path": "src/main/java/tasks/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alages97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alages97"
        },
        "content": "import customexceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alages97"
        },
        "content": "import tasks.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alages97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alages97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alages97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alages97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alages97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alages97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alages97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alages97"
        },
        "content": " * Represents a storage point for data that is input by the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alages97"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alages97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public File planner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Constructor for Storage object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param filePath path of the file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alages97"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alages97"
        },
        "content": "        planner \u003d new File(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alages97"
        },
        "content": "        setPlannerPermissions(planner);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alages97"
        },
        "content": "        ArrayList\u003cTask\u003e taskArrayList \u003d createTaskList(planner);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alages97"
        },
        "content": "        return taskArrayList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alages97"
        },
        "content": "        //loading"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Create a task list by reading the text file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param file Text file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @return taskArrayList. Array list of tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @throws DukeException if there is an error reading the file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public ArrayList\u003cTask\u003e createTaskList(File file) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alages97"
        },
        "content": "        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alages97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alages97"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alages97"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alages97"
        },
        "content": "                String[] taskDetails \u003d sc.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alages97"
        },
        "content": "                Task task \u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alages97"
        },
        "content": "                switch (taskDetails[0].trim()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alages97"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alages97"
        },
        "content": "                        task \u003d new ToDo(taskDetails[2].trim());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alages97"
        },
        "content": "                        setDoneFlag(task, taskDetails[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alages97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alages97"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alages97"
        },
        "content": "                        task \u003d new Deadline(taskDetails[2].trim(), taskDetails[3].trim());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alages97"
        },
        "content": "                        //System.out.println(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alages97"
        },
        "content": "                        setDoneFlag(task, taskDetails[1].trim());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alages97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alages97"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alages97"
        },
        "content": "                        task \u003d new Event(taskDetails[2].trim(), taskDetails[3].trim());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alages97"
        },
        "content": "                        setDoneFlag(task, taskDetails[1].trim());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alages97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alages97"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alages97"
        },
        "content": "                        throw new DukeException(\"File not in correct format\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alages97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alages97"
        },
        "content": "                taskArrayList.add(task);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alages97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alages97"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alages97"
        },
        "content": "            throw new DukeException(\"File not in correct format\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alages97"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alages97"
        },
        "content": "            return taskArrayList;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alages97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Sets the tasks to done accordingly"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param task Task."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param flag Flag to check if task is done."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public void setDoneFlag(Task task, String flag) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alages97"
        },
        "content": "        if (flag.equals(\"+\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alages97"
        },
        "content": "            task.changeSign();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alages97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Giving permissions to edit the file."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param planner Planner."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alages97"
        },
        "content": "    private void setPlannerPermissions(File planner) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alages97"
        },
        "content": "        planner.setExecutable(true);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alages97"
        },
        "content": "        planner.setReadable(true);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alages97"
        },
        "content": "        planner.setWritable(true);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Update the file with tasks from task list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param taskList task list."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @throws DukeException if there is an error with writing on the file."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public void writeListToFile(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alages97"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alages97"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d taskList.getCommandList();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alages97"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "alages97"
        },
        "content": "            sb.append(task);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alages97"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alages97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "alages97"
        },
        "content": "        writeStringToFile(sb.toString().trim());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Updates the file with individual strings."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param text String to update the file with."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @throws DukeException if there is an error with writing on the file."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public void writeStringToFile(String text) throws DukeException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "alages97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "alages97"
        },
        "content": "            FileWriter fw \u003d new FileWriter(planner);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "alages97"
        },
        "content": "            fw.write(text + \"\\n\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "alages97"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "alages97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "alages97"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "alages97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "alages97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alages97": 125
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alages97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alages97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alages97"
        },
        "content": " * Represents a task that is input by the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alages97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alages97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alages97"
        },
        "content": "    protected boolean completed \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alages97"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Constructor for task object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param name Task name."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alages97"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Marks task as complete"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public void complete() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alages97"
        },
        "content": "        this.completed \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alages97"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alages97"
        },
        "content": "        System.out.println(\"+|\" + this.name);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Returns name of task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @return name of task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alages97"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Changes the sign of impending task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public void changeSign() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alages97"
        },
        "content": "        completed \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alages97"
        },
        "content": "        if (!this.completed) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alages97"
        },
        "content": "            return \"-|\" + this.name;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alages97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alages97"
        },
        "content": "            return \"+|\" + this.name;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alages97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alages97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alages97": 50
    }
  },
  {
    "path": "src/main/java/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alages97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alages97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alages97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alages97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alages97"
        },
        "content": " * Represents list of tasks stored by the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alages97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alages97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alages97"
        },
        "content": "    private ArrayList\u003cTask\u003e commandList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Constructor for TaskList Object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param commandList list of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e commandList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alages97"
        },
        "content": "        this.commandList \u003d commandList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * return list of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @return commandList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public ArrayList\u003cTask\u003e getCommandList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alages97"
        },
        "content": "        return commandList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Removes a task from tasklist."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param number index of task to be deleted."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public void deleteTask(int number) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alages97"
        },
        "content": "        this.getCommandList().remove(number - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Adds task to the tasklist."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param task Task to be added to the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alages97"
        },
        "content": "        this.commandList.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alages97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alages97": 44
    }
  },
  {
    "path": "src/main/java/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alages97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alages97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alages97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alages97"
        },
        "content": " * Represents a ToDo Object input by the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alages97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alages97"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Constructor for todo object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param name Name of object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alages97"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alages97"
        },
        "content": "        return \"T|\" + super.toString().trim();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alages97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alages97": 21
    }
  },
  {
    "path": "src/main/java/tasks/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alages97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alages97"
        },
        "content": "import tasks.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alages97"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alages97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alages97"
        },
        "content": " * Represents a UI object that communicates with the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alages97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alages97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Shows the welcome message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alages97"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alages97"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Shows the message when a task has been added."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public void showAdded() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alages97"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Shows the message when a wrong input has been detected."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public void inputWrong() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alages97"
        },
        "content": "        System.out.println(\"Input format is wrong.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Shows the message when a task has been deleted."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public void showDeleted() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alages97"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Shows the goodbye message."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alages97"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Prints out the list of tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param t taskList."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param s Storage where the data has been stored."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public void printList(TaskList t, Storage s) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alages97"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alages97"
        },
        "content": "        int size \u003d t.getCommandList().size();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alages97"
        },
        "content": "        for (int i \u003d 1; i \u003c size + 1; i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alages97"
        },
        "content": "            System.out.print(i + \".\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alages97"
        },
        "content": "            System.out.println(t.getCommandList().get(i - 1));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alages97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Prints out the error message."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @param e Error."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public void showError(String e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alages97"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public void printMatching(TaskList t, String keyword) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alages97"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alages97"
        },
        "content": "        int size \u003d t.getCommandList().size();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alages97"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alages97"
        },
        "content": "        for (int i \u003d 1; i \u003c size + 1; i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alages97"
        },
        "content": "            if (t.getCommandList().get(i-1).getName().contains(keyword)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alages97"
        },
        "content": "                System.out.print(counter + \".\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alages97"
        },
        "content": "                System.out.println(t.getCommandList().get(i - 1));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alages97"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alages97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alages97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alages97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alages97": 80
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alages97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alages97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alages97"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alages97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alages97"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alages97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alages97": 10
    }
  },
  {
    "path": "src/test/java/tasks/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alages97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alages97"
        },
        "content": "import customexceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alages97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alages97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alages97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alages97"
        },
        "content": " * Represents the test for a deadline object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alages97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alages97"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Tests the toString() method of a deadline object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @throws DukeException if the date time has been input in the wrong format."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alages97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public void testStringConversion() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alages97"
        },
        "content": "        assertEquals(\"D|-|test|20/10/2019 2100\", new Deadline(\"test\",\"20/10/2019 2100\").toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alages97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alages97": 20
    }
  },
  {
    "path": "src/test/java/tasks/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alages97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alages97"
        },
        "content": "import customexceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alages97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alages97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alages97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alages97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alages97"
        },
        "content": " * Tests the event object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alages97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alages97"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alages97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * Tests the toString() method of the event object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alages97"
        },
        "content": "     * @throws DukeException if the date time has been input in the wrong format."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alages97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alages97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alages97"
        },
        "content": "    public void testStringConversion() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alages97"
        },
        "content": "        assertEquals(\"E|-|test|20/10/2019 2100\", new Event(\"test\",\"20/10/2019 2100\").toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alages97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alages97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alages97": 20
    }
  }
]
