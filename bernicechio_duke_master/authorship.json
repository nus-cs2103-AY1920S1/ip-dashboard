[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "bernicechio": 23,
      "-": 15
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "[T][✓] read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "[E][✓] read book Thu Jun 13 13:10:00 SGT 2019"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "[D][✘] read book Thu Jun 13 13:10:00 SGT 2019"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 3
    }
  },
  {
    "path": "src/main/java/duke/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a command to add task. An \u003ccode\u003eAddCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an input from user to add task e.g., todo read book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Executes the command, adds task to the task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * User interface prints out message to user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If saving tasks in the file throws exception, user interface prints out exception message to user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param tasks Contains the task list ."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param ui Deals with interactions with the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param storage Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        tasks.addTask(this.task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        ui.printAddMessage(this.task, tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            storage.writeToHardDisk(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            ui.printException(ex);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns false for exit status."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If exit status is false, Duke continues operating."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns true if two instances of AddCommand are equal."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Otherwise, returns false."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param o  An object."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (o instanceof AddCommand) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            AddCommand addCommand \u003d (AddCommand) o;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return this.task.equals(addCommand.task);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 61
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a Command object. A \u003ccode\u003eCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an input from user e.g., bye"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Executes the command, accesses the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * User interface prints out message to user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Throws exception if task is not found."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param tasks Contains the task list ."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param ui Deals with interactions with the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param storage Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns false for exit status."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If exit status is false, Duke continues operating."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 25
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a Deadline object. A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an agenda to be done by."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Sets the date of the deadline in a simple date format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If unable to parse the date, exception is thrown."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param time  String containing date and time of deadline."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @throws ParseException  If unable to parse date."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public void parseTime(String time) throws ParseException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.date \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\").parse(time);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns the string representation of the Deadline object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return \"[\" + this.type + \"][\" + this.getStatusIcon() + \"] \" + this.description + this.date;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns true if two instances of Deadline are equal."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Otherwise, returns false."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param o  An object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (o instanceof Deadline) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            Deadline deadline \u003d (Deadline) o;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return deadline.toString().equals(this.toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 54
    }
  },
  {
    "path": "src/main/java/duke/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a command to delete task. An \u003ccode\u003eDeleteCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an input from user to delete task e.g., delete 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Executes the command, deletes task from the task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Throws exception if task is not found."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If saving tasks in the file throws exception, user interface prints out exception message to user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * User interface prints out message to user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param tasks Contains the task list ."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param ui Deals with interactions with the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param storage Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (index \u003e tasks.getListSize()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(\"OOPS!!! duke.Task not found.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        Task task \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        tasks.deleteTask(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            storage.writeToHardDisk(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            ui.printException(ex);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        ui.printDeleteMessage(task, tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns false for exit status."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If exit status is false, Duke continues operating."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns true if two instances of DeleteCommand are equal."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Otherwise, returns false."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param o  An object."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (o instanceof DeleteCommand) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            DeleteCommand deleteCommand \u003d (DeleteCommand) o;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return this.index \u003d\u003d deleteCommand.index;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 66
    }
  },
  {
    "path": "src/main/java/duke/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a command to mark task as done. An \u003ccode\u003eDoneCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an input from user to mark task as done e.g., done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Executes the command, marks task as done in the task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Throws exception if task is not found."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If saving tasks in the file throws exception, user interface prints out exception message to user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * User interface prints out message to user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param tasks Contains the task list ."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param ui Deals with interactions with the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param storage Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (index \u003e tasks.getListSize()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(\"OOPS!!! duke.Task not found.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        Task task \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            storage.writeToHardDisk(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            ui.printException(ex);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        ui.printDoneMessage(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns false for exit status."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If exit status is false, Duke continues operating."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns true if two instances of DoneCommand are equal."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Otherwise, returns false."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param o  An object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (o instanceof DoneCommand) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            DoneCommand doneCommand \u003d (DoneCommand) o;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return this.index \u003d\u003d doneCommand.index;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 65
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a Duke object. A \u003ccode\u003eDuke\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an object that stores and parses tasks for user"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Operates the Duke object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Creates new Duke object."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        new Duke(\"/Users/Bernice/Desktop/CS2103T/duke/duke.txt\").run();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 50,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a DukeException object. A \u003ccode\u003eDukeException\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an exception to be thrown in Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "bernicechio": 13
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents an Event object. A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an occasion to be at."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Sets the date of the event in a simple date format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If unable to parse the date, exception is thrown."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param time  String containing date and time of event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @throws ParseException  If unable to parse date."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public void parseTime(String time) throws ParseException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.date \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\").parse(time);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns the string representation of the Event object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return \"[\" + this.type + \"][\" + this.getStatusIcon() + \"] \" + this.description + this.date;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns true if two instances of Event are equal."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Otherwise, returns false."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param o  An object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (o instanceof Event) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            Event event \u003d (Event) o;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return this.toString().equals(event.toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 54
    }
  },
  {
    "path": "src/main/java/duke/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a command to exit Duke. An \u003ccode\u003eExitCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an input from user to exit Duke e.g., bye"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * User interface prints out message to user and closes scanner."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param tasks Contains the task list ."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param ui Deals with interactions with the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param storage Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        ui.printExitMessage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        ui.closeScanner();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns true for exit status."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If exit status is true, Duke stops operating."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return true."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns true if two instances of ExitCommand are equal."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Otherwise, returns false."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param o  An object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return o instanceof ExitCommand;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 43
    }
  },
  {
    "path": "src/main/java/duke/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    String word;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public FindCommand(String word) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.word \u003d word;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        ui.printFindMessage();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        for (Task t: tasks.taskList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            if (t.description.contains(word)) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                System.out.println(counter + \". \" + t);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 26
    }
  },
  {
    "path": "src/main/java/duke/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a command to list all tasks. An \u003ccode\u003eListCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an input from user to list all tasks in the task list e.g., list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * User interface prints out message to user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Prints out each task in the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param tasks Contains the task list ."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param ui Deals with interactions with the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param storage Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        ui.printListMessage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        for (Task t : tasks.taskList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            System.out.println(counter + \". \" + t);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns false for exit status."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If exit status is false, Duke continues operating."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns true if two instances of ListCommand are equal."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Otherwise, returns false."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param o  An object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return o instanceof ListCommand;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 50
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a Parser object in the Duke. A \u003ccode\u003eParser\u003c/code\u003e object parses"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * string command given by user and creates new Command object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns a new Command object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If the command is invalid, Duke Exception is thrown."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param fullCommand  String containing command from user input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return new Command object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @throws DukeException  If command is invalid."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String[] arr \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String firstWord \u003d arr[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        switch (firstWord) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            int index \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            int indexDone \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return new DoneCommand(indexDone);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            String what \u003d arr[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            if (what.isEmpty()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            Todo todo \u003d new Todo(what);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return new AddCommand(todo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            String when \u003d arr[1];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            if (when.isEmpty()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            String[] parts \u003d when.split(\"/by\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            if (parts.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                throw new DukeException(\"OOPS!!! The time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            String desc \u003d parts[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            String time \u003d parts[1];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            Deadline deadline \u003d new Deadline(desc);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                deadline.parseTime(time);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            } catch (ParseException ex) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                throw new DukeException(ex.getMessage());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return new AddCommand(deadline);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            String where \u003d arr[1];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            if (where.isEmpty()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            String[] partsE \u003d where.split(\"/at\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            if (partsE.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                throw new DukeException(\"OOPS!!! The time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            String descE \u003d partsE[0];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            String timeE \u003d partsE[1];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            Event event \u003d new Event(descE);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                event.parseTime(timeE);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            } catch (ParseException ex) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                throw new DukeException(ex.getMessage());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return new AddCommand(event);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            String word \u003d arr[1];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            if (word.isEmpty()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what to find :-(\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return new FindCommand(word);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 86
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a Storage object in the Duke. A \u003ccode\u003eStorage\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * writing and loading data to a file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    Storage(String filepath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns the list of tasks saved previously."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If there is input output exception, Duke Exception is thrown."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return ArrayList list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @throws DukeException If there is input output exception."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        ArrayList\u003cTask\u003e alist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        BufferedReader br;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            br \u003d new BufferedReader(new FileReader(filepath));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            char tick \u003d \u0027\\u2713\u0027;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                String description \u003d line.substring(7);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                if (line.charAt(1) \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                    Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                    if (line.charAt(4) \u003d\u003d tick) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                        todo.markDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                    alist.add(todo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                } else if (line.charAt(1) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                    Deadline deadline \u003d new Deadline(description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                    if (line.charAt(4) \u003d\u003d tick) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                        deadline.markDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                    alist.add(deadline);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                    Event event \u003d new Event(description);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                    if (line.charAt(4) \u003d\u003d tick) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                        event.markDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                    alist.add(event);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(ex.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return alist;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Saves all tasks to the file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If there is input output exception, Duke Exception is thrown."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param tasks  TaskList containing list of tasks"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @throws DukeException  If there is input output exception."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void writeToHardDisk(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            for (Task t: tasks.taskList) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                fileWriter.write(t.toString() + \"\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            fileWriter.flush();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 84
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a Task object. A \u003ccode\u003eTask\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an agenda to be done."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns tick symbol if task is done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Otherwise, returns X."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return String tick or X symbol."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Sets done status to true."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 35
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a TaskList object. A \u003ccode\u003eTaskList\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an object containing the list of tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Removes task from the task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param task Task to be deleted."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void deleteTask(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        taskList.remove(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Adds task to the task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void addTask(Task task) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Gets current size of the task list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return int Task list size."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Gets task from corresponding index of the task list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return Task from corresponding index of the task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    Task getTask(int index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return taskList.get(index - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 55
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a Todo object. A \u003ccode\u003eTodo\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * a task to be done."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns the string representation of the Todo object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return \"[\" + this.type + \"][\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns true if two instances of Todo are equal."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Otherwise, returns false."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param o  An object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (o instanceof Todo) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            Todo todo \u003d (Todo) o;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return this.description.equals(todo.description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 37
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a User interface object. A \u003ccode\u003eUser interface\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an interface that deals with interactions with the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Greets user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void showWelcome() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        System.out.println(\"Hello! I\u0027m duke.Duke\\n\" + \"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns full command directly from user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return String full command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    String readCommand() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Closes scanner."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void closeScanner() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Prints formatting line."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void showLine() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        System.out.println(\"_____________________________________________________________________________\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Prints exit command message."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void printExitMessage() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Prints list command message."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void printListMessage() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Prints find command message."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void printFindMessage() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Prints delete command message."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void printDeleteMessage(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getListSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Prints done command message."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void printDoneMessage(Task task) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                + \"[\" + task.getStatusIcon() + \"] \" + task.description);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Prints add command message."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void printAddMessage(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getListSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Prints exception message."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void printException(Exception ex) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Prints loading error message."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void showLoadingError() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        System.out.println(\"Loading Error\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Prints error message."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void showError(String errorMessage) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 120
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void parse_byeCommand() throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        assertEquals(new ExitCommand(), Parser.parse(\"bye\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void parse_listCommand() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        assertEquals(new ListCommand(), Parser.parse(\"list\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void parse_deleteCommand() throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        assertEquals(new DeleteCommand(1), Parser.parse(\"delete 1\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void parse_doneCommand() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        assertEquals(new DoneCommand(1), Parser.parse(\"done 1\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void parse_todoCommand() throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        assertEquals(new AddCommand(new Todo(\"read book\")), Parser.parse(\"todo read book\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void parse_deadlineCommand() throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        Deadline expectedDeadline \u003d new Deadline(\"return book\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            expectedDeadline.parseTime(\"06/06/2019 1800\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        } catch (ParseException ex) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(ex.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        assertEquals(new AddCommand(expectedDeadline), Parser.parse(\"deadline return book /by 06/06/2019 1800\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void parse_eventCommand() throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        Event expectedEvent \u003d new Event(\"project meeting\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            expectedEvent.parseTime(\"2/12/2019 1400\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        } catch (ParseException ex) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(ex.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        assertEquals(new AddCommand(expectedEvent), Parser.parse(\"event project meeting /at 2/12/2019 1400\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 57
    }
  }
]
