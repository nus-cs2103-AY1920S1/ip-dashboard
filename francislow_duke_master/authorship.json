[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "T|1|teach junior how to skate"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": "D|0|return book|Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "T|1|skateeeeee"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "T|0|math tut"
      }
    ],
    "authorContributionMap": {
      "francislow": 4
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private LocalDateTime localDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public Deadline(String name, boolean isDone, String time, LocalDateTime localDateTime) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "        this.localDateTime \u003d localDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public LocalDateTime getLocalDateTime() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return localDateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + getName() + \" (by: \" + localDateTime.toString()  + \")\";    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 24
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "        // Greet user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "        ui.showInitialListMessage(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "        // Ask initial user input"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": "            String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "            String firstWordOfCommand \u003d Parser.getFirstWord(fullCommand);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": "            // Bye"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": "            if (firstWordOfCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "francislow"
        },
        "content": "                isExit \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "francislow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "francislow"
        },
        "content": "            // List"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "francislow"
        },
        "content": "            else if (firstWordOfCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "francislow"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "francislow"
        },
        "content": "                // Output current items in list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "francislow"
        },
        "content": "                for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    int currentItemNumber \u003d i + 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    Task currentTask \u003d tasks.get(i);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    System.out.println(currentItemNumber + \".\" + currentTask);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "francislow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "francislow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "francislow"
        },
        "content": "            // Done"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "francislow"
        },
        "content": "            else if (firstWordOfCommand.equals(\"done\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "francislow"
        },
        "content": "                int itemId \u003d Integer.parseInt(Parser.excludeFirstWord(fullCommand, \"done\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "francislow"
        },
        "content": "                Task currentTask \u003d tasks.get(itemId - 1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "francislow"
        },
        "content": "                currentTask.setDone(true);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "francislow"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\\n[1] \" + currentTask.getName());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "francislow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "francislow"
        },
        "content": "            // Delete"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "francislow"
        },
        "content": "            else if (firstWordOfCommand.equals(\"delete\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "francislow"
        },
        "content": "                int itemId \u003d Integer.parseInt(Parser.excludeFirstWord(fullCommand, \"delete\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "francislow"
        },
        "content": "                Task currentTask \u003d tasks.get(itemId - 1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "francislow"
        },
        "content": "                tasks.remove(currentTask);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "francislow"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "francislow"
        },
        "content": "                System.out.println(currentTask);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "francislow"
        },
        "content": "                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "francislow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "francislow"
        },
        "content": "            // Add"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "francislow"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "francislow"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    // to do"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    if (firstWordOfCommand.equals(\"todo\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        // Remaining words"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        String name \u003d Parser.excludeFirstWord(fullCommand, \"todo\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        if (name.equals(\"\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "francislow"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        // Add new task to list"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        Todo newTodo \u003d new Todo(name, false);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        tasks.add(newTodo);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    // deadline"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    else if (firstWordOfCommand.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        // Remaining words"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        String remainingWords \u003d Parser.excludeFirstWord(fullCommand, \"deadline\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        String name \u003d Parser.splitIntoNameAndTime(remainingWords, \" /by \")[0];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        String dateTime \u003d Parser.splitIntoNameAndTime(remainingWords, \" /by \")[1];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        LocalDateTime localDateTime \u003d Parser.changeToDateTimeFormat(dateTime);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        // Add new task to list"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        Deadline newDeadline \u003d new Deadline(name, false, dateTime, localDateTime);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        tasks.add(newDeadline);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    // event"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    else if (firstWordOfCommand.equals(\"event\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        // Remaining words"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        String remainingWords \u003d Parser.excludeFirstWord(fullCommand, \"event\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        String name \u003d Parser.splitIntoNameAndTime(remainingWords, \" /at \")[0];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        String dateTime \u003d Parser.splitIntoNameAndTime(remainingWords, \" /at \")[1];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        LocalDateTime localDateTime \u003d Parser.changeToDateTimeFormat(dateTime);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        // Add new task to list"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        Event newEvent \u003d new Event(name, false, dateTime, localDateTime);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        tasks.add(newEvent);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    // default"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    // Print output of ADD"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    System.out.println(tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "francislow"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    ui.showErrorMessage(e);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "francislow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "francislow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "francislow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "francislow"
        },
        "content": "        // At this point userinput equals \"bye\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "francislow"
        },
        "content": "        // Save data to file"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "francislow"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "francislow"
        },
        "content": "        ui.showGoodbyeMessage();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "francislow"
        },
        "content": "        new Duke(\"../data/duke.txt\").run();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 115,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private LocalDateTime localDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public Event(String name, boolean isDone, String time, LocalDateTime localDateTime) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "        this.localDateTime \u003d localDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public LocalDateTime getLocalDateTime() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return localDateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + getName() + \" (at: \" + localDateTime.toString()  + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 25
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public static String getFirstWord(String fullCommand) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return fullCommand.split(\" \")[0];"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public static String excludeFirstWord(String fullCommand, String firstWord) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return fullCommand.replaceFirst(firstWord, \"\").trim();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public static String[] splitIntoNameAndTime(String string, String regex) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return string.split(regex, 2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "    /* Change user input time format(2/12/2019 1800) to LocalDateTime format */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public static LocalDateTime changeToDateTimeFormat(String dateTime) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String date \u003d dateTime.split(\" \")[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "        String time \u003d dateTime.split(\" \")[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": "        LocalDate localDate \u003d LocalDate.of(Integer.parseInt(date.split(\"/\")[2]),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "                Integer.parseInt(date.split(\"/\")[1]),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "                Integer.parseInt(date.split(\"/\")[0]));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": "        LocalTime localTime \u003d LocalTime.of(Integer.parseInt(time.substring(0, 2)), Integer.parseInt(time.substring(2, 4)));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return LocalDateTime.of(localDate, localTime);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 29
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "    /* Add initial stored tasks into ArrayList and return it */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "            Scanner sc \u003d new Scanner(new File(filePath));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": "                String currentLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "                String[] words \u003d currentLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "                boolean isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": "                if (words[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "francislow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "francislow"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    isDone \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "francislow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "francislow"
        },
        "content": "                if (words[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    tasks.add(new Todo(words[2], isDone));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "francislow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "francislow"
        },
        "content": "                else if (words[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    LocalDateTime formatDateTime \u003d LocalDateTime.parse(words[3], formatter);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    tasks.add(new Deadline(words[2], isDone, words[3], formatDateTime));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "francislow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "francislow"
        },
        "content": "                else if (words[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    LocalDateTime formatDateTime \u003d LocalDateTime.parse(words[3], formatter);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    tasks.add(new Event(words[2], isDone, words[3], formatDateTime));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "francislow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "francislow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "francislow"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "francislow"
        },
        "content": "            System.out.println(\"No such file to get data from.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "francislow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "francislow"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "francislow"
        },
        "content": "            PrintWriter out \u003d new PrintWriter(new File(filePath));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "francislow"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "francislow"
        },
        "content": "                Task currentTask \u003d tasks.get(i);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "francislow"
        },
        "content": "                if (currentTask instanceof Todo) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    out.print(\"T|\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    if (currentTask.hasDone()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        out.print(\"1|\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        out.print(\"0|\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    out.println(currentTask.getName());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "francislow"
        },
        "content": "                } else if (currentTask instanceof Deadline) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    out.print(\"D|\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    if (currentTask.hasDone()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        out.print(\"1|\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        out.print(\"0|\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    out.print(currentTask.getName());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    out.print(\"|\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    String recordingDateTimeString \u003d ((Deadline) currentTask).getLocalDateTime().toString().replace(\"T\", \" \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    out.println(recordingDateTimeString);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "francislow"
        },
        "content": "                } else if (currentTask instanceof Event) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    out.print(\"E|\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    if (currentTask.hasDone()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        out.print(\"1|\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "francislow"
        },
        "content": "                        out.print(\"0|\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    out.print(currentTask.getName());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    out.print(\"|\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    String recordingDateTimeString \u003d ((Event) currentTask).getLocalDateTime().toString().replace(\"T\", \" \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "francislow"
        },
        "content": "                    out.println(recordingDateTimeString);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "francislow"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "francislow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "francislow"
        },
        "content": "            out.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "francislow"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "francislow"
        },
        "content": "            System.out.println(\"No such file to save data to.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "francislow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 93
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public Task(String name, boolean isDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public boolean hasDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return (isDone ? \"1\" : \"0\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "francislow"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 29
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public void add(Task newTask) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public void remove(Task newTask) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "        tasks.remove(newTask);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return tasks.get(i);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 25
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public Todo(String name, boolean isDone) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + getName();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 10
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "    private Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public void showInitialListMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "            System.out.println(\"You do not have any stored tasks\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "            System.out.println(\"This is your current list of tasks\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "                int currentItemNumber \u003d i + 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "                Task currentTask \u003d tasks.get(i);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "                System.out.println(currentItemNumber + \".\" + currentTask);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public void showGoodbyeMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public void showErrorMessage(Exception e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "francislow"
        },
        "content": "        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "francislow"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "francislow"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "francislow"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "francislow"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "francislow": 34
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "This is your current list of tasks"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "You do not have any stored tasks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "[T][0] teach junior how to skate"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "[D][0] return book (by: Sunday)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "[E][0] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "[1] teach junior how to skate"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "[1] project meeting"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": "1.[T][1] teach junior how to skate"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "2.[D][0] return book (by: Sunday)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "3.[E][1] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "francislow"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "francislow"
        },
        "content": "[E][1] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "francislow"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "francislow"
        },
        "content": "☹ OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "francislow"
        },
        "content": "☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "francislow"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "francislow": 27
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "todo teach junior how to skate"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": "todo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "blah"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "francislow": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "francislow"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "francislow"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "francislow"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "francislow"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "francislow"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "francislow"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "francislow"
        },
        "content": "javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "francislow"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "francislow"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "francislow"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "francislow"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "francislow"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "francislow"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "francislow"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "francislow"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "francislow"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "francislow"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "francislow": 21
    }
  }
]
