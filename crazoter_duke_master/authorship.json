[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "crazoter"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "crazoter"
        },
        "content": "public class Deadline extends TaskWithDate {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public Deadline(String description, String date) throws ParseException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        super(description, date);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + TASK_WITH_DATE_FORMATTER.format(date) + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "crazoter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crazoter": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "crazoter"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "crazoter"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "crazoter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "crazoter"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "crazoter"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    //enum TaskType { todo, deadline, event }//Unnecessary and prevents reusability"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    enum CommandType { done, delete }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    static final String WORKING_DIRECTORY \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    static final String SAVE_FILE_NAME \u003d \"save.txt\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    static final String ABSOLUTE_PATH_TO_SAVE_FILE \u003d WORKING_DIRECTORY + File.separator + SAVE_FILE_NAME;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    static final int NUMBER_OF_SAVE_PARAMS_TASK \u003d 3;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        List\u003cTask\u003e taskList \u003d loadFromSaveFile(ABSOLUTE_PATH_TO_SAVE_FILE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        String s;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        boolean tasksChanged;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        whileLoop: while (true) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            tasksChanged \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            s \u003d sc.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            switch (s) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                System.out.println(\"Here is the list of instructions: list, bye, done {index}, delete {index}, todo {description}, event {description} /at {date}, deadline {description} /by {date}\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            case \"bye\"://exit"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                break whileLoop;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            case \"list\"://list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                if (taskList.size() \u003e 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                    for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                        Task t \u003d taskList.get(i);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                        sb.append(i + 1).append(\" \").append(t);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                        System.out.println(sb);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                    System.out.println(\"There are no tasks in your list.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                if (s.indexOf(\"done\") \u003d\u003d 0) {//Set task to done"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                    indexBasedCommand(taskList, CommandType.done, s);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                    tasksChanged \u003d true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                } else if (s.indexOf(\"delete\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                    indexBasedCommand(taskList, CommandType.delete, s);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                    tasksChanged \u003d true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                } else if (s.indexOf(\"todo\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                    insertByCommand(taskList, \"todo\", s, true);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                    tasksChanged \u003d true;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                } else if (s.indexOf(\"event\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                    insertByCommand(taskList, \"event\", s, true);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                    tasksChanged \u003d true;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                } else if (s.indexOf(\"deadline\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                    insertByCommand(taskList, \"deadline\", s, true);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                    tasksChanged \u003d true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                if (tasksChanged) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                    saveToFile(taskList, ABSOLUTE_PATH_TO_SAVE_FILE);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public static void indexBasedCommand(List\u003cTask\u003e taskList, CommandType commandType, String command) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            int index \u003d -1;//0 Bounded"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            if (commandType.equals(CommandType.done)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                index +\u003d Integer.parseInt(command.replace(\"done\", \"\").trim());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                Task t \u003d taskList.get(index);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                t.markAsDone(true);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                System.out.println(\"  \" + t);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            } else if (commandType.equals(CommandType.delete)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                index +\u003d Integer.parseInt(command.replace(\"delete\", \"\").trim());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                Task t \u003d taskList.remove(index);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                System.out.println(\"  \" + t.toString());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The index is invalid.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public static void insertByCommand(List\u003cTask\u003e taskList, String taskName, String line, boolean outputResponse) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        String data \u003d line.replaceFirst(\"^.*?\\\\s\",\"\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        //If no change, then it\u0027s either empty, or invalid command"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        if (line.equals(data)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            if (line.equals(\"todo\") || line.equals(\"event\") || line.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                data \u003d \"\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        String[] splitData;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            switch (taskName) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                if (Task.validateData(data, \"todo\"))"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                    insertNewTask(taskList, new Todo(data), outputResponse);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                splitData \u003d TaskWithDate.extractDataFromLine(data, \" /at \");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                if (TaskWithDate.validateData(splitData, \"event\"))"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                    insertNewTask(taskList, new Event(splitData[0], splitData[1]), outputResponse);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                splitData \u003d TaskWithDate.extractDataFromLine(data, \" /by \");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                if (TaskWithDate.validateData(splitData, \"deadline\"))"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                    insertNewTask(taskList, new Deadline(splitData[0], splitData[1]), outputResponse);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            System.out.println(\"Failed to add task because date is not in the right format (should be in dd/MM/yyyy HHmm)\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public static void insertNewTask(List\u003cTask\u003e taskList, Task taskToInsert, boolean outputResponse) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        if(taskToInsert !\u003d null) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            taskList.add(taskToInsert);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            if (outputResponse) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                System.out.println(\"  \" + taskToInsert.toString());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     * Load from save file (txt file in hard disk) (path currently hardcoded)."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     * @param path absolute path to file"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     * @return list of tasks"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public static List\u003cTask\u003e loadFromSaveFile(String path) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        List\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        // read the content from file"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        try(BufferedReader bufferedReader \u003d new BufferedReader("
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                new FileReader(path))) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            String line \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            while(line !\u003d null) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                //Process"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                processLineFromSaveFile(results, line);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                line \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            System.out.println(\"No file found at \" + path);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            System.out.println(\"An exception occurred when loading from file at \" + path);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        //Return this by default"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     * Process line(s) obtained from loadFromSaveFile"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     * @param taskList List of tasks"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     * @param line String, a line from the save text file"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     * @return Task|null"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public static void processLineFromSaveFile(List\u003cTask\u003e taskList, String line) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        String[] data \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        if (data.length \u003d\u003d NUMBER_OF_SAVE_PARAMS_TASK) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            insertByCommand(taskList, data[0], data[1], false);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            taskList.get(taskList.size() - 1).isDone \u003d data[2].equals(\"true\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            System.out.println(\"Error in parsing line from save file\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     * Save task list to txt file in hard disk (path currently hardcoded)."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     * @param taskList List of tasks"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     * @param path path to save file to"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public static void saveToFile(List\u003cTask\u003e taskList, String path) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        PrintWriter writer \u003d null;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            writer \u003d new PrintWriter(path, \"UTF-8\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                String taskCommand \u003d task.getClass().getName().toLowerCase();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                sb.append(taskCommand)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                        .append(\"|\")"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                        .append(taskCommand)"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                        .append(\" \")"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                        .append(task.getDescription());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                if (task instanceof Event) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                    sb.append(\" /at \")"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                            .append(((TaskWithDate) task).getParseableDateToString());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                    sb.append(\" /by \")"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                            .append(((TaskWithDate) task).getParseableDateToString());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                sb.append(\"|\")"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                        .append(task.isDone());"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                writer.println(sb);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            System.out.println(\"An exception occurred when saving to file.\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            if (writer !\u003d null) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "crazoter"
        },
        "content": "                writer.close();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crazoter": 214,
      "-": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "crazoter"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "crazoter"
        },
        "content": "public class Event extends TaskWithDate {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public Event(String description, String date) throws ParseException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        super(description, date);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + TASK_WITH_DATE_FORMATTER.format(date) + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "crazoter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crazoter": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "crazoter"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public void markAsDone(boolean done) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public String getStatusWithDescription() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     * Validate the input from the user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     * @param description Description of the task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     * @param taskName Name of the task e.g. event or deadline"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public static boolean validateData(String description, String taskName) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        if (description.length() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a \" + taskName + \" cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        return getStatusWithDescription();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "crazoter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crazoter": 57
    }
  },
  {
    "path": "src/main/java/TaskWithDate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "crazoter"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "crazoter"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "crazoter"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "crazoter"
        },
        "content": "public class TaskWithDate extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    static final SimpleDateFormat TASK_WITH_DATE_FORMATTER \u003d new SimpleDateFormat(\"dd \u0027of\u0027 MMMM yyyy, K:mma\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    static final SimpleDateFormat TASK_WITH_DATE_PARSER \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public TaskWithDate(String description, boolean isDone, String date) throws ParseException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        this.date \u003d TASK_WITH_DATE_PARSER.parse(date);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public TaskWithDate(String description, String date) throws ParseException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        this.date \u003d TASK_WITH_DATE_PARSER.parse(date);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     * The current format of input for a task with date is to add a /at or /on. This extracts the data from that format."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     * @param line Line of input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     * @param delimiter delimiter provided [\" /at \" or \" /on \"]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public static String[] extractDataFromLine(String line, String delimiter) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        return line.split(delimiter);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     * Verify that the data is correct before creating a task with data"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     * @param data the data as extracted from extractDataFromLine"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     * @param taskName Name of the task e.g. event or deadline"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "crazoter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public static boolean validateData(String[] data, String taskName) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        if (data[0].length() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a \" + taskName + \" cannot be empty.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        } else if (data.length \u003c\u003d 1 || data[1].length() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The date of a \" + taskName + \" cannot be empty.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "crazoter"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public String getFormattedDateToString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        return TASK_WITH_DATE_FORMATTER.format(date);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public String getParseableDateToString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        return TASK_WITH_DATE_PARSER.format(date);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public void setDate(Date date) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "crazoter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crazoter": 62
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "crazoter"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "crazoter"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "crazoter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crazoter": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "crazoter"
        },
        "content": "todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "crazoter"
        },
        "content": "event"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "crazoter"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "crazoter"
        },
        "content": "done"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "crazoter"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "crazoter"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "crazoter"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "crazoter"
        },
        "content": "todo1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "crazoter"
        },
        "content": "todo something"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "crazoter"
        },
        "content": "event dinner /at mondays"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "crazoter"
        },
        "content": "deadline project /by thursdays"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "crazoter"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "crazoter"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "crazoter"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "crazoter"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "crazoter"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "crazoter"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "crazoter"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "crazoter": 18
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "crazoter"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "crazoter"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "crazoter"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "crazoter"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "crazoter"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "crazoter"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "crazoter"
        },
        "content": "javac -cp ..\\src\\main\\java -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "crazoter"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "crazoter"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "crazoter"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "crazoter"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "crazoter"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "crazoter"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "crazoter"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "crazoter": 21
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "crazoter"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "crazoter"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "crazoter"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "crazoter"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "crazoter"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "crazoter"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "crazoter"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "crazoter"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "crazoter"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "crazoter"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "crazoter"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "crazoter"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "crazoter"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "crazoter"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "crazoter"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "crazoter"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "crazoter"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "crazoter"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "crazoter"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "crazoter"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "crazoter"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "crazoter"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "crazoter"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "crazoter": 34
    }
  }
]
